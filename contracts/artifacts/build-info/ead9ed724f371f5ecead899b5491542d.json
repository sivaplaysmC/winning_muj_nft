{
	"id": "ead9ed724f371f5ecead899b5491542d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Monke.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract Monke is ERC721 {\n\n    uint256 private _currentTokenId;\n\n    struct NFTMetadata {\n        uint256 valid_till;\n        string url; \n    }\n\n    mapping(uint256 => NFTMetadata) private _tokenMetadata;\n\n    mapping(uint256 => address) private _owners;\n\n    constructor(string memory name, string memory symbol) ERC721(name, symbol) {\n        _currentTokenId = 0;  // Initialize the token ID counter\n    }\n\n    function mintNFT(address recipient, uint256 valid_till, string memory url) public returns (uint256) {\n        _currentTokenId++;\n        uint256 newItemId = _currentTokenId;\n        _mint(recipient, newItemId);\n\n        _owners[newItemId] = recipient;\n\n        _tokenMetadata[newItemId] = NFTMetadata({\n            valid_till: valid_till,\n            url: url\n        });\n\n        return newItemId;\n    }\n\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    function getTokenMetadata(uint256 tokenId) public view returns (uint256, string memory) {\n        require(_exists(tokenId), \"Token does not exist\");\n        NFTMetadata memory metadata = _tokenMetadata[tokenId];\n        return (metadata.valid_till, metadata.url);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Monke.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Monke.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Monke.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Monke.sol": {
				"Monke": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getTokenMetadata",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "valid_till",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "url",
									"type": "string"
								}
							],
							"name": "mintNFT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Monke.sol\":117:1336  contract Monke is ERC721 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Monke.sol\":379:526  constructor(string memory name, string memory symbol) ERC721(name, symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Monke.sol\":440:444  name */\n  dup2\n    /* \"contracts/Monke.sol\":446:452  symbol */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/Monke.sol\":482:483  0 */\n  0x00\n    /* \"contracts/Monke.sol\":464:479  _currentTokenId */\n  0x06\n    /* \"contracts/Monke.sol\":464:483  _currentTokenId = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Monke.sol\":379:526  constructor(string memory name, string memory symbol) ERC721(name, symbol) {... */\n  pop\n  pop\n    /* \"contracts/Monke.sol\":117:1336  contract Monke is ERC721 {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_15:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_16:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_17:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_18:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_19:\n    /* \"#utility.yul\":957:984   */\n  tag_53\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_55\n  tag_18\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1030:1118   */\ntag_54:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_20:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_57\n  tag_12\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_58\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_21:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_61\n  tag_18\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1434:1490   */\ntag_60:\n    /* \"#utility.yul\":1508:1537   */\n  tag_62\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_17\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_22:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_23:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_65\n    /* \"#utility.yul\":1885:1934   */\n  tag_66\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_21\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1869:1935   */\n  tag_20\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_68\n  tag_16\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2010:2122   */\ntag_67:\n    /* \"#utility.yul\":2131:2183   */\n  tag_69\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_22\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_24:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_72\n  tag_15\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2292:2414   */\ntag_71:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_73\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_23\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:3423   */\ntag_3:\n    /* \"#utility.yul\":2669:2675   */\n  0x00\n    /* \"#utility.yul\":2677:2683   */\n  dup1\n    /* \"#utility.yul\":2726:2728   */\n  0x40\n    /* \"#utility.yul\":2714:2723   */\n  dup4\n    /* \"#utility.yul\":2705:2712   */\n  dup6\n    /* \"#utility.yul\":2701:2724   */\n  sub\n    /* \"#utility.yul\":2697:2729   */\n  slt\n    /* \"#utility.yul\":2694:2813   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2732:2811   */\n  tag_76\n  tag_13\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2694:2813   */\ntag_75:\n    /* \"#utility.yul\":2873:2874   */\n  0x00\n    /* \"#utility.yul\":2862:2871   */\n  dup4\n    /* \"#utility.yul\":2858:2875   */\n  add\n    /* \"#utility.yul\":2852:2876   */\n  mload\n    /* \"#utility.yul\":2903:2921   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2895:2901   */\n  dup2\n    /* \"#utility.yul\":2892:2922   */\n  gt\n    /* \"#utility.yul\":2889:3006   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2925:3004   */\n  tag_78\n  tag_14\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2889:3006   */\ntag_77:\n    /* \"#utility.yul\":3030:3104   */\n  tag_79\n    /* \"#utility.yul\":3096:3103   */\n  dup6\n    /* \"#utility.yul\":3087:3093   */\n  dup3\n    /* \"#utility.yul\":3076:3085   */\n  dup7\n    /* \"#utility.yul\":3072:3094   */\n  add\n    /* \"#utility.yul\":3030:3104   */\n  tag_24\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3020:3104   */\n  swap3\n  pop\n    /* \"#utility.yul\":2823:3114   */\n  pop\n    /* \"#utility.yul\":3174:3176   */\n  0x20\n    /* \"#utility.yul\":3163:3172   */\n  dup4\n    /* \"#utility.yul\":3159:3177   */\n  add\n    /* \"#utility.yul\":3153:3178   */\n  mload\n    /* \"#utility.yul\":3205:3223   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3197:3203   */\n  dup2\n    /* \"#utility.yul\":3194:3224   */\n  gt\n    /* \"#utility.yul\":3191:3308   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3227:3306   */\n  tag_81\n  tag_14\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3191:3308   */\ntag_80:\n    /* \"#utility.yul\":3332:3406   */\n  tag_82\n    /* \"#utility.yul\":3398:3405   */\n  dup6\n    /* \"#utility.yul\":3389:3395   */\n  dup3\n    /* \"#utility.yul\":3378:3387   */\n  dup7\n    /* \"#utility.yul\":3374:3396   */\n  add\n    /* \"#utility.yul\":3332:3406   */\n  tag_24\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3322:3406   */\n  swap2\n  pop\n    /* \"#utility.yul\":3124:3416   */\n  pop\n    /* \"#utility.yul\":2570:3423   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3429:3528   */\ntag_25:\n    /* \"#utility.yul\":3481:3487   */\n  0x00\n    /* \"#utility.yul\":3515:3520   */\n  dup2\n    /* \"#utility.yul\":3509:3521   */\n  mload\n    /* \"#utility.yul\":3499:3521   */\n  swap1\n  pop\n    /* \"#utility.yul\":3429:3528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3534:3714   */\ntag_26:\n    /* \"#utility.yul\":3582:3659   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3579:3580   */\n  0x00\n    /* \"#utility.yul\":3572:3660   */\n  mstore\n    /* \"#utility.yul\":3679:3683   */\n  0x22\n    /* \"#utility.yul\":3676:3677   */\n  0x04\n    /* \"#utility.yul\":3669:3684   */\n  mstore\n    /* \"#utility.yul\":3703:3707   */\n  0x24\n    /* \"#utility.yul\":3700:3701   */\n  0x00\n    /* \"#utility.yul\":3693:3708   */\n  revert\n    /* \"#utility.yul\":3720:4040   */\ntag_27:\n    /* \"#utility.yul\":3764:3770   */\n  0x00\n    /* \"#utility.yul\":3801:3802   */\n  0x02\n    /* \"#utility.yul\":3795:3799   */\n  dup3\n    /* \"#utility.yul\":3791:3803   */\n  div\n    /* \"#utility.yul\":3781:3803   */\n  swap1\n  pop\n    /* \"#utility.yul\":3848:3849   */\n  0x01\n    /* \"#utility.yul\":3842:3846   */\n  dup3\n    /* \"#utility.yul\":3838:3850   */\n  and\n    /* \"#utility.yul\":3869:3887   */\n  dup1\n    /* \"#utility.yul\":3859:3940   */\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3925:3929   */\n  0x7f\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3913:3930   */\n  and\n    /* \"#utility.yul\":3903:3930   */\n  swap2\n  pop\n    /* \"#utility.yul\":3859:3940   */\ntag_86:\n    /* \"#utility.yul\":3987:3989   */\n  0x20\n    /* \"#utility.yul\":3979:3985   */\n  dup3\n    /* \"#utility.yul\":3976:3990   */\n  lt\n    /* \"#utility.yul\":3956:3974   */\n  dup2\n    /* \"#utility.yul\":3953:3991   */\n  sub\n    /* \"#utility.yul\":3950:4034   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4006:4024   */\n  tag_88\n  tag_26\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3950:4034   */\ntag_87:\n    /* \"#utility.yul\":3771:4040   */\n  pop\n    /* \"#utility.yul\":3720:4040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4046:4187   */\ntag_28:\n    /* \"#utility.yul\":4095:4099   */\n  0x00\n    /* \"#utility.yul\":4118:4121   */\n  dup2\n    /* \"#utility.yul\":4110:4121   */\n  swap1\n  pop\n    /* \"#utility.yul\":4141:4144   */\n  dup2\n    /* \"#utility.yul\":4138:4139   */\n  0x00\n    /* \"#utility.yul\":4131:4145   */\n  mstore\n    /* \"#utility.yul\":4175:4179   */\n  0x20\n    /* \"#utility.yul\":4172:4173   */\n  0x00\n    /* \"#utility.yul\":4162:4180   */\n  keccak256\n    /* \"#utility.yul\":4154:4180   */\n  swap1\n  pop\n    /* \"#utility.yul\":4046:4187   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4193:4286   */\ntag_29:\n    /* \"#utility.yul\":4230:4236   */\n  0x00\n    /* \"#utility.yul\":4277:4279   */\n  0x20\n    /* \"#utility.yul\":4272:4274   */\n  0x1f\n    /* \"#utility.yul\":4265:4270   */\n  dup4\n    /* \"#utility.yul\":4261:4275   */\n  add\n    /* \"#utility.yul\":4257:4280   */\n  div\n    /* \"#utility.yul\":4247:4280   */\n  swap1\n  pop\n    /* \"#utility.yul\":4193:4286   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4292:4399   */\ntag_30:\n    /* \"#utility.yul\":4336:4344   */\n  0x00\n    /* \"#utility.yul\":4386:4391   */\n  dup3\n    /* \"#utility.yul\":4380:4384   */\n  dup3\n    /* \"#utility.yul\":4376:4392   */\n  shl\n    /* \"#utility.yul\":4355:4392   */\n  swap1\n  pop\n    /* \"#utility.yul\":4292:4399   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4405:4798   */\ntag_31:\n    /* \"#utility.yul\":4474:4480   */\n  0x00\n    /* \"#utility.yul\":4524:4525   */\n  0x08\n    /* \"#utility.yul\":4512:4522   */\n  dup4\n    /* \"#utility.yul\":4508:4526   */\n  mul\n    /* \"#utility.yul\":4547:4644   */\n  tag_93\n    /* \"#utility.yul\":4577:4643   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4566:4575   */\n  dup3\n    /* \"#utility.yul\":4547:4644   */\n  tag_30\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4665:4704   */\n  tag_94\n    /* \"#utility.yul\":4695:4703   */\n  dup7\n    /* \"#utility.yul\":4684:4693   */\n  dup4\n    /* \"#utility.yul\":4665:4704   */\n  tag_30\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4653:4704   */\n  swap6\n  pop\n    /* \"#utility.yul\":4737:4741   */\n  dup1\n    /* \"#utility.yul\":4733:4742   */\n  not\n    /* \"#utility.yul\":4726:4731   */\n  dup5\n    /* \"#utility.yul\":4722:4743   */\n  and\n    /* \"#utility.yul\":4713:4743   */\n  swap4\n  pop\n    /* \"#utility.yul\":4786:4790   */\n  dup1\n    /* \"#utility.yul\":4776:4784   */\n  dup7\n    /* \"#utility.yul\":4772:4791   */\n  and\n    /* \"#utility.yul\":4765:4770   */\n  dup5\n    /* \"#utility.yul\":4762:4792   */\n  or\n    /* \"#utility.yul\":4752:4792   */\n  swap3\n  pop\n    /* \"#utility.yul\":4481:4798   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4798   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4804:4881   */\ntag_32:\n    /* \"#utility.yul\":4841:4848   */\n  0x00\n    /* \"#utility.yul\":4870:4875   */\n  dup2\n    /* \"#utility.yul\":4859:4875   */\n  swap1\n  pop\n    /* \"#utility.yul\":4804:4881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4887:4947   */\ntag_33:\n    /* \"#utility.yul\":4915:4918   */\n  0x00\n    /* \"#utility.yul\":4936:4941   */\n  dup2\n    /* \"#utility.yul\":4929:4941   */\n  swap1\n  pop\n    /* \"#utility.yul\":4887:4947   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4953:5095   */\ntag_34:\n    /* \"#utility.yul\":5003:5012   */\n  0x00\n    /* \"#utility.yul\":5036:5089   */\n  tag_98\n    /* \"#utility.yul\":5054:5088   */\n  tag_99\n    /* \"#utility.yul\":5063:5087   */\n  tag_100\n    /* \"#utility.yul\":5081:5086   */\n  dup5\n    /* \"#utility.yul\":5063:5087   */\n  tag_32\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5054:5088   */\n  tag_33\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5036:5089   */\n  tag_32\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":5023:5089   */\n  swap1\n  pop\n    /* \"#utility.yul\":4953:5095   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5101:5176   */\ntag_35:\n    /* \"#utility.yul\":5144:5147   */\n  0x00\n    /* \"#utility.yul\":5165:5170   */\n  dup2\n    /* \"#utility.yul\":5158:5170   */\n  swap1\n  pop\n    /* \"#utility.yul\":5101:5176   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5182:5451   */\ntag_36:\n    /* \"#utility.yul\":5292:5331   */\n  tag_103\n    /* \"#utility.yul\":5323:5330   */\n  dup4\n    /* \"#utility.yul\":5292:5331   */\n  tag_34\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5353:5444   */\n  tag_104\n    /* \"#utility.yul\":5402:5443   */\n  tag_105\n    /* \"#utility.yul\":5426:5442   */\n  dup3\n    /* \"#utility.yul\":5402:5443   */\n  tag_35\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5394:5400   */\n  dup5\n    /* \"#utility.yul\":5387:5391   */\n  dup5\n    /* \"#utility.yul\":5381:5392   */\n  sload\n    /* \"#utility.yul\":5353:5444   */\n  tag_31\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5347:5351   */\n  dup3\n    /* \"#utility.yul\":5340:5445   */\n  sstore\n    /* \"#utility.yul\":5258:5451   */\n  pop\n    /* \"#utility.yul\":5182:5451   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5457:5530   */\ntag_37:\n    /* \"#utility.yul\":5502:5505   */\n  0x00\n    /* \"#utility.yul\":5457:5530   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5536:5725   */\ntag_38:\n    /* \"#utility.yul\":5613:5645   */\n  tag_108\n  tag_37\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5654:5719   */\n  tag_109\n    /* \"#utility.yul\":5712:5718   */\n  dup2\n    /* \"#utility.yul\":5704:5710   */\n  dup5\n    /* \"#utility.yul\":5698:5702   */\n  dup5\n    /* \"#utility.yul\":5654:5719   */\n  tag_36\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5589:5725   */\n  pop\n    /* \"#utility.yul\":5536:5725   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5731:5917   */\ntag_39:\n    /* \"#utility.yul\":5791:5911   */\ntag_111:\n    /* \"#utility.yul\":5808:5811   */\n  dup2\n    /* \"#utility.yul\":5801:5806   */\n  dup2\n    /* \"#utility.yul\":5798:5812   */\n  lt\n    /* \"#utility.yul\":5791:5911   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5862:5901   */\n  tag_114\n    /* \"#utility.yul\":5899:5900   */\n  0x00\n    /* \"#utility.yul\":5892:5897   */\n  dup3\n    /* \"#utility.yul\":5862:5901   */\n  tag_38\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5835:5836   */\n  0x01\n    /* \"#utility.yul\":5828:5833   */\n  dup2\n    /* \"#utility.yul\":5824:5837   */\n  add\n    /* \"#utility.yul\":5815:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5791:5911   */\n  jump(tag_111)\ntag_113:\n    /* \"#utility.yul\":5731:5917   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5923:6466   */\ntag_40:\n    /* \"#utility.yul\":6024:6026   */\n  0x1f\n    /* \"#utility.yul\":6019:6022   */\n  dup3\n    /* \"#utility.yul\":6016:6027   */\n  gt\n    /* \"#utility.yul\":6013:6459   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6058:6096   */\n  tag_117\n    /* \"#utility.yul\":6090:6095   */\n  dup2\n    /* \"#utility.yul\":6058:6096   */\n  tag_28\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":6142:6171   */\n  tag_118\n    /* \"#utility.yul\":6160:6170   */\n  dup5\n    /* \"#utility.yul\":6142:6171   */\n  tag_29\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6132:6140   */\n  dup2\n    /* \"#utility.yul\":6128:6172   */\n  add\n    /* \"#utility.yul\":6325:6327   */\n  0x20\n    /* \"#utility.yul\":6313:6323   */\n  dup6\n    /* \"#utility.yul\":6310:6328   */\n  lt\n    /* \"#utility.yul\":6307:6356   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6346:6354   */\n  dup2\n    /* \"#utility.yul\":6331:6354   */\n  swap1\n  pop\n    /* \"#utility.yul\":6307:6356   */\ntag_119:\n    /* \"#utility.yul\":6369:6449   */\n  tag_120\n    /* \"#utility.yul\":6425:6447   */\n  tag_121\n    /* \"#utility.yul\":6443:6446   */\n  dup6\n    /* \"#utility.yul\":6425:6447   */\n  tag_29\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6415:6423   */\n  dup4\n    /* \"#utility.yul\":6411:6448   */\n  add\n    /* \"#utility.yul\":6398:6409   */\n  dup3\n    /* \"#utility.yul\":6369:6449   */\n  tag_39\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6028:6459   */\n  pop\n  pop\n    /* \"#utility.yul\":6013:6459   */\ntag_116:\n    /* \"#utility.yul\":5923:6466   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6472:6589   */\ntag_41:\n    /* \"#utility.yul\":6526:6534   */\n  0x00\n    /* \"#utility.yul\":6576:6581   */\n  dup3\n    /* \"#utility.yul\":6570:6574   */\n  dup3\n    /* \"#utility.yul\":6566:6582   */\n  shr\n    /* \"#utility.yul\":6545:6582   */\n  swap1\n  pop\n    /* \"#utility.yul\":6472:6589   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6595:6764   */\ntag_42:\n    /* \"#utility.yul\":6639:6645   */\n  0x00\n    /* \"#utility.yul\":6672:6723   */\n  tag_124\n    /* \"#utility.yul\":6720:6721   */\n  0x00\n    /* \"#utility.yul\":6716:6722   */\n  not\n    /* \"#utility.yul\":6708:6713   */\n  dup5\n    /* \"#utility.yul\":6705:6706   */\n  0x08\n    /* \"#utility.yul\":6701:6714   */\n  mul\n    /* \"#utility.yul\":6672:6723   */\n  tag_41\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6668:6724   */\n  not\n    /* \"#utility.yul\":6753:6757   */\n  dup1\n    /* \"#utility.yul\":6747:6751   */\n  dup4\n    /* \"#utility.yul\":6743:6758   */\n  and\n    /* \"#utility.yul\":6733:6758   */\n  swap2\n  pop\n    /* \"#utility.yul\":6646:6764   */\n  pop\n    /* \"#utility.yul\":6595:6764   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6769:7064   */\ntag_43:\n    /* \"#utility.yul\":6845:6849   */\n  0x00\n    /* \"#utility.yul\":6991:7020   */\n  tag_126\n    /* \"#utility.yul\":7016:7019   */\n  dup4\n    /* \"#utility.yul\":7010:7014   */\n  dup4\n    /* \"#utility.yul\":6991:7020   */\n  tag_42\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6983:7020   */\n  swap2\n  pop\n    /* \"#utility.yul\":7053:7056   */\n  dup3\n    /* \"#utility.yul\":7050:7051   */\n  0x02\n    /* \"#utility.yul\":7046:7057   */\n  mul\n    /* \"#utility.yul\":7040:7044   */\n  dup3\n    /* \"#utility.yul\":7037:7058   */\n  or\n    /* \"#utility.yul\":7029:7058   */\n  swap1\n  pop\n    /* \"#utility.yul\":6769:7064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7069:8464   */\ntag_8:\n    /* \"#utility.yul\":7186:7223   */\n  tag_128\n    /* \"#utility.yul\":7219:7222   */\n  dup3\n    /* \"#utility.yul\":7186:7223   */\n  tag_25\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":7288:7306   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7280:7286   */\n  dup2\n    /* \"#utility.yul\":7277:7307   */\n  gt\n    /* \"#utility.yul\":7274:7330   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":7310:7328   */\n  tag_130\n  tag_18\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":7274:7330   */\ntag_129:\n    /* \"#utility.yul\":7354:7392   */\n  tag_131\n    /* \"#utility.yul\":7386:7390   */\n  dup3\n    /* \"#utility.yul\":7380:7391   */\n  sload\n    /* \"#utility.yul\":7354:7392   */\n  tag_27\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7439:7506   */\n  tag_132\n    /* \"#utility.yul\":7499:7505   */\n  dup3\n    /* \"#utility.yul\":7491:7497   */\n  dup3\n    /* \"#utility.yul\":7485:7489   */\n  dup6\n    /* \"#utility.yul\":7439:7506   */\n  tag_40\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7533:7534   */\n  0x00\n    /* \"#utility.yul\":7557:7561   */\n  0x20\n    /* \"#utility.yul\":7544:7561   */\n  swap1\n  pop\n    /* \"#utility.yul\":7589:7591   */\n  0x1f\n    /* \"#utility.yul\":7581:7587   */\n  dup4\n    /* \"#utility.yul\":7578:7592   */\n  gt\n    /* \"#utility.yul\":7606:7607   */\n  0x01\n    /* \"#utility.yul\":7601:8219   */\n  dup2\n  eq\n  tag_134\n  jumpi\n    /* \"#utility.yul\":8263:8264   */\n  0x00\n    /* \"#utility.yul\":8280:8286   */\n  dup5\n    /* \"#utility.yul\":8277:8354   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8329:8338   */\n  dup3\n    /* \"#utility.yul\":8324:8327   */\n  dup8\n    /* \"#utility.yul\":8320:8339   */\n  add\n    /* \"#utility.yul\":8314:8340   */\n  mload\n    /* \"#utility.yul\":8305:8340   */\n  swap1\n  pop\n    /* \"#utility.yul\":8277:8354   */\ntag_135:\n    /* \"#utility.yul\":8380:8447   */\n  tag_136\n    /* \"#utility.yul\":8440:8446   */\n  dup6\n    /* \"#utility.yul\":8433:8438   */\n  dup3\n    /* \"#utility.yul\":8380:8447   */\n  tag_43\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":8374:8378   */\n  dup7\n    /* \"#utility.yul\":8367:8448   */\n  sstore\n    /* \"#utility.yul\":8236:8458   */\n  pop\n    /* \"#utility.yul\":7571:8458   */\n  jump(tag_133)\n    /* \"#utility.yul\":7601:8219   */\ntag_134:\n    /* \"#utility.yul\":7653:7657   */\n  0x1f\n    /* \"#utility.yul\":7649:7658   */\n  not\n    /* \"#utility.yul\":7641:7647   */\n  dup5\n    /* \"#utility.yul\":7637:7659   */\n  and\n    /* \"#utility.yul\":7687:7724   */\n  tag_137\n    /* \"#utility.yul\":7719:7723   */\n  dup7\n    /* \"#utility.yul\":7687:7724   */\n  tag_28\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7746:7747   */\n  0x00\n    /* \"#utility.yul\":7760:7968   */\ntag_138:\n    /* \"#utility.yul\":7774:7781   */\n  dup3\n    /* \"#utility.yul\":7771:7772   */\n  dup2\n    /* \"#utility.yul\":7768:7782   */\n  lt\n    /* \"#utility.yul\":7760:7968   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":7853:7862   */\n  dup5\n    /* \"#utility.yul\":7848:7851   */\n  dup10\n    /* \"#utility.yul\":7844:7863   */\n  add\n    /* \"#utility.yul\":7838:7864   */\n  mload\n    /* \"#utility.yul\":7830:7836   */\n  dup3\n    /* \"#utility.yul\":7823:7865   */\n  sstore\n    /* \"#utility.yul\":7904:7905   */\n  0x01\n    /* \"#utility.yul\":7896:7902   */\n  dup3\n    /* \"#utility.yul\":7892:7906   */\n  add\n    /* \"#utility.yul\":7882:7906   */\n  swap2\n  pop\n    /* \"#utility.yul\":7951:7953   */\n  0x20\n    /* \"#utility.yul\":7940:7949   */\n  dup6\n    /* \"#utility.yul\":7936:7954   */\n  add\n    /* \"#utility.yul\":7923:7954   */\n  swap5\n  pop\n    /* \"#utility.yul\":7797:7801   */\n  0x20\n    /* \"#utility.yul\":7794:7795   */\n  dup2\n    /* \"#utility.yul\":7790:7802   */\n  add\n    /* \"#utility.yul\":7785:7802   */\n  swap1\n  pop\n    /* \"#utility.yul\":7760:7968   */\n  jump(tag_138)\ntag_140:\n    /* \"#utility.yul\":7996:8002   */\n  dup7\n    /* \"#utility.yul\":7987:7994   */\n  dup4\n    /* \"#utility.yul\":7984:8003   */\n  lt\n    /* \"#utility.yul\":7981:8160   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":8054:8063   */\n  dup5\n    /* \"#utility.yul\":8049:8052   */\n  dup10\n    /* \"#utility.yul\":8045:8064   */\n  add\n    /* \"#utility.yul\":8039:8065   */\n  mload\n    /* \"#utility.yul\":8097:8145   */\n  tag_142\n    /* \"#utility.yul\":8139:8143   */\n  0x1f\n    /* \"#utility.yul\":8131:8137   */\n  dup10\n    /* \"#utility.yul\":8127:8144   */\n  and\n    /* \"#utility.yul\":8116:8125   */\n  dup3\n    /* \"#utility.yul\":8097:8145   */\n  tag_42\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":8089:8095   */\n  dup4\n    /* \"#utility.yul\":8082:8146   */\n  sstore\n    /* \"#utility.yul\":8004:8160   */\n  pop\n    /* \"#utility.yul\":7981:8160   */\ntag_141:\n    /* \"#utility.yul\":8206:8207   */\n  0x01\n    /* \"#utility.yul\":8202:8203   */\n  0x02\n    /* \"#utility.yul\":8194:8200   */\n  dup9\n    /* \"#utility.yul\":8190:8204   */\n  mul\n    /* \"#utility.yul\":8186:8208   */\n  add\n    /* \"#utility.yul\":8180:8184   */\n  dup9\n    /* \"#utility.yul\":8173:8209   */\n  sstore\n    /* \"#utility.yul\":7608:8219   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7571:8458   */\ntag_133:\n  pop\n    /* \"#utility.yul\":7161:8464   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7069:8464   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Monke.sol\":117:1336  contract Monke is ERC721 {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Monke.sol\":117:1336  contract Monke is ERC721 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x60316801\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x60316801\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x095ea7b3\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1e576912\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/Monke.sol\":532:936  function mintNFT(address recipient, uint256 valid_till, string memory url) public returns (uint256) {... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/Monke.sol\":1065:1334  function getTokenMetadata(uint256 tokenId) public view returns (uint256, string memory) {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_11:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_14:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_16:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_17:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_89\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_90\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_95\n      jump\t// in\n    tag_96:\n      dup1\n      iszero\n      tag_97\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_98\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_97)\n    tag_98:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_99:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_99\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_101:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Monke.sol\":532:936  function mintNFT(address recipient, uint256 valid_till, string memory url) public returns (uint256) {... */\n    tag_44:\n        /* \"contracts/Monke.sol\":623:630  uint256 */\n      0x00\n        /* \"contracts/Monke.sol\":642:657  _currentTokenId */\n      0x06\n      0x00\n        /* \"contracts/Monke.sol\":642:659  _currentTokenId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Monke.sol\":669:686  uint256 newItemId */\n      0x00\n        /* \"contracts/Monke.sol\":689:704  _currentTokenId */\n      sload(0x06)\n        /* \"contracts/Monke.sol\":669:704  uint256 newItemId = _currentTokenId */\n      swap1\n      pop\n        /* \"contracts/Monke.sol\":714:741  _mint(recipient, newItemId) */\n      tag_113\n        /* \"contracts/Monke.sol\":720:729  recipient */\n      dup6\n        /* \"contracts/Monke.sol\":731:740  newItemId */\n      dup3\n        /* \"contracts/Monke.sol\":714:719  _mint */\n      tag_114\n        /* \"contracts/Monke.sol\":714:741  _mint(recipient, newItemId) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/Monke.sol\":773:782  recipient */\n      dup5\n        /* \"contracts/Monke.sol\":752:759  _owners */\n      0x08\n        /* \"contracts/Monke.sol\":752:770  _owners[newItemId] */\n      0x00\n        /* \"contracts/Monke.sol\":760:769  newItemId */\n      dup4\n        /* \"contracts/Monke.sol\":752:770  _owners[newItemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Monke.sol\":752:782  _owners[newItemId] = recipient */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Monke.sol\":821:902  NFTMetadata({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Monke.sol\":859:869  valid_till */\n      dup6\n        /* \"contracts/Monke.sol\":821:902  NFTMetadata({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Monke.sol\":888:891  url */\n      dup5\n        /* \"contracts/Monke.sol\":821:902  NFTMetadata({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Monke.sol\":793:807  _tokenMetadata */\n      0x07\n        /* \"contracts/Monke.sol\":793:818  _tokenMetadata[newItemId] */\n      0x00\n        /* \"contracts/Monke.sol\":808:817  newItemId */\n      dup4\n        /* \"contracts/Monke.sol\":793:818  _tokenMetadata[newItemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Monke.sol\":793:902  _tokenMetadata[newItemId] = NFTMetadata({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      swap1\n      dup2\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Monke.sol\":920:929  newItemId */\n      dup1\n        /* \"contracts/Monke.sol\":913:929  return newItemId */\n      swap2\n      pop\n      pop\n        /* \"contracts/Monke.sol\":532:936  function mintNFT(address recipient, uint256 valid_till, string memory url) public returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Monke.sol\":1065:1334  function getTokenMetadata(uint256 tokenId) public view returns (uint256, string memory) {... */\n    tag_56:\n        /* \"contracts/Monke.sol\":1129:1136  uint256 */\n      0x00\n        /* \"contracts/Monke.sol\":1138:1151  string memory */\n      0x60\n        /* \"contracts/Monke.sol\":1171:1187  _exists(tokenId) */\n      tag_129\n        /* \"contracts/Monke.sol\":1179:1186  tokenId */\n      dup4\n        /* \"contracts/Monke.sol\":1171:1178  _exists */\n      tag_130\n        /* \"contracts/Monke.sol\":1171:1187  _exists(tokenId) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/Monke.sol\":1163:1212  require(_exists(tokenId), \"Token does not exist\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"contracts/Monke.sol\":1222:1249  NFTMetadata memory metadata */\n      0x00\n        /* \"contracts/Monke.sol\":1252:1266  _tokenMetadata */\n      0x07\n        /* \"contracts/Monke.sol\":1252:1275  _tokenMetadata[tokenId] */\n      0x00\n        /* \"contracts/Monke.sol\":1267:1274  tokenId */\n      dup6\n        /* \"contracts/Monke.sol\":1252:1275  _tokenMetadata[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Monke.sol\":1222:1275  NFTMetadata memory metadata = _tokenMetadata[tokenId] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_95\n      jump\t// in\n    tag_134:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_135\n      swap1\n      tag_95\n      jump\t// in\n    tag_135:\n      dup1\n      iszero\n      tag_136\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_137\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_136)\n    tag_137:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_138:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_138\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Monke.sol\":1293:1301  metadata */\n      dup1\n        /* \"contracts/Monke.sol\":1293:1312  metadata.valid_till */\n      0x00\n      add\n      mload\n        /* \"contracts/Monke.sol\":1314:1322  metadata */\n      dup2\n        /* \"contracts/Monke.sol\":1314:1326  metadata.url */\n      0x20\n      add\n      mload\n        /* \"contracts/Monke.sol\":1285:1327  return (metadata.valid_till, metadata.url) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/Monke.sol\":1065:1334  function getTokenMetadata(uint256 tokenId) public view returns (uint256, string memory) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_95\n      jump\t// in\n    tag_145:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_146\n      swap1\n      tag_95\n      jump\t// in\n    tag_146:\n      dup1\n      iszero\n      tag_147\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_148\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_147)\n    tag_148:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_149:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_149\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_50\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_159:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_162\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_163)\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_166\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Monke.sol\":942:1059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_130:\n        /* \"contracts/Monke.sol\":999:1003  bool */\n      0x00\n        /* \"contracts/Monke.sol\":1050:1051  0 */\n      dup1\n        /* \"contracts/Monke.sol\":1022:1052  _owners[tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Monke.sol\":1022:1029  _owners */\n      0x08\n        /* \"contracts/Monke.sol\":1022:1038  _owners[tokenId] */\n      0x00\n        /* \"contracts/Monke.sol\":1030:1037  tokenId */\n      dup5\n        /* \"contracts/Monke.sol\":1022:1038  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Monke.sol\":1022:1052  _owners[tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Monke.sol\":1015:1052  return _owners[tokenId] != address(0) */\n      swap1\n      pop\n        /* \"contracts/Monke.sol\":942:1059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_198\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_204\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_205\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      0x01\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_207\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_212\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_211)\n    tag_212:\n      0x60\n      swap2\n      pop\n    tag_211:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_221\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_222\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_223\n      jumpi\n      tag_224\n      tag_225\n      jump\t// in\n    tag_224:\n    tag_223:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_226\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_226:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_229\n      jumpi\n      tag_230\n      tag_231\n      jump\t// in\n    tag_230:\n    tag_229:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_227\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_235\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_238\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_239\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap3\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_255\n      jumpi\n      tag_256\n      tag_231\n      jump\t// in\n    tag_256:\n    tag_255:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_258\n      jumpi\n      tag_259\n      tag_231\n      jump\t// in\n    tag_259:\n    tag_258:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_261\n      jumpi\n      tag_262\n      tag_231\n      jump\t// in\n    tag_262:\n    tag_261:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_264\n      jumpi\n      tag_265\n      tag_231\n      jump\t// in\n    tag_265:\n    tag_264:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_267\n      jumpi\n      tag_268\n      tag_231\n      jump\t// in\n    tag_268:\n    tag_267:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_270\n      jumpi\n      tag_271\n      tag_231\n      jump\t// in\n    tag_271:\n    tag_270:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_274\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_275\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_277\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_279:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_280:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_281:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_282:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_283:\n        /* \"#utility.yul\":561:584   */\n      tag_345\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_282\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_346:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_284:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_348\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_283\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_23:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_351\n      tag_280\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":833:952   */\n    tag_350:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_352\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_284\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_285:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_286:\n        /* \"#utility.yul\":1268:1289   */\n      tag_355\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_285\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_26:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_357\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_286\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_287:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_288:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_289:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_290:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_291:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_363\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_287\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":2222:2293   */\n      tag_364\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_288\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_365\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_289\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":2392:2421   */\n      tag_366\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_290\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_30:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_368\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_291\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_292:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_293:\n        /* \"#utility.yul\":2909:2933   */\n      tag_371\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_292\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_372\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_372:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_294:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_374\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_293\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_33:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_377\n      tag_280\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":3185:3304   */\n    tag_376:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_378\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_294\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_295:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_296:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_381\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_295\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_297:\n        /* \"#utility.yul\":3765:3789   */\n      tag_383\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_296\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_36:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_385\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_297\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_298:\n        /* \"#utility.yul\":4103:4127   */\n      tag_387\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_296\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_388:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_299:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_390\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_298\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_39:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_393\n      tag_280\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":4396:4515   */\n    tag_392:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_394\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_299\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_395\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_294\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:4900   */\n    tag_300:\n        /* \"#utility.yul\":4892:4893   */\n      0x00\n        /* \"#utility.yul\":4889:4890   */\n      dup1\n        /* \"#utility.yul\":4882:4894   */\n      revert\n        /* \"#utility.yul\":4906:5023   */\n    tag_301:\n        /* \"#utility.yul\":5015:5016   */\n      0x00\n        /* \"#utility.yul\":5012:5013   */\n      dup1\n        /* \"#utility.yul\":5005:5017   */\n      revert\n        /* \"#utility.yul\":5029:5209   */\n    tag_225:\n        /* \"#utility.yul\":5077:5154   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5074:5075   */\n      0x00\n        /* \"#utility.yul\":5067:5155   */\n      mstore\n        /* \"#utility.yul\":5174:5178   */\n      0x41\n        /* \"#utility.yul\":5171:5172   */\n      0x04\n        /* \"#utility.yul\":5164:5179   */\n      mstore\n        /* \"#utility.yul\":5198:5202   */\n      0x24\n        /* \"#utility.yul\":5195:5196   */\n      0x00\n        /* \"#utility.yul\":5188:5203   */\n      revert\n        /* \"#utility.yul\":5215:5496   */\n    tag_302:\n        /* \"#utility.yul\":5298:5325   */\n      tag_400\n        /* \"#utility.yul\":5320:5324   */\n      dup3\n        /* \"#utility.yul\":5298:5325   */\n      tag_290\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":5290:5296   */\n      dup2\n        /* \"#utility.yul\":5286:5326   */\n      add\n        /* \"#utility.yul\":5428:5434   */\n      dup2\n        /* \"#utility.yul\":5416:5426   */\n      dup2\n        /* \"#utility.yul\":5413:5435   */\n      lt\n        /* \"#utility.yul\":5392:5410   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5380:5390   */\n      dup3\n        /* \"#utility.yul\":5377:5411   */\n      gt\n        /* \"#utility.yul\":5374:5436   */\n      or\n        /* \"#utility.yul\":5371:5459   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":5439:5457   */\n      tag_402\n      tag_225\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":5371:5459   */\n    tag_401:\n        /* \"#utility.yul\":5479:5489   */\n      dup1\n        /* \"#utility.yul\":5475:5477   */\n      0x40\n        /* \"#utility.yul\":5468:5490   */\n      mstore\n        /* \"#utility.yul\":5258:5496   */\n      pop\n        /* \"#utility.yul\":5215:5496   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5502:5631   */\n    tag_303:\n        /* \"#utility.yul\":5536:5542   */\n      0x00\n        /* \"#utility.yul\":5563:5583   */\n      tag_404\n      tag_279\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":5553:5583   */\n      swap1\n      pop\n        /* \"#utility.yul\":5592:5625   */\n      tag_405\n        /* \"#utility.yul\":5620:5624   */\n      dup3\n        /* \"#utility.yul\":5612:5618   */\n      dup3\n        /* \"#utility.yul\":5592:5625   */\n      tag_302\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":5502:5631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5637:5945   */\n    tag_304:\n        /* \"#utility.yul\":5699:5703   */\n      0x00\n        /* \"#utility.yul\":5789:5807   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5781:5787   */\n      dup3\n        /* \"#utility.yul\":5778:5808   */\n      gt\n        /* \"#utility.yul\":5775:5831   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":5811:5829   */\n      tag_408\n      tag_225\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5775:5831   */\n    tag_407:\n        /* \"#utility.yul\":5849:5878   */\n      tag_409\n        /* \"#utility.yul\":5871:5877   */\n      dup3\n        /* \"#utility.yul\":5849:5878   */\n      tag_290\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":5841:5878   */\n      swap1\n      pop\n        /* \"#utility.yul\":5933:5937   */\n      0x20\n        /* \"#utility.yul\":5927:5931   */\n      dup2\n        /* \"#utility.yul\":5923:5938   */\n      add\n        /* \"#utility.yul\":5915:5938   */\n      swap1\n      pop\n        /* \"#utility.yul\":5637:5945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5951:6099   */\n    tag_305:\n        /* \"#utility.yul\":6049:6055   */\n      dup3\n        /* \"#utility.yul\":6044:6047   */\n      dup2\n        /* \"#utility.yul\":6039:6042   */\n      dup4\n        /* \"#utility.yul\":6026:6056   */\n      calldatacopy\n        /* \"#utility.yul\":6090:6091   */\n      0x00\n        /* \"#utility.yul\":6081:6087   */\n      dup4\n        /* \"#utility.yul\":6076:6079   */\n      dup4\n        /* \"#utility.yul\":6072:6088   */\n      add\n        /* \"#utility.yul\":6065:6092   */\n      mstore\n        /* \"#utility.yul\":5951:6099   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6105:6530   */\n    tag_306:\n        /* \"#utility.yul\":6183:6188   */\n      0x00\n        /* \"#utility.yul\":6208:6274   */\n      tag_412\n        /* \"#utility.yul\":6224:6273   */\n      tag_413\n        /* \"#utility.yul\":6266:6272   */\n      dup5\n        /* \"#utility.yul\":6224:6273   */\n      tag_304\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":6208:6274   */\n      tag_303\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":6199:6274   */\n      swap1\n      pop\n        /* \"#utility.yul\":6297:6303   */\n      dup3\n        /* \"#utility.yul\":6290:6295   */\n      dup2\n        /* \"#utility.yul\":6283:6304   */\n      mstore\n        /* \"#utility.yul\":6335:6339   */\n      0x20\n        /* \"#utility.yul\":6328:6333   */\n      dup2\n        /* \"#utility.yul\":6324:6340   */\n      add\n        /* \"#utility.yul\":6373:6376   */\n      dup5\n        /* \"#utility.yul\":6364:6370   */\n      dup5\n        /* \"#utility.yul\":6359:6362   */\n      dup5\n        /* \"#utility.yul\":6355:6371   */\n      add\n        /* \"#utility.yul\":6352:6377   */\n      gt\n        /* \"#utility.yul\":6349:6461   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":6380:6459   */\n      tag_415\n      tag_301\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":6349:6461   */\n    tag_414:\n        /* \"#utility.yul\":6470:6524   */\n      tag_416\n        /* \"#utility.yul\":6517:6523   */\n      dup5\n        /* \"#utility.yul\":6512:6515   */\n      dup3\n        /* \"#utility.yul\":6507:6510   */\n      dup6\n        /* \"#utility.yul\":6470:6524   */\n      tag_305\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":6189:6530   */\n      pop\n        /* \"#utility.yul\":6105:6530   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6550:6890   */\n    tag_307:\n        /* \"#utility.yul\":6606:6611   */\n      0x00\n        /* \"#utility.yul\":6655:6658   */\n      dup3\n        /* \"#utility.yul\":6648:6652   */\n      0x1f\n        /* \"#utility.yul\":6640:6646   */\n      dup4\n        /* \"#utility.yul\":6636:6653   */\n      add\n        /* \"#utility.yul\":6632:6659   */\n      slt\n        /* \"#utility.yul\":6622:6744   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":6663:6742   */\n      tag_419\n      tag_300\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":6622:6744   */\n    tag_418:\n        /* \"#utility.yul\":6780:6786   */\n      dup2\n        /* \"#utility.yul\":6767:6787   */\n      calldataload\n        /* \"#utility.yul\":6805:6884   */\n      tag_420\n        /* \"#utility.yul\":6880:6883   */\n      dup5\n        /* \"#utility.yul\":6872:6878   */\n      dup3\n        /* \"#utility.yul\":6865:6869   */\n      0x20\n        /* \"#utility.yul\":6857:6863   */\n      dup7\n        /* \"#utility.yul\":6853:6870   */\n      add\n        /* \"#utility.yul\":6805:6884   */\n      tag_306\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":6796:6884   */\n      swap2\n      pop\n        /* \"#utility.yul\":6612:6890   */\n      pop\n        /* \"#utility.yul\":6550:6890   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6896:7695   */\n    tag_43:\n        /* \"#utility.yul\":6983:6989   */\n      0x00\n        /* \"#utility.yul\":6991:6997   */\n      dup1\n        /* \"#utility.yul\":6999:7005   */\n      0x00\n        /* \"#utility.yul\":7048:7050   */\n      0x60\n        /* \"#utility.yul\":7036:7045   */\n      dup5\n        /* \"#utility.yul\":7027:7034   */\n      dup7\n        /* \"#utility.yul\":7023:7046   */\n      sub\n        /* \"#utility.yul\":7019:7051   */\n      slt\n        /* \"#utility.yul\":7016:7135   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":7054:7133   */\n      tag_423\n      tag_280\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":7016:7135   */\n    tag_422:\n        /* \"#utility.yul\":7174:7175   */\n      0x00\n        /* \"#utility.yul\":7199:7252   */\n      tag_424\n        /* \"#utility.yul\":7244:7251   */\n      dup7\n        /* \"#utility.yul\":7235:7241   */\n      dup3\n        /* \"#utility.yul\":7224:7233   */\n      dup8\n        /* \"#utility.yul\":7220:7242   */\n      add\n        /* \"#utility.yul\":7199:7252   */\n      tag_299\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":7189:7252   */\n      swap4\n      pop\n        /* \"#utility.yul\":7145:7262   */\n      pop\n        /* \"#utility.yul\":7301:7303   */\n      0x20\n        /* \"#utility.yul\":7327:7380   */\n      tag_425\n        /* \"#utility.yul\":7372:7379   */\n      dup7\n        /* \"#utility.yul\":7363:7369   */\n      dup3\n        /* \"#utility.yul\":7352:7361   */\n      dup8\n        /* \"#utility.yul\":7348:7370   */\n      add\n        /* \"#utility.yul\":7327:7380   */\n      tag_294\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":7317:7380   */\n      swap3\n      pop\n        /* \"#utility.yul\":7272:7390   */\n      pop\n        /* \"#utility.yul\":7457:7459   */\n      0x40\n        /* \"#utility.yul\":7446:7455   */\n      dup5\n        /* \"#utility.yul\":7442:7460   */\n      add\n        /* \"#utility.yul\":7429:7461   */\n      calldataload\n        /* \"#utility.yul\":7488:7506   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7480:7486   */\n      dup2\n        /* \"#utility.yul\":7477:7507   */\n      gt\n        /* \"#utility.yul\":7474:7591   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":7510:7589   */\n      tag_427\n      tag_281\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":7474:7591   */\n    tag_426:\n        /* \"#utility.yul\":7615:7678   */\n      tag_428\n        /* \"#utility.yul\":7670:7677   */\n      dup7\n        /* \"#utility.yul\":7661:7667   */\n      dup3\n        /* \"#utility.yul\":7650:7659   */\n      dup8\n        /* \"#utility.yul\":7646:7668   */\n      add\n        /* \"#utility.yul\":7615:7678   */\n      tag_307\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":7605:7678   */\n      swap2\n      pop\n        /* \"#utility.yul\":7400:7688   */\n      pop\n        /* \"#utility.yul\":6896:7695   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7701:7819   */\n    tag_308:\n        /* \"#utility.yul\":7788:7812   */\n      tag_430\n        /* \"#utility.yul\":7806:7811   */\n      dup2\n        /* \"#utility.yul\":7788:7812   */\n      tag_292\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":7783:7786   */\n      dup3\n        /* \"#utility.yul\":7776:7813   */\n      mstore\n        /* \"#utility.yul\":7701:7819   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7825:8047   */\n    tag_46:\n        /* \"#utility.yul\":7918:7922   */\n      0x00\n        /* \"#utility.yul\":7956:7958   */\n      0x20\n        /* \"#utility.yul\":7945:7954   */\n      dup3\n        /* \"#utility.yul\":7941:7959   */\n      add\n        /* \"#utility.yul\":7933:7959   */\n      swap1\n      pop\n        /* \"#utility.yul\":7969:8040   */\n      tag_432\n        /* \"#utility.yul\":8037:8038   */\n      0x00\n        /* \"#utility.yul\":8026:8035   */\n      dup4\n        /* \"#utility.yul\":8022:8039   */\n      add\n        /* \"#utility.yul\":8013:8019   */\n      dup5\n        /* \"#utility.yul\":7969:8040   */\n      tag_308\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":7825:8047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8053:8672   */\n    tag_49:\n        /* \"#utility.yul\":8130:8136   */\n      0x00\n        /* \"#utility.yul\":8138:8144   */\n      dup1\n        /* \"#utility.yul\":8146:8152   */\n      0x00\n        /* \"#utility.yul\":8195:8197   */\n      0x60\n        /* \"#utility.yul\":8183:8192   */\n      dup5\n        /* \"#utility.yul\":8174:8181   */\n      dup7\n        /* \"#utility.yul\":8170:8193   */\n      sub\n        /* \"#utility.yul\":8166:8198   */\n      slt\n        /* \"#utility.yul\":8163:8282   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":8201:8280   */\n      tag_435\n      tag_280\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":8163:8282   */\n    tag_434:\n        /* \"#utility.yul\":8321:8322   */\n      0x00\n        /* \"#utility.yul\":8346:8399   */\n      tag_436\n        /* \"#utility.yul\":8391:8398   */\n      dup7\n        /* \"#utility.yul\":8382:8388   */\n      dup3\n        /* \"#utility.yul\":8371:8380   */\n      dup8\n        /* \"#utility.yul\":8367:8389   */\n      add\n        /* \"#utility.yul\":8346:8399   */\n      tag_299\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":8336:8399   */\n      swap4\n      pop\n        /* \"#utility.yul\":8292:8409   */\n      pop\n        /* \"#utility.yul\":8448:8450   */\n      0x20\n        /* \"#utility.yul\":8474:8527   */\n      tag_437\n        /* \"#utility.yul\":8519:8526   */\n      dup7\n        /* \"#utility.yul\":8510:8516   */\n      dup3\n        /* \"#utility.yul\":8499:8508   */\n      dup8\n        /* \"#utility.yul\":8495:8517   */\n      add\n        /* \"#utility.yul\":8474:8527   */\n      tag_299\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":8464:8527   */\n      swap3\n      pop\n        /* \"#utility.yul\":8419:8537   */\n      pop\n        /* \"#utility.yul\":8576:8578   */\n      0x40\n        /* \"#utility.yul\":8602:8655   */\n      tag_438\n        /* \"#utility.yul\":8647:8654   */\n      dup7\n        /* \"#utility.yul\":8638:8644   */\n      dup3\n        /* \"#utility.yul\":8627:8636   */\n      dup8\n        /* \"#utility.yul\":8623:8645   */\n      add\n        /* \"#utility.yul\":8602:8655   */\n      tag_294\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":8592:8655   */\n      swap2\n      pop\n        /* \"#utility.yul\":8547:8665   */\n      pop\n        /* \"#utility.yul\":8053:8672   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8678:9101   */\n    tag_58:\n        /* \"#utility.yul\":8819:8823   */\n      0x00\n        /* \"#utility.yul\":8857:8859   */\n      0x40\n        /* \"#utility.yul\":8846:8855   */\n      dup3\n        /* \"#utility.yul\":8842:8860   */\n      add\n        /* \"#utility.yul\":8834:8860   */\n      swap1\n      pop\n        /* \"#utility.yul\":8870:8941   */\n      tag_440\n        /* \"#utility.yul\":8938:8939   */\n      0x00\n        /* \"#utility.yul\":8927:8936   */\n      dup4\n        /* \"#utility.yul\":8923:8940   */\n      add\n        /* \"#utility.yul\":8914:8920   */\n      dup6\n        /* \"#utility.yul\":8870:8941   */\n      tag_308\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":8988:8997   */\n      dup2\n        /* \"#utility.yul\":8982:8986   */\n      dup2\n        /* \"#utility.yul\":8978:8998   */\n      sub\n        /* \"#utility.yul\":8973:8975   */\n      0x20\n        /* \"#utility.yul\":8962:8971   */\n      dup4\n        /* \"#utility.yul\":8958:8976   */\n      add\n        /* \"#utility.yul\":8951:8999   */\n      mstore\n        /* \"#utility.yul\":9016:9094   */\n      tag_441\n        /* \"#utility.yul\":9089:9093   */\n      dup2\n        /* \"#utility.yul\":9080:9086   */\n      dup5\n        /* \"#utility.yul\":9016:9094   */\n      tag_291\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":9008:9094   */\n      swap1\n      pop\n        /* \"#utility.yul\":8678:9101   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9107:9436   */\n    tag_65:\n        /* \"#utility.yul\":9166:9172   */\n      0x00\n        /* \"#utility.yul\":9215:9217   */\n      0x20\n        /* \"#utility.yul\":9203:9212   */\n      dup3\n        /* \"#utility.yul\":9194:9201   */\n      dup5\n        /* \"#utility.yul\":9190:9213   */\n      sub\n        /* \"#utility.yul\":9186:9218   */\n      slt\n        /* \"#utility.yul\":9183:9302   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":9221:9300   */\n      tag_444\n      tag_280\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":9183:9302   */\n    tag_443:\n        /* \"#utility.yul\":9341:9342   */\n      0x00\n        /* \"#utility.yul\":9366:9419   */\n      tag_445\n        /* \"#utility.yul\":9411:9418   */\n      dup5\n        /* \"#utility.yul\":9402:9408   */\n      dup3\n        /* \"#utility.yul\":9391:9400   */\n      dup6\n        /* \"#utility.yul\":9387:9409   */\n      add\n        /* \"#utility.yul\":9366:9419   */\n      tag_299\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":9356:9419   */\n      swap2\n      pop\n        /* \"#utility.yul\":9312:9429   */\n      pop\n        /* \"#utility.yul\":9107:9436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9442:9558   */\n    tag_309:\n        /* \"#utility.yul\":9512:9533   */\n      tag_447\n        /* \"#utility.yul\":9527:9532   */\n      dup2\n        /* \"#utility.yul\":9512:9533   */\n      tag_285\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":9505:9510   */\n      dup2\n        /* \"#utility.yul\":9502:9534   */\n      eq\n        /* \"#utility.yul\":9492:9552   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":9548:9549   */\n      0x00\n        /* \"#utility.yul\":9545:9546   */\n      dup1\n        /* \"#utility.yul\":9538:9550   */\n      revert\n        /* \"#utility.yul\":9492:9552   */\n    tag_448:\n        /* \"#utility.yul\":9442:9558   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9564:9697   */\n    tag_310:\n        /* \"#utility.yul\":9607:9612   */\n      0x00\n        /* \"#utility.yul\":9645:9651   */\n      dup2\n        /* \"#utility.yul\":9632:9652   */\n      calldataload\n        /* \"#utility.yul\":9623:9652   */\n      swap1\n      pop\n        /* \"#utility.yul\":9661:9691   */\n      tag_450\n        /* \"#utility.yul\":9685:9690   */\n      dup2\n        /* \"#utility.yul\":9661:9691   */\n      tag_309\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9564:9697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9703:10171   */\n    tag_73:\n        /* \"#utility.yul\":9768:9774   */\n      0x00\n        /* \"#utility.yul\":9776:9782   */\n      dup1\n        /* \"#utility.yul\":9825:9827   */\n      0x40\n        /* \"#utility.yul\":9813:9822   */\n      dup4\n        /* \"#utility.yul\":9804:9811   */\n      dup6\n        /* \"#utility.yul\":9800:9823   */\n      sub\n        /* \"#utility.yul\":9796:9828   */\n      slt\n        /* \"#utility.yul\":9793:9912   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":9831:9910   */\n      tag_453\n      tag_280\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":9793:9912   */\n    tag_452:\n        /* \"#utility.yul\":9951:9952   */\n      0x00\n        /* \"#utility.yul\":9976:10029   */\n      tag_454\n        /* \"#utility.yul\":10021:10028   */\n      dup6\n        /* \"#utility.yul\":10012:10018   */\n      dup3\n        /* \"#utility.yul\":10001:10010   */\n      dup7\n        /* \"#utility.yul\":9997:10019   */\n      add\n        /* \"#utility.yul\":9976:10029   */\n      tag_299\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":9966:10029   */\n      swap3\n      pop\n        /* \"#utility.yul\":9922:10039   */\n      pop\n        /* \"#utility.yul\":10078:10080   */\n      0x20\n        /* \"#utility.yul\":10104:10154   */\n      tag_455\n        /* \"#utility.yul\":10146:10153   */\n      dup6\n        /* \"#utility.yul\":10137:10143   */\n      dup3\n        /* \"#utility.yul\":10126:10135   */\n      dup7\n        /* \"#utility.yul\":10122:10144   */\n      add\n        /* \"#utility.yul\":10104:10154   */\n      tag_310\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":10094:10154   */\n      swap2\n      pop\n        /* \"#utility.yul\":10049:10164   */\n      pop\n        /* \"#utility.yul\":9703:10171   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10177:10484   */\n    tag_311:\n        /* \"#utility.yul\":10238:10242   */\n      0x00\n        /* \"#utility.yul\":10328:10346   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10320:10326   */\n      dup3\n        /* \"#utility.yul\":10317:10347   */\n      gt\n        /* \"#utility.yul\":10314:10370   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":10350:10368   */\n      tag_458\n      tag_225\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":10314:10370   */\n    tag_457:\n        /* \"#utility.yul\":10388:10417   */\n      tag_459\n        /* \"#utility.yul\":10410:10416   */\n      dup3\n        /* \"#utility.yul\":10388:10417   */\n      tag_290\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":10380:10417   */\n      swap1\n      pop\n        /* \"#utility.yul\":10472:10476   */\n      0x20\n        /* \"#utility.yul\":10466:10470   */\n      dup2\n        /* \"#utility.yul\":10462:10477   */\n      add\n        /* \"#utility.yul\":10454:10477   */\n      swap1\n      pop\n        /* \"#utility.yul\":10177:10484   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10490:10913   */\n    tag_312:\n        /* \"#utility.yul\":10567:10572   */\n      0x00\n        /* \"#utility.yul\":10592:10657   */\n      tag_461\n        /* \"#utility.yul\":10608:10656   */\n      tag_462\n        /* \"#utility.yul\":10649:10655   */\n      dup5\n        /* \"#utility.yul\":10608:10656   */\n      tag_311\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":10592:10657   */\n      tag_303\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10583:10657   */\n      swap1\n      pop\n        /* \"#utility.yul\":10680:10686   */\n      dup3\n        /* \"#utility.yul\":10673:10678   */\n      dup2\n        /* \"#utility.yul\":10666:10687   */\n      mstore\n        /* \"#utility.yul\":10718:10722   */\n      0x20\n        /* \"#utility.yul\":10711:10716   */\n      dup2\n        /* \"#utility.yul\":10707:10723   */\n      add\n        /* \"#utility.yul\":10756:10759   */\n      dup5\n        /* \"#utility.yul\":10747:10753   */\n      dup5\n        /* \"#utility.yul\":10742:10745   */\n      dup5\n        /* \"#utility.yul\":10738:10754   */\n      add\n        /* \"#utility.yul\":10735:10760   */\n      gt\n        /* \"#utility.yul\":10732:10844   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":10763:10842   */\n      tag_464\n      tag_301\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":10732:10844   */\n    tag_463:\n        /* \"#utility.yul\":10853:10907   */\n      tag_465\n        /* \"#utility.yul\":10900:10906   */\n      dup5\n        /* \"#utility.yul\":10895:10898   */\n      dup3\n        /* \"#utility.yul\":10890:10893   */\n      dup6\n        /* \"#utility.yul\":10853:10907   */\n      tag_305\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":10573:10913   */\n      pop\n        /* \"#utility.yul\":10490:10913   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10932:11270   */\n    tag_313:\n        /* \"#utility.yul\":10987:10992   */\n      0x00\n        /* \"#utility.yul\":11036:11039   */\n      dup3\n        /* \"#utility.yul\":11029:11033   */\n      0x1f\n        /* \"#utility.yul\":11021:11027   */\n      dup4\n        /* \"#utility.yul\":11017:11034   */\n      add\n        /* \"#utility.yul\":11013:11040   */\n      slt\n        /* \"#utility.yul\":11003:11125   */\n      tag_467\n      jumpi\n        /* \"#utility.yul\":11044:11123   */\n      tag_468\n      tag_300\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":11003:11125   */\n    tag_467:\n        /* \"#utility.yul\":11161:11167   */\n      dup2\n        /* \"#utility.yul\":11148:11168   */\n      calldataload\n        /* \"#utility.yul\":11186:11264   */\n      tag_469\n        /* \"#utility.yul\":11260:11263   */\n      dup5\n        /* \"#utility.yul\":11252:11258   */\n      dup3\n        /* \"#utility.yul\":11245:11249   */\n      0x20\n        /* \"#utility.yul\":11237:11243   */\n      dup7\n        /* \"#utility.yul\":11233:11250   */\n      add\n        /* \"#utility.yul\":11186:11264   */\n      tag_312\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":11177:11264   */\n      swap2\n      pop\n        /* \"#utility.yul\":10993:11270   */\n      pop\n        /* \"#utility.yul\":10932:11270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11276:12219   */\n    tag_77:\n        /* \"#utility.yul\":11371:11377   */\n      0x00\n        /* \"#utility.yul\":11379:11385   */\n      dup1\n        /* \"#utility.yul\":11387:11393   */\n      0x00\n        /* \"#utility.yul\":11395:11401   */\n      dup1\n        /* \"#utility.yul\":11444:11447   */\n      0x80\n        /* \"#utility.yul\":11432:11441   */\n      dup6\n        /* \"#utility.yul\":11423:11430   */\n      dup8\n        /* \"#utility.yul\":11419:11442   */\n      sub\n        /* \"#utility.yul\":11415:11448   */\n      slt\n        /* \"#utility.yul\":11412:11532   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":11451:11530   */\n      tag_472\n      tag_280\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":11412:11532   */\n    tag_471:\n        /* \"#utility.yul\":11571:11572   */\n      0x00\n        /* \"#utility.yul\":11596:11649   */\n      tag_473\n        /* \"#utility.yul\":11641:11648   */\n      dup8\n        /* \"#utility.yul\":11632:11638   */\n      dup3\n        /* \"#utility.yul\":11621:11630   */\n      dup9\n        /* \"#utility.yul\":11617:11639   */\n      add\n        /* \"#utility.yul\":11596:11649   */\n      tag_299\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":11586:11649   */\n      swap5\n      pop\n        /* \"#utility.yul\":11542:11659   */\n      pop\n        /* \"#utility.yul\":11698:11700   */\n      0x20\n        /* \"#utility.yul\":11724:11777   */\n      tag_474\n        /* \"#utility.yul\":11769:11776   */\n      dup8\n        /* \"#utility.yul\":11760:11766   */\n      dup3\n        /* \"#utility.yul\":11749:11758   */\n      dup9\n        /* \"#utility.yul\":11745:11767   */\n      add\n        /* \"#utility.yul\":11724:11777   */\n      tag_299\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":11714:11777   */\n      swap4\n      pop\n        /* \"#utility.yul\":11669:11787   */\n      pop\n        /* \"#utility.yul\":11826:11828   */\n      0x40\n        /* \"#utility.yul\":11852:11905   */\n      tag_475\n        /* \"#utility.yul\":11897:11904   */\n      dup8\n        /* \"#utility.yul\":11888:11894   */\n      dup3\n        /* \"#utility.yul\":11877:11886   */\n      dup9\n        /* \"#utility.yul\":11873:11895   */\n      add\n        /* \"#utility.yul\":11852:11905   */\n      tag_294\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":11842:11905   */\n      swap3\n      pop\n        /* \"#utility.yul\":11797:11915   */\n      pop\n        /* \"#utility.yul\":11982:11984   */\n      0x60\n        /* \"#utility.yul\":11971:11980   */\n      dup6\n        /* \"#utility.yul\":11967:11985   */\n      add\n        /* \"#utility.yul\":11954:11986   */\n      calldataload\n        /* \"#utility.yul\":12013:12031   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12005:12011   */\n      dup2\n        /* \"#utility.yul\":12002:12032   */\n      gt\n        /* \"#utility.yul\":11999:12116   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":12035:12114   */\n      tag_477\n      tag_281\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":11999:12116   */\n    tag_476:\n        /* \"#utility.yul\":12140:12202   */\n      tag_478\n        /* \"#utility.yul\":12194:12201   */\n      dup8\n        /* \"#utility.yul\":12185:12191   */\n      dup3\n        /* \"#utility.yul\":12174:12183   */\n      dup9\n        /* \"#utility.yul\":12170:12192   */\n      add\n        /* \"#utility.yul\":12140:12202   */\n      tag_313\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":12130:12202   */\n      swap2\n      pop\n        /* \"#utility.yul\":11925:12212   */\n      pop\n        /* \"#utility.yul\":11276:12219   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12225:12699   */\n    tag_85:\n        /* \"#utility.yul\":12293:12299   */\n      0x00\n        /* \"#utility.yul\":12301:12307   */\n      dup1\n        /* \"#utility.yul\":12350:12352   */\n      0x40\n        /* \"#utility.yul\":12338:12347   */\n      dup4\n        /* \"#utility.yul\":12329:12336   */\n      dup6\n        /* \"#utility.yul\":12325:12348   */\n      sub\n        /* \"#utility.yul\":12321:12353   */\n      slt\n        /* \"#utility.yul\":12318:12437   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":12356:12435   */\n      tag_481\n      tag_280\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":12318:12437   */\n    tag_480:\n        /* \"#utility.yul\":12476:12477   */\n      0x00\n        /* \"#utility.yul\":12501:12554   */\n      tag_482\n        /* \"#utility.yul\":12546:12553   */\n      dup6\n        /* \"#utility.yul\":12537:12543   */\n      dup3\n        /* \"#utility.yul\":12526:12535   */\n      dup7\n        /* \"#utility.yul\":12522:12544   */\n      add\n        /* \"#utility.yul\":12501:12554   */\n      tag_299\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":12491:12554   */\n      swap3\n      pop\n        /* \"#utility.yul\":12447:12564   */\n      pop\n        /* \"#utility.yul\":12603:12605   */\n      0x20\n        /* \"#utility.yul\":12629:12682   */\n      tag_483\n        /* \"#utility.yul\":12674:12681   */\n      dup6\n        /* \"#utility.yul\":12665:12671   */\n      dup3\n        /* \"#utility.yul\":12654:12663   */\n      dup7\n        /* \"#utility.yul\":12650:12672   */\n      add\n        /* \"#utility.yul\":12629:12682   */\n      tag_299\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12619:12682   */\n      swap2\n      pop\n        /* \"#utility.yul\":12574:12692   */\n      pop\n        /* \"#utility.yul\":12225:12699   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12705:12885   */\n    tag_314:\n        /* \"#utility.yul\":12753:12830   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12750:12751   */\n      0x00\n        /* \"#utility.yul\":12743:12831   */\n      mstore\n        /* \"#utility.yul\":12850:12854   */\n      0x22\n        /* \"#utility.yul\":12847:12848   */\n      0x04\n        /* \"#utility.yul\":12840:12855   */\n      mstore\n        /* \"#utility.yul\":12874:12878   */\n      0x24\n        /* \"#utility.yul\":12871:12872   */\n      0x00\n        /* \"#utility.yul\":12864:12879   */\n      revert\n        /* \"#utility.yul\":12891:13211   */\n    tag_95:\n        /* \"#utility.yul\":12935:12941   */\n      0x00\n        /* \"#utility.yul\":12972:12973   */\n      0x02\n        /* \"#utility.yul\":12966:12970   */\n      dup3\n        /* \"#utility.yul\":12962:12974   */\n      div\n        /* \"#utility.yul\":12952:12974   */\n      swap1\n      pop\n        /* \"#utility.yul\":13019:13020   */\n      0x01\n        /* \"#utility.yul\":13013:13017   */\n      dup3\n        /* \"#utility.yul\":13009:13021   */\n      and\n        /* \"#utility.yul\":13040:13058   */\n      dup1\n        /* \"#utility.yul\":13030:13111   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":13096:13100   */\n      0x7f\n        /* \"#utility.yul\":13088:13094   */\n      dup3\n        /* \"#utility.yul\":13084:13101   */\n      and\n        /* \"#utility.yul\":13074:13101   */\n      swap2\n      pop\n        /* \"#utility.yul\":13030:13111   */\n    tag_486:\n        /* \"#utility.yul\":13158:13160   */\n      0x20\n        /* \"#utility.yul\":13150:13156   */\n      dup3\n        /* \"#utility.yul\":13147:13161   */\n      lt\n        /* \"#utility.yul\":13127:13145   */\n      dup2\n        /* \"#utility.yul\":13124:13162   */\n      sub\n        /* \"#utility.yul\":13121:13205   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":13177:13195   */\n      tag_488\n      tag_314\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":13121:13205   */\n    tag_487:\n        /* \"#utility.yul\":12942:13211   */\n      pop\n        /* \"#utility.yul\":12891:13211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13217:13397   */\n    tag_315:\n        /* \"#utility.yul\":13265:13342   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13262:13263   */\n      0x00\n        /* \"#utility.yul\":13255:13343   */\n      mstore\n        /* \"#utility.yul\":13362:13366   */\n      0x11\n        /* \"#utility.yul\":13359:13360   */\n      0x04\n        /* \"#utility.yul\":13352:13367   */\n      mstore\n        /* \"#utility.yul\":13386:13390   */\n      0x24\n        /* \"#utility.yul\":13383:13384   */\n      0x00\n        /* \"#utility.yul\":13376:13391   */\n      revert\n        /* \"#utility.yul\":13403:13636   */\n    tag_112:\n        /* \"#utility.yul\":13442:13445   */\n      0x00\n        /* \"#utility.yul\":13465:13489   */\n      tag_491\n        /* \"#utility.yul\":13483:13488   */\n      dup3\n        /* \"#utility.yul\":13465:13489   */\n      tag_292\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":13456:13489   */\n      swap2\n      pop\n        /* \"#utility.yul\":13511:13577   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13504:13509   */\n      dup3\n        /* \"#utility.yul\":13501:13578   */\n      sub\n        /* \"#utility.yul\":13498:13601   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":13581:13599   */\n      tag_493\n      tag_315\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":13498:13601   */\n    tag_492:\n        /* \"#utility.yul\":13628:13629   */\n      0x01\n        /* \"#utility.yul\":13621:13626   */\n      dup3\n        /* \"#utility.yul\":13617:13630   */\n      add\n        /* \"#utility.yul\":13610:13630   */\n      swap1\n      pop\n        /* \"#utility.yul\":13403:13636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13642:13783   */\n    tag_316:\n        /* \"#utility.yul\":13691:13695   */\n      0x00\n        /* \"#utility.yul\":13714:13717   */\n      dup2\n        /* \"#utility.yul\":13706:13717   */\n      swap1\n      pop\n        /* \"#utility.yul\":13737:13740   */\n      dup2\n        /* \"#utility.yul\":13734:13735   */\n      0x00\n        /* \"#utility.yul\":13727:13741   */\n      mstore\n        /* \"#utility.yul\":13771:13775   */\n      0x20\n        /* \"#utility.yul\":13768:13769   */\n      0x00\n        /* \"#utility.yul\":13758:13776   */\n      keccak256\n        /* \"#utility.yul\":13750:13776   */\n      swap1\n      pop\n        /* \"#utility.yul\":13642:13783   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13789:13882   */\n    tag_317:\n        /* \"#utility.yul\":13826:13832   */\n      0x00\n        /* \"#utility.yul\":13873:13875   */\n      0x20\n        /* \"#utility.yul\":13868:13870   */\n      0x1f\n        /* \"#utility.yul\":13861:13866   */\n      dup4\n        /* \"#utility.yul\":13857:13871   */\n      add\n        /* \"#utility.yul\":13853:13876   */\n      div\n        /* \"#utility.yul\":13843:13876   */\n      swap1\n      pop\n        /* \"#utility.yul\":13789:13882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13888:13995   */\n    tag_318:\n        /* \"#utility.yul\":13932:13940   */\n      0x00\n        /* \"#utility.yul\":13982:13987   */\n      dup3\n        /* \"#utility.yul\":13976:13980   */\n      dup3\n        /* \"#utility.yul\":13972:13988   */\n      shl\n        /* \"#utility.yul\":13951:13988   */\n      swap1\n      pop\n        /* \"#utility.yul\":13888:13995   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14001:14394   */\n    tag_319:\n        /* \"#utility.yul\":14070:14076   */\n      0x00\n        /* \"#utility.yul\":14120:14121   */\n      0x08\n        /* \"#utility.yul\":14108:14118   */\n      dup4\n        /* \"#utility.yul\":14104:14122   */\n      mul\n        /* \"#utility.yul\":14143:14240   */\n      tag_498\n        /* \"#utility.yul\":14173:14239   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14162:14171   */\n      dup3\n        /* \"#utility.yul\":14143:14240   */\n      tag_318\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":14261:14300   */\n      tag_499\n        /* \"#utility.yul\":14291:14299   */\n      dup7\n        /* \"#utility.yul\":14280:14289   */\n      dup4\n        /* \"#utility.yul\":14261:14300   */\n      tag_318\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":14249:14300   */\n      swap6\n      pop\n        /* \"#utility.yul\":14333:14337   */\n      dup1\n        /* \"#utility.yul\":14329:14338   */\n      not\n        /* \"#utility.yul\":14322:14327   */\n      dup5\n        /* \"#utility.yul\":14318:14339   */\n      and\n        /* \"#utility.yul\":14309:14339   */\n      swap4\n      pop\n        /* \"#utility.yul\":14382:14386   */\n      dup1\n        /* \"#utility.yul\":14372:14380   */\n      dup7\n        /* \"#utility.yul\":14368:14387   */\n      and\n        /* \"#utility.yul\":14361:14366   */\n      dup5\n        /* \"#utility.yul\":14358:14388   */\n      or\n        /* \"#utility.yul\":14348:14388   */\n      swap3\n      pop\n        /* \"#utility.yul\":14077:14394   */\n      pop\n      pop\n        /* \"#utility.yul\":14001:14394   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14400:14460   */\n    tag_320:\n        /* \"#utility.yul\":14428:14431   */\n      0x00\n        /* \"#utility.yul\":14449:14454   */\n      dup2\n        /* \"#utility.yul\":14442:14454   */\n      swap1\n      pop\n        /* \"#utility.yul\":14400:14460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14466:14608   */\n    tag_321:\n        /* \"#utility.yul\":14516:14525   */\n      0x00\n        /* \"#utility.yul\":14549:14602   */\n      tag_502\n        /* \"#utility.yul\":14567:14601   */\n      tag_503\n        /* \"#utility.yul\":14576:14600   */\n      tag_504\n        /* \"#utility.yul\":14594:14599   */\n      dup5\n        /* \"#utility.yul\":14576:14600   */\n      tag_292\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":14567:14601   */\n      tag_320\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":14549:14602   */\n      tag_292\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":14536:14602   */\n      swap1\n      pop\n        /* \"#utility.yul\":14466:14608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14614:14689   */\n    tag_322:\n        /* \"#utility.yul\":14657:14660   */\n      0x00\n        /* \"#utility.yul\":14678:14683   */\n      dup2\n        /* \"#utility.yul\":14671:14683   */\n      swap1\n      pop\n        /* \"#utility.yul\":14614:14689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14695:14964   */\n    tag_323:\n        /* \"#utility.yul\":14805:14844   */\n      tag_507\n        /* \"#utility.yul\":14836:14843   */\n      dup4\n        /* \"#utility.yul\":14805:14844   */\n      tag_321\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":14866:14957   */\n      tag_508\n        /* \"#utility.yul\":14915:14956   */\n      tag_509\n        /* \"#utility.yul\":14939:14955   */\n      dup3\n        /* \"#utility.yul\":14915:14956   */\n      tag_322\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":14907:14913   */\n      dup5\n        /* \"#utility.yul\":14900:14904   */\n      dup5\n        /* \"#utility.yul\":14894:14905   */\n      sload\n        /* \"#utility.yul\":14866:14957   */\n      tag_319\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":14860:14864   */\n      dup3\n        /* \"#utility.yul\":14853:14958   */\n      sstore\n        /* \"#utility.yul\":14771:14964   */\n      pop\n        /* \"#utility.yul\":14695:14964   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14970:15043   */\n    tag_324:\n        /* \"#utility.yul\":15015:15018   */\n      0x00\n        /* \"#utility.yul\":14970:15043   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15049:15238   */\n    tag_325:\n        /* \"#utility.yul\":15126:15158   */\n      tag_512\n      tag_324\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":15167:15232   */\n      tag_513\n        /* \"#utility.yul\":15225:15231   */\n      dup2\n        /* \"#utility.yul\":15217:15223   */\n      dup5\n        /* \"#utility.yul\":15211:15215   */\n      dup5\n        /* \"#utility.yul\":15167:15232   */\n      tag_323\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":15102:15238   */\n      pop\n        /* \"#utility.yul\":15049:15238   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15244:15430   */\n    tag_326:\n        /* \"#utility.yul\":15304:15424   */\n    tag_515:\n        /* \"#utility.yul\":15321:15324   */\n      dup2\n        /* \"#utility.yul\":15314:15319   */\n      dup2\n        /* \"#utility.yul\":15311:15325   */\n      lt\n        /* \"#utility.yul\":15304:15424   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":15375:15414   */\n      tag_518\n        /* \"#utility.yul\":15412:15413   */\n      0x00\n        /* \"#utility.yul\":15405:15410   */\n      dup3\n        /* \"#utility.yul\":15375:15414   */\n      tag_325\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":15348:15349   */\n      0x01\n        /* \"#utility.yul\":15341:15346   */\n      dup2\n        /* \"#utility.yul\":15337:15350   */\n      add\n        /* \"#utility.yul\":15328:15350   */\n      swap1\n      pop\n        /* \"#utility.yul\":15304:15424   */\n      jump(tag_515)\n    tag_517:\n        /* \"#utility.yul\":15244:15430   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15436:15979   */\n    tag_327:\n        /* \"#utility.yul\":15537:15539   */\n      0x1f\n        /* \"#utility.yul\":15532:15535   */\n      dup3\n        /* \"#utility.yul\":15529:15540   */\n      gt\n        /* \"#utility.yul\":15526:15972   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":15571:15609   */\n      tag_521\n        /* \"#utility.yul\":15603:15608   */\n      dup2\n        /* \"#utility.yul\":15571:15609   */\n      tag_316\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":15655:15684   */\n      tag_522\n        /* \"#utility.yul\":15673:15683   */\n      dup5\n        /* \"#utility.yul\":15655:15684   */\n      tag_317\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":15645:15653   */\n      dup2\n        /* \"#utility.yul\":15641:15685   */\n      add\n        /* \"#utility.yul\":15838:15840   */\n      0x20\n        /* \"#utility.yul\":15826:15836   */\n      dup6\n        /* \"#utility.yul\":15823:15841   */\n      lt\n        /* \"#utility.yul\":15820:15869   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":15859:15867   */\n      dup2\n        /* \"#utility.yul\":15844:15867   */\n      swap1\n      pop\n        /* \"#utility.yul\":15820:15869   */\n    tag_523:\n        /* \"#utility.yul\":15882:15962   */\n      tag_524\n        /* \"#utility.yul\":15938:15960   */\n      tag_525\n        /* \"#utility.yul\":15956:15959   */\n      dup6\n        /* \"#utility.yul\":15938:15960   */\n      tag_317\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":15928:15936   */\n      dup4\n        /* \"#utility.yul\":15924:15961   */\n      add\n        /* \"#utility.yul\":15911:15922   */\n      dup3\n        /* \"#utility.yul\":15882:15962   */\n      tag_326\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":15541:15972   */\n      pop\n      pop\n        /* \"#utility.yul\":15526:15972   */\n    tag_520:\n        /* \"#utility.yul\":15436:15979   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15985:16102   */\n    tag_328:\n        /* \"#utility.yul\":16039:16047   */\n      0x00\n        /* \"#utility.yul\":16089:16094   */\n      dup3\n        /* \"#utility.yul\":16083:16087   */\n      dup3\n        /* \"#utility.yul\":16079:16095   */\n      shr\n        /* \"#utility.yul\":16058:16095   */\n      swap1\n      pop\n        /* \"#utility.yul\":15985:16102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16108:16277   */\n    tag_329:\n        /* \"#utility.yul\":16152:16158   */\n      0x00\n        /* \"#utility.yul\":16185:16236   */\n      tag_528\n        /* \"#utility.yul\":16233:16234   */\n      0x00\n        /* \"#utility.yul\":16229:16235   */\n      not\n        /* \"#utility.yul\":16221:16226   */\n      dup5\n        /* \"#utility.yul\":16218:16219   */\n      0x08\n        /* \"#utility.yul\":16214:16227   */\n      mul\n        /* \"#utility.yul\":16185:16236   */\n      tag_328\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":16181:16237   */\n      not\n        /* \"#utility.yul\":16266:16270   */\n      dup1\n        /* \"#utility.yul\":16260:16264   */\n      dup4\n        /* \"#utility.yul\":16256:16271   */\n      and\n        /* \"#utility.yul\":16246:16271   */\n      swap2\n      pop\n        /* \"#utility.yul\":16159:16277   */\n      pop\n        /* \"#utility.yul\":16108:16277   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16282:16577   */\n    tag_330:\n        /* \"#utility.yul\":16358:16362   */\n      0x00\n        /* \"#utility.yul\":16504:16533   */\n      tag_530\n        /* \"#utility.yul\":16529:16532   */\n      dup4\n        /* \"#utility.yul\":16523:16527   */\n      dup4\n        /* \"#utility.yul\":16504:16533   */\n      tag_329\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":16496:16533   */\n      swap2\n      pop\n        /* \"#utility.yul\":16566:16569   */\n      dup3\n        /* \"#utility.yul\":16563:16564   */\n      0x02\n        /* \"#utility.yul\":16559:16570   */\n      mul\n        /* \"#utility.yul\":16553:16557   */\n      dup3\n        /* \"#utility.yul\":16550:16571   */\n      or\n        /* \"#utility.yul\":16542:16571   */\n      swap1\n      pop\n        /* \"#utility.yul\":16282:16577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16582:17977   */\n    tag_116:\n        /* \"#utility.yul\":16699:16736   */\n      tag_532\n        /* \"#utility.yul\":16732:16735   */\n      dup3\n        /* \"#utility.yul\":16699:16736   */\n      tag_287\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":16801:16819   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16793:16799   */\n      dup2\n        /* \"#utility.yul\":16790:16820   */\n      gt\n        /* \"#utility.yul\":16787:16843   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":16823:16841   */\n      tag_534\n      tag_225\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":16787:16843   */\n    tag_533:\n        /* \"#utility.yul\":16867:16905   */\n      tag_535\n        /* \"#utility.yul\":16899:16903   */\n      dup3\n        /* \"#utility.yul\":16893:16904   */\n      sload\n        /* \"#utility.yul\":16867:16905   */\n      tag_95\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":16952:17019   */\n      tag_536\n        /* \"#utility.yul\":17012:17018   */\n      dup3\n        /* \"#utility.yul\":17004:17010   */\n      dup3\n        /* \"#utility.yul\":16998:17002   */\n      dup6\n        /* \"#utility.yul\":16952:17019   */\n      tag_327\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":17046:17047   */\n      0x00\n        /* \"#utility.yul\":17070:17074   */\n      0x20\n        /* \"#utility.yul\":17057:17074   */\n      swap1\n      pop\n        /* \"#utility.yul\":17102:17104   */\n      0x1f\n        /* \"#utility.yul\":17094:17100   */\n      dup4\n        /* \"#utility.yul\":17091:17105   */\n      gt\n        /* \"#utility.yul\":17119:17120   */\n      0x01\n        /* \"#utility.yul\":17114:17732   */\n      dup2\n      eq\n      tag_538\n      jumpi\n        /* \"#utility.yul\":17776:17777   */\n      0x00\n        /* \"#utility.yul\":17793:17799   */\n      dup5\n        /* \"#utility.yul\":17790:17867   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":17842:17851   */\n      dup3\n        /* \"#utility.yul\":17837:17840   */\n      dup8\n        /* \"#utility.yul\":17833:17852   */\n      add\n        /* \"#utility.yul\":17827:17853   */\n      mload\n        /* \"#utility.yul\":17818:17853   */\n      swap1\n      pop\n        /* \"#utility.yul\":17790:17867   */\n    tag_539:\n        /* \"#utility.yul\":17893:17960   */\n      tag_540\n        /* \"#utility.yul\":17953:17959   */\n      dup6\n        /* \"#utility.yul\":17946:17951   */\n      dup3\n        /* \"#utility.yul\":17893:17960   */\n      tag_330\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":17887:17891   */\n      dup7\n        /* \"#utility.yul\":17880:17961   */\n      sstore\n        /* \"#utility.yul\":17749:17971   */\n      pop\n        /* \"#utility.yul\":17084:17971   */\n      jump(tag_537)\n        /* \"#utility.yul\":17114:17732   */\n    tag_538:\n        /* \"#utility.yul\":17166:17170   */\n      0x1f\n        /* \"#utility.yul\":17162:17171   */\n      not\n        /* \"#utility.yul\":17154:17160   */\n      dup5\n        /* \"#utility.yul\":17150:17172   */\n      and\n        /* \"#utility.yul\":17200:17237   */\n      tag_541\n        /* \"#utility.yul\":17232:17236   */\n      dup7\n        /* \"#utility.yul\":17200:17237   */\n      tag_316\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":17259:17260   */\n      0x00\n        /* \"#utility.yul\":17273:17481   */\n    tag_542:\n        /* \"#utility.yul\":17287:17294   */\n      dup3\n        /* \"#utility.yul\":17284:17285   */\n      dup2\n        /* \"#utility.yul\":17281:17295   */\n      lt\n        /* \"#utility.yul\":17273:17481   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":17366:17375   */\n      dup5\n        /* \"#utility.yul\":17361:17364   */\n      dup10\n        /* \"#utility.yul\":17357:17376   */\n      add\n        /* \"#utility.yul\":17351:17377   */\n      mload\n        /* \"#utility.yul\":17343:17349   */\n      dup3\n        /* \"#utility.yul\":17336:17378   */\n      sstore\n        /* \"#utility.yul\":17417:17418   */\n      0x01\n        /* \"#utility.yul\":17409:17415   */\n      dup3\n        /* \"#utility.yul\":17405:17419   */\n      add\n        /* \"#utility.yul\":17395:17419   */\n      swap2\n      pop\n        /* \"#utility.yul\":17464:17466   */\n      0x20\n        /* \"#utility.yul\":17453:17462   */\n      dup6\n        /* \"#utility.yul\":17449:17467   */\n      add\n        /* \"#utility.yul\":17436:17467   */\n      swap5\n      pop\n        /* \"#utility.yul\":17310:17314   */\n      0x20\n        /* \"#utility.yul\":17307:17308   */\n      dup2\n        /* \"#utility.yul\":17303:17315   */\n      add\n        /* \"#utility.yul\":17298:17315   */\n      swap1\n      pop\n        /* \"#utility.yul\":17273:17481   */\n      jump(tag_542)\n    tag_544:\n        /* \"#utility.yul\":17509:17515   */\n      dup7\n        /* \"#utility.yul\":17500:17507   */\n      dup4\n        /* \"#utility.yul\":17497:17516   */\n      lt\n        /* \"#utility.yul\":17494:17673   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":17567:17576   */\n      dup5\n        /* \"#utility.yul\":17562:17565   */\n      dup10\n        /* \"#utility.yul\":17558:17577   */\n      add\n        /* \"#utility.yul\":17552:17578   */\n      mload\n        /* \"#utility.yul\":17610:17658   */\n      tag_546\n        /* \"#utility.yul\":17652:17656   */\n      0x1f\n        /* \"#utility.yul\":17644:17650   */\n      dup10\n        /* \"#utility.yul\":17640:17657   */\n      and\n        /* \"#utility.yul\":17629:17638   */\n      dup3\n        /* \"#utility.yul\":17610:17658   */\n      tag_329\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":17602:17608   */\n      dup4\n        /* \"#utility.yul\":17595:17659   */\n      sstore\n        /* \"#utility.yul\":17517:17673   */\n      pop\n        /* \"#utility.yul\":17494:17673   */\n    tag_545:\n        /* \"#utility.yul\":17719:17720   */\n      0x01\n        /* \"#utility.yul\":17715:17716   */\n      0x02\n        /* \"#utility.yul\":17707:17713   */\n      dup9\n        /* \"#utility.yul\":17703:17717   */\n      mul\n        /* \"#utility.yul\":17699:17721   */\n      add\n        /* \"#utility.yul\":17693:17697   */\n      dup9\n        /* \"#utility.yul\":17686:17722   */\n      sstore\n        /* \"#utility.yul\":17121:17732   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17084:17971   */\n    tag_537:\n      pop\n        /* \"#utility.yul\":16674:17977   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16582:17977   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17983:18425   */\n    tag_125:\n        /* \"#utility.yul\":18132:18136   */\n      0x00\n        /* \"#utility.yul\":18170:18172   */\n      0x60\n        /* \"#utility.yul\":18159:18168   */\n      dup3\n        /* \"#utility.yul\":18155:18173   */\n      add\n        /* \"#utility.yul\":18147:18173   */\n      swap1\n      pop\n        /* \"#utility.yul\":18183:18254   */\n      tag_548\n        /* \"#utility.yul\":18251:18252   */\n      0x00\n        /* \"#utility.yul\":18240:18249   */\n      dup4\n        /* \"#utility.yul\":18236:18253   */\n      add\n        /* \"#utility.yul\":18227:18233   */\n      dup7\n        /* \"#utility.yul\":18183:18254   */\n      tag_297\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":18264:18336   */\n      tag_549\n        /* \"#utility.yul\":18332:18334   */\n      0x20\n        /* \"#utility.yul\":18321:18330   */\n      dup4\n        /* \"#utility.yul\":18317:18335   */\n      add\n        /* \"#utility.yul\":18308:18314   */\n      dup6\n        /* \"#utility.yul\":18264:18336   */\n      tag_308\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":18346:18418   */\n      tag_550\n        /* \"#utility.yul\":18414:18416   */\n      0x40\n        /* \"#utility.yul\":18403:18412   */\n      dup4\n        /* \"#utility.yul\":18399:18417   */\n      add\n        /* \"#utility.yul\":18390:18396   */\n      dup5\n        /* \"#utility.yul\":18346:18418   */\n      tag_297\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":17983:18425   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18431:18601   */\n    tag_331:\n        /* \"#utility.yul\":18571:18593   */\n      0x546f6b656e20646f6573206e6f74206578697374000000000000000000000000\n        /* \"#utility.yul\":18567:18568   */\n      0x00\n        /* \"#utility.yul\":18559:18565   */\n      dup3\n        /* \"#utility.yul\":18555:18569   */\n      add\n        /* \"#utility.yul\":18548:18594   */\n      mstore\n        /* \"#utility.yul\":18431:18601   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18607:18973   */\n    tag_332:\n        /* \"#utility.yul\":18749:18752   */\n      0x00\n        /* \"#utility.yul\":18770:18837   */\n      tag_553\n        /* \"#utility.yul\":18834:18836   */\n      0x14\n        /* \"#utility.yul\":18829:18832   */\n      dup4\n        /* \"#utility.yul\":18770:18837   */\n      tag_288\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":18763:18837   */\n      swap2\n      pop\n        /* \"#utility.yul\":18846:18939   */\n      tag_554\n        /* \"#utility.yul\":18935:18938   */\n      dup3\n        /* \"#utility.yul\":18846:18939   */\n      tag_331\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":18964:18966   */\n      0x20\n        /* \"#utility.yul\":18959:18962   */\n      dup3\n        /* \"#utility.yul\":18955:18967   */\n      add\n        /* \"#utility.yul\":18948:18967   */\n      swap1\n      pop\n        /* \"#utility.yul\":18607:18973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18979:19398   */\n    tag_133:\n        /* \"#utility.yul\":19145:19149   */\n      0x00\n        /* \"#utility.yul\":19183:19185   */\n      0x20\n        /* \"#utility.yul\":19172:19181   */\n      dup3\n        /* \"#utility.yul\":19168:19186   */\n      add\n        /* \"#utility.yul\":19160:19186   */\n      swap1\n      pop\n        /* \"#utility.yul\":19232:19241   */\n      dup2\n        /* \"#utility.yul\":19226:19230   */\n      dup2\n        /* \"#utility.yul\":19222:19242   */\n      sub\n        /* \"#utility.yul\":19218:19219   */\n      0x00\n        /* \"#utility.yul\":19207:19216   */\n      dup4\n        /* \"#utility.yul\":19203:19220   */\n      add\n        /* \"#utility.yul\":19196:19243   */\n      mstore\n        /* \"#utility.yul\":19260:19391   */\n      tag_556\n        /* \"#utility.yul\":19386:19390   */\n      dup2\n        /* \"#utility.yul\":19260:19391   */\n      tag_332\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":19252:19391   */\n      swap1\n      pop\n        /* \"#utility.yul\":18979:19398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19404:19552   */\n    tag_333:\n        /* \"#utility.yul\":19506:19517   */\n      0x00\n        /* \"#utility.yul\":19543:19546   */\n      dup2\n        /* \"#utility.yul\":19528:19546   */\n      swap1\n      pop\n        /* \"#utility.yul\":19404:19552   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19558:19948   */\n    tag_334:\n        /* \"#utility.yul\":19664:19667   */\n      0x00\n        /* \"#utility.yul\":19692:19731   */\n      tag_559\n        /* \"#utility.yul\":19725:19730   */\n      dup3\n        /* \"#utility.yul\":19692:19731   */\n      tag_287\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":19747:19836   */\n      tag_560\n        /* \"#utility.yul\":19829:19835   */\n      dup2\n        /* \"#utility.yul\":19824:19827   */\n      dup6\n        /* \"#utility.yul\":19747:19836   */\n      tag_333\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":19740:19836   */\n      swap4\n      pop\n        /* \"#utility.yul\":19845:19910   */\n      tag_561\n        /* \"#utility.yul\":19903:19909   */\n      dup2\n        /* \"#utility.yul\":19898:19901   */\n      dup6\n        /* \"#utility.yul\":19891:19895   */\n      0x20\n        /* \"#utility.yul\":19884:19889   */\n      dup7\n        /* \"#utility.yul\":19880:19896   */\n      add\n        /* \"#utility.yul\":19845:19910   */\n      tag_289\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":19935:19941   */\n      dup1\n        /* \"#utility.yul\":19930:19933   */\n      dup5\n        /* \"#utility.yul\":19926:19942   */\n      add\n        /* \"#utility.yul\":19919:19942   */\n      swap2\n      pop\n        /* \"#utility.yul\":19668:19948   */\n      pop\n        /* \"#utility.yul\":19558:19948   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19954:20389   */\n    tag_167:\n        /* \"#utility.yul\":20134:20137   */\n      0x00\n        /* \"#utility.yul\":20156:20251   */\n      tag_563\n        /* \"#utility.yul\":20247:20250   */\n      dup3\n        /* \"#utility.yul\":20238:20244   */\n      dup6\n        /* \"#utility.yul\":20156:20251   */\n      tag_334\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":20149:20251   */\n      swap2\n      pop\n        /* \"#utility.yul\":20268:20363   */\n      tag_564\n        /* \"#utility.yul\":20359:20362   */\n      dup3\n        /* \"#utility.yul\":20350:20356   */\n      dup5\n        /* \"#utility.yul\":20268:20363   */\n      tag_334\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":20261:20363   */\n      swap2\n      pop\n        /* \"#utility.yul\":20380:20383   */\n      dup2\n        /* \"#utility.yul\":20373:20383   */\n      swap1\n      pop\n        /* \"#utility.yul\":19954:20389   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20395:20493   */\n    tag_335:\n        /* \"#utility.yul\":20446:20452   */\n      0x00\n        /* \"#utility.yul\":20480:20485   */\n      dup2\n        /* \"#utility.yul\":20474:20486   */\n      mload\n        /* \"#utility.yul\":20464:20486   */\n      swap1\n      pop\n        /* \"#utility.yul\":20395:20493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20499:20667   */\n    tag_336:\n        /* \"#utility.yul\":20582:20593   */\n      0x00\n        /* \"#utility.yul\":20616:20622   */\n      dup3\n        /* \"#utility.yul\":20611:20614   */\n      dup3\n        /* \"#utility.yul\":20604:20623   */\n      mstore\n        /* \"#utility.yul\":20656:20660   */\n      0x20\n        /* \"#utility.yul\":20651:20654   */\n      dup3\n        /* \"#utility.yul\":20647:20661   */\n      add\n        /* \"#utility.yul\":20632:20661   */\n      swap1\n      pop\n        /* \"#utility.yul\":20499:20667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20673:21046   */\n    tag_337:\n        /* \"#utility.yul\":20759:20762   */\n      0x00\n        /* \"#utility.yul\":20787:20825   */\n      tag_568\n        /* \"#utility.yul\":20819:20824   */\n      dup3\n        /* \"#utility.yul\":20787:20825   */\n      tag_335\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":20841:20911   */\n      tag_569\n        /* \"#utility.yul\":20904:20910   */\n      dup2\n        /* \"#utility.yul\":20899:20902   */\n      dup6\n        /* \"#utility.yul\":20841:20911   */\n      tag_336\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":20834:20911   */\n      swap4\n      pop\n        /* \"#utility.yul\":20920:20985   */\n      tag_570\n        /* \"#utility.yul\":20978:20984   */\n      dup2\n        /* \"#utility.yul\":20973:20976   */\n      dup6\n        /* \"#utility.yul\":20966:20970   */\n      0x20\n        /* \"#utility.yul\":20959:20964   */\n      dup7\n        /* \"#utility.yul\":20955:20971   */\n      add\n        /* \"#utility.yul\":20920:20985   */\n      tag_289\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":21010:21039   */\n      tag_571\n        /* \"#utility.yul\":21032:21038   */\n      dup2\n        /* \"#utility.yul\":21010:21039   */\n      tag_290\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":21005:21008   */\n      dup5\n        /* \"#utility.yul\":21001:21040   */\n      add\n        /* \"#utility.yul\":20994:21040   */\n      swap2\n      pop\n        /* \"#utility.yul\":20763:21046   */\n      pop\n        /* \"#utility.yul\":20673:21046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21052:21692   */\n    tag_203:\n        /* \"#utility.yul\":21247:21251   */\n      0x00\n        /* \"#utility.yul\":21285:21288   */\n      0x80\n        /* \"#utility.yul\":21274:21283   */\n      dup3\n        /* \"#utility.yul\":21270:21289   */\n      add\n        /* \"#utility.yul\":21262:21289   */\n      swap1\n      pop\n        /* \"#utility.yul\":21299:21370   */\n      tag_573\n        /* \"#utility.yul\":21367:21368   */\n      0x00\n        /* \"#utility.yul\":21356:21365   */\n      dup4\n        /* \"#utility.yul\":21352:21369   */\n      add\n        /* \"#utility.yul\":21343:21349   */\n      dup8\n        /* \"#utility.yul\":21299:21370   */\n      tag_297\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":21380:21452   */\n      tag_574\n        /* \"#utility.yul\":21448:21450   */\n      0x20\n        /* \"#utility.yul\":21437:21446   */\n      dup4\n        /* \"#utility.yul\":21433:21451   */\n      add\n        /* \"#utility.yul\":21424:21430   */\n      dup7\n        /* \"#utility.yul\":21380:21452   */\n      tag_297\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":21462:21534   */\n      tag_575\n        /* \"#utility.yul\":21530:21532   */\n      0x40\n        /* \"#utility.yul\":21519:21528   */\n      dup4\n        /* \"#utility.yul\":21515:21533   */\n      add\n        /* \"#utility.yul\":21506:21512   */\n      dup6\n        /* \"#utility.yul\":21462:21534   */\n      tag_308\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":21581:21590   */\n      dup2\n        /* \"#utility.yul\":21575:21579   */\n      dup2\n        /* \"#utility.yul\":21571:21591   */\n      sub\n        /* \"#utility.yul\":21566:21568   */\n      0x60\n        /* \"#utility.yul\":21555:21564   */\n      dup4\n        /* \"#utility.yul\":21551:21569   */\n      add\n        /* \"#utility.yul\":21544:21592   */\n      mstore\n        /* \"#utility.yul\":21609:21685   */\n      tag_576\n        /* \"#utility.yul\":21680:21684   */\n      dup2\n        /* \"#utility.yul\":21671:21677   */\n      dup5\n        /* \"#utility.yul\":21609:21685   */\n      tag_337\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":21601:21685   */\n      swap1\n      pop\n        /* \"#utility.yul\":21052:21692   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21698:21839   */\n    tag_338:\n        /* \"#utility.yul\":21754:21759   */\n      0x00\n        /* \"#utility.yul\":21785:21791   */\n      dup2\n        /* \"#utility.yul\":21779:21792   */\n      mload\n        /* \"#utility.yul\":21770:21792   */\n      swap1\n      pop\n        /* \"#utility.yul\":21801:21833   */\n      tag_578\n        /* \"#utility.yul\":21827:21832   */\n      dup2\n        /* \"#utility.yul\":21801:21833   */\n      tag_283\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":21698:21839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21845:22194   */\n    tag_206:\n        /* \"#utility.yul\":21914:21920   */\n      0x00\n        /* \"#utility.yul\":21963:21965   */\n      0x20\n        /* \"#utility.yul\":21951:21960   */\n      dup3\n        /* \"#utility.yul\":21942:21949   */\n      dup5\n        /* \"#utility.yul\":21938:21961   */\n      sub\n        /* \"#utility.yul\":21934:21966   */\n      slt\n        /* \"#utility.yul\":21931:22050   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":21969:22048   */\n      tag_581\n      tag_280\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":21931:22050   */\n    tag_580:\n        /* \"#utility.yul\":22089:22090   */\n      0x00\n        /* \"#utility.yul\":22114:22177   */\n      tag_582\n        /* \"#utility.yul\":22169:22176   */\n      dup5\n        /* \"#utility.yul\":22160:22166   */\n      dup3\n        /* \"#utility.yul\":22149:22158   */\n      dup6\n        /* \"#utility.yul\":22145:22167   */\n      add\n        /* \"#utility.yul\":22114:22177   */\n      tag_338\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":22104:22177   */\n      swap2\n      pop\n        /* \"#utility.yul\":22060:22187   */\n      pop\n        /* \"#utility.yul\":21845:22194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22200:22380   */\n    tag_231:\n        /* \"#utility.yul\":22248:22325   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22245:22246   */\n      0x00\n        /* \"#utility.yul\":22238:22326   */\n      mstore\n        /* \"#utility.yul\":22345:22349   */\n      0x12\n        /* \"#utility.yul\":22342:22343   */\n      0x04\n        /* \"#utility.yul\":22335:22350   */\n      mstore\n        /* \"#utility.yul\":22369:22373   */\n      0x24\n        /* \"#utility.yul\":22366:22367   */\n      0x00\n        /* \"#utility.yul\":22359:22374   */\n      revert\n        /* \"#utility.yul\":22386:22718   */\n    tag_252:\n        /* \"#utility.yul\":22507:22511   */\n      0x00\n        /* \"#utility.yul\":22545:22547   */\n      0x40\n        /* \"#utility.yul\":22534:22543   */\n      dup3\n        /* \"#utility.yul\":22530:22548   */\n      add\n        /* \"#utility.yul\":22522:22548   */\n      swap1\n      pop\n        /* \"#utility.yul\":22558:22629   */\n      tag_585\n        /* \"#utility.yul\":22626:22627   */\n      0x00\n        /* \"#utility.yul\":22615:22624   */\n      dup4\n        /* \"#utility.yul\":22611:22628   */\n      add\n        /* \"#utility.yul\":22602:22608   */\n      dup6\n        /* \"#utility.yul\":22558:22629   */\n      tag_297\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":22639:22711   */\n      tag_586\n        /* \"#utility.yul\":22707:22709   */\n      0x20\n        /* \"#utility.yul\":22696:22705   */\n      dup4\n        /* \"#utility.yul\":22692:22710   */\n      add\n        /* \"#utility.yul\":22683:22689   */\n      dup5\n        /* \"#utility.yul\":22639:22711   */\n      tag_308\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":22386:22718   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122086e16049ea753957bf3a4cb9998ac06101bd3d21adb103184ad6b1b05c1188ea64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_206": {
									"entryPoint": null,
									"id": 206,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2825": {
									"entryPoint": null,
									"id": 2825,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 321,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 98,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 937,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 307,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 139,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 115,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8467:12",
										"nodeType": "YulBlock",
										"src": "0:8467:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "423:28:12",
													"nodeType": "YulBlock",
													"src": "423:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:12",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:12",
																		"nodeType": "YulLiteral",
																		"src": "443:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nativeSrc": "433:12:12",
																"nodeType": "YulFunctionCall",
																"src": "433:12:12"
															},
															"nativeSrc": "433:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:12"
											},
											{
												"body": {
													"nativeSrc": "546:28:12",
													"nodeType": "YulBlock",
													"src": "546:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:12",
																		"nodeType": "YulLiteral",
																		"src": "563:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:12",
																		"nodeType": "YulLiteral",
																		"src": "566:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:12"
																},
																"nativeSrc": "556:12:12",
																"nodeType": "YulFunctionCall",
																"src": "556:12:12"
															},
															"nativeSrc": "556:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:12"
											},
											{
												"body": {
													"nativeSrc": "628:54:12",
													"nodeType": "YulBlock",
													"src": "628:54:12",
													"statements": [
														{
															"nativeSrc": "638:38:12",
															"nodeType": "YulAssignment",
															"src": "638:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:12",
																				"nodeType": "YulLiteral",
																				"src": "663:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nativeSrc": "652:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:12",
																				"nodeType": "YulLiteral",
																				"src": "672:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:12"
																		},
																		"nativeSrc": "668:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:12"
																},
																"nativeSrc": "648:28:12",
																"nodeType": "YulFunctionCall",
																"src": "648:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:12",
														"nodeType": "YulTypedName",
														"src": "611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:12",
														"nodeType": "YulTypedName",
														"src": "621:6:12",
														"type": ""
													}
												],
												"src": "580:102:12"
											},
											{
												"body": {
													"nativeSrc": "716:152:12",
													"nodeType": "YulBlock",
													"src": "716:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:12",
																		"nodeType": "YulLiteral",
																		"src": "733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:12",
																		"nodeType": "YulLiteral",
																		"src": "736:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:12"
																},
																"nativeSrc": "726:88:12",
																"nodeType": "YulFunctionCall",
																"src": "726:88:12"
															},
															"nativeSrc": "726:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:12",
																		"nodeType": "YulLiteral",
																		"src": "830:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:12",
																		"nodeType": "YulLiteral",
																		"src": "833:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																},
																"nativeSrc": "823:15:12",
																"nodeType": "YulFunctionCall",
																"src": "823:15:12"
															},
															"nativeSrc": "823:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:12",
																		"nodeType": "YulLiteral",
																		"src": "854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:12",
																		"nodeType": "YulLiteral",
																		"src": "857:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:12"
																},
																"nativeSrc": "847:15:12",
																"nodeType": "YulFunctionCall",
																"src": "847:15:12"
															},
															"nativeSrc": "847:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:12"
											},
											{
												"body": {
													"nativeSrc": "917:238:12",
													"nodeType": "YulBlock",
													"src": "917:238:12",
													"statements": [
														{
															"nativeSrc": "927:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:12"
																		},
																		"nativeSrc": "957:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:12"
																},
																"nativeSrc": "945:40:12",
																"nodeType": "YulFunctionCall",
																"src": "945:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:12",
																	"nodeType": "YulTypedName",
																	"src": "931:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:12",
																"nodeType": "YulBlock",
																"src": "1096:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:12"
																			},
																			"nativeSrc": "1098:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:12"
																		},
																		"nativeSrc": "1098:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:12",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:12"
																		},
																		"nativeSrc": "1036:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:12"
																		},
																		"nativeSrc": "1072:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:12"
																},
																"nativeSrc": "1033:62:12",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:12"
															},
															"nativeSrc": "1030:88:12",
															"nodeType": "YulIf",
															"src": "1030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																},
																"nativeSrc": "1127:22:12",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:12"
															},
															"nativeSrc": "1127:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:12",
														"nodeType": "YulTypedName",
														"src": "903:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:12",
														"nodeType": "YulTypedName",
														"src": "911:4:12",
														"type": ""
													}
												],
												"src": "874:281:12"
											},
											{
												"body": {
													"nativeSrc": "1202:88:12",
													"nodeType": "YulBlock",
													"src": "1202:88:12",
													"statements": [
														{
															"nativeSrc": "1212:30:12",
															"nodeType": "YulAssignment",
															"src": "1212:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:12"
																},
																"nativeSrc": "1222:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:12"
																},
																"nativeSrc": "1251:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:12"
															},
															"nativeSrc": "1251:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:12",
														"nodeType": "YulTypedName",
														"src": "1186:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:12",
														"nodeType": "YulTypedName",
														"src": "1195:6:12",
														"type": ""
													}
												],
												"src": "1161:129:12"
											},
											{
												"body": {
													"nativeSrc": "1363:241:12",
													"nodeType": "YulBlock",
													"src": "1363:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:12",
																"nodeType": "YulBlock",
																"src": "1468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:12"
																			},
																			"nativeSrc": "1470:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:12"
																		},
																		"nativeSrc": "1470:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:12",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:12"
																},
																"nativeSrc": "1437:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:12"
															},
															"nativeSrc": "1434:56:12",
															"nodeType": "YulIf",
															"src": "1434:56:12"
														},
														{
															"nativeSrc": "1500:37:12",
															"nodeType": "YulAssignment",
															"src": "1500:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:12"
																},
																"nativeSrc": "1508:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:12"
																}
															]
														},
														{
															"nativeSrc": "1574:23:12",
															"nodeType": "YulAssignment",
															"src": "1574:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nativeSrc": "1582:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:12",
														"nodeType": "YulTypedName",
														"src": "1347:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:12",
														"nodeType": "YulTypedName",
														"src": "1358:4:12",
														"type": ""
													}
												],
												"src": "1296:308:12"
											},
											{
												"body": {
													"nativeSrc": "1672:77:12",
													"nodeType": "YulBlock",
													"src": "1672:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:12"
																},
																"nativeSrc": "1683:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:12"
															},
															"nativeSrc": "1683:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:12"
																		},
																		"nativeSrc": "1722:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:12"
																},
																"nativeSrc": "1715:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:12"
															},
															"nativeSrc": "1715:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:12",
														"nodeType": "YulTypedName",
														"src": "1654:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:12",
														"nodeType": "YulTypedName",
														"src": "1659:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:12",
														"nodeType": "YulTypedName",
														"src": "1664:6:12",
														"type": ""
													}
												],
												"src": "1610:139:12"
											},
											{
												"body": {
													"nativeSrc": "1850:339:12",
													"nodeType": "YulBlock",
													"src": "1850:339:12",
													"statements": [
														{
															"nativeSrc": "1860:75:12",
															"nodeType": "YulAssignment",
															"src": "1860:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:12"
																		},
																		"nativeSrc": "1885:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:12"
																},
																"nativeSrc": "1869:66:12",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:12"
																},
																"nativeSrc": "1944:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:12"
															},
															"nativeSrc": "1944:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:12"
														},
														{
															"nativeSrc": "1974:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:12"
																},
																"nativeSrc": "1985:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:12",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:12",
																"nodeType": "YulBlock",
																"src": "2039:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:12"
																			},
																			"nativeSrc": "2041:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:12"
																		},
																		"nativeSrc": "2041:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:12"
																		},
																		"nativeSrc": "2016:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:12"
																},
																"nativeSrc": "2013:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:12"
															},
															"nativeSrc": "2010:112:12",
															"nodeType": "YulIf",
															"src": "2010:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:12"
																},
																"nativeSrc": "2131:52:12",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:12"
															},
															"nativeSrc": "2131:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:12",
														"nodeType": "YulTypedName",
														"src": "1823:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:12",
														"nodeType": "YulTypedName",
														"src": "1828:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:12",
														"nodeType": "YulTypedName",
														"src": "1836:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:12",
														"nodeType": "YulTypedName",
														"src": "1844:5:12",
														"type": ""
													}
												],
												"src": "1755:434:12"
											},
											{
												"body": {
													"nativeSrc": "2282:282:12",
													"nodeType": "YulBlock",
													"src": "2282:282:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:12",
																"nodeType": "YulBlock",
																"src": "2331:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:12"
																			},
																			"nativeSrc": "2333:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:12"
																		},
																		"nativeSrc": "2333:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:12"
																				},
																				"nativeSrc": "2306:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:12"
																		},
																		"nativeSrc": "2302:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:12"
																},
																"nativeSrc": "2295:35:12",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:12"
															},
															"nativeSrc": "2292:122:12",
															"nodeType": "YulIf",
															"src": "2292:122:12"
														},
														{
															"nativeSrc": "2423:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:12"
																},
																"nativeSrc": "2437:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:12",
															"nodeType": "YulAssignment",
															"src": "2459:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:12"
																		},
																		"nativeSrc": "2527:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:12"
																},
																"nativeSrc": "2468:90:12",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:12",
														"nodeType": "YulTypedName",
														"src": "2260:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:12",
														"nodeType": "YulTypedName",
														"src": "2268:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:12",
														"nodeType": "YulTypedName",
														"src": "2276:5:12",
														"type": ""
													}
												],
												"src": "2209:355:12"
											},
											{
												"body": {
													"nativeSrc": "2684:739:12",
													"nodeType": "YulBlock",
													"src": "2684:739:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2730:83:12",
																"nodeType": "YulBlock",
																"src": "2730:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2732:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2732:77:12"
																			},
																			"nativeSrc": "2732:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2732:79:12"
																		},
																		"nativeSrc": "2732:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2705:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2705:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2714:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2714:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2701:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2701:3:12"
																		},
																		"nativeSrc": "2701:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2701:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2726:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2726:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2697:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2697:3:12"
																},
																"nativeSrc": "2697:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2697:32:12"
															},
															"nativeSrc": "2694:119:12",
															"nodeType": "YulIf",
															"src": "2694:119:12"
														},
														{
															"nativeSrc": "2823:291:12",
															"nodeType": "YulBlock",
															"src": "2823:291:12",
															"statements": [
																{
																	"nativeSrc": "2838:38:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2838:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2862:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2862:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2873:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2873:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2858:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2858:3:12"
																				},
																				"nativeSrc": "2858:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2858:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2852:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "2852:5:12"
																		},
																		"nativeSrc": "2852:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2842:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2842:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2923:83:12",
																		"nodeType": "YulBlock",
																		"src": "2923:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2925:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "2925:77:12"
																					},
																					"nativeSrc": "2925:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2925:79:12"
																				},
																				"nativeSrc": "2925:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "2925:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2895:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:18:12",
																				"nodeType": "YulLiteral",
																				"src": "2903:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2892:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2892:2:12"
																		},
																		"nativeSrc": "2892:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:30:12"
																	},
																	"nativeSrc": "2889:117:12",
																	"nodeType": "YulIf",
																	"src": "2889:117:12"
																},
																{
																	"nativeSrc": "3020:84:12",
																	"nodeType": "YulAssignment",
																	"src": "3020:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3076:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3076:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3087:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3087:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3072:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3072:3:12"
																				},
																				"nativeSrc": "3072:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3072:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3096:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3096:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3030:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "3030:41:12"
																		},
																		"nativeSrc": "3030:74:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3020:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3020:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3124:292:12",
															"nodeType": "YulBlock",
															"src": "3124:292:12",
															"statements": [
																{
																	"nativeSrc": "3139:39:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3139:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3163:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3163:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3174:2:12",
																						"nodeType": "YulLiteral",
																						"src": "3174:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3159:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3159:3:12"
																				},
																				"nativeSrc": "3159:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3159:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3153:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3153:5:12"
																		},
																		"nativeSrc": "3153:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3153:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3143:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3143:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3225:83:12",
																		"nodeType": "YulBlock",
																		"src": "3225:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3227:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "3227:77:12"
																					},
																					"nativeSrc": "3227:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3227:79:12"
																				},
																				"nativeSrc": "3227:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3227:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3197:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3197:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:18:12",
																				"nodeType": "YulLiteral",
																				"src": "3205:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3194:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3194:2:12"
																		},
																		"nativeSrc": "3194:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:30:12"
																	},
																	"nativeSrc": "3191:117:12",
																	"nodeType": "YulIf",
																	"src": "3191:117:12"
																},
																{
																	"nativeSrc": "3322:84:12",
																	"nodeType": "YulAssignment",
																	"src": "3322:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3378:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3378:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3389:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3389:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3374:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3374:3:12"
																				},
																				"nativeSrc": "3374:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3398:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3398:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3332:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "3332:41:12"
																		},
																		"nativeSrc": "3332:74:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3332:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3322:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3322:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2570:853:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2646:9:12",
														"nodeType": "YulTypedName",
														"src": "2646:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2657:7:12",
														"nodeType": "YulTypedName",
														"src": "2657:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2669:6:12",
														"nodeType": "YulTypedName",
														"src": "2669:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2677:6:12",
														"nodeType": "YulTypedName",
														"src": "2677:6:12",
														"type": ""
													}
												],
												"src": "2570:853:12"
											},
											{
												"body": {
													"nativeSrc": "3488:40:12",
													"nodeType": "YulBlock",
													"src": "3488:40:12",
													"statements": [
														{
															"nativeSrc": "3499:22:12",
															"nodeType": "YulAssignment",
															"src": "3499:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3515:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3515:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3509:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3509:5:12"
																},
																"nativeSrc": "3509:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3509:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3499:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3429:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:12",
														"nodeType": "YulTypedName",
														"src": "3471:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3481:6:12",
														"nodeType": "YulTypedName",
														"src": "3481:6:12",
														"type": ""
													}
												],
												"src": "3429:99:12"
											},
											{
												"body": {
													"nativeSrc": "3562:152:12",
													"nodeType": "YulBlock",
													"src": "3562:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3579:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3582:77:12",
																		"nodeType": "YulLiteral",
																		"src": "3582:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3572:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:12"
																},
																"nativeSrc": "3572:88:12",
																"nodeType": "YulFunctionCall",
																"src": "3572:88:12"
															},
															"nativeSrc": "3572:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "3572:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3676:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3676:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3679:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3679:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3669:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3669:6:12"
																},
																"nativeSrc": "3669:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3669:15:12"
															},
															"nativeSrc": "3669:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "3669:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3700:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3700:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3703:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3693:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:12"
																},
																"nativeSrc": "3693:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3693:15:12"
															},
															"nativeSrc": "3693:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "3693:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3534:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "3534:180:12"
											},
											{
												"body": {
													"nativeSrc": "3771:269:12",
													"nodeType": "YulBlock",
													"src": "3771:269:12",
													"statements": [
														{
															"nativeSrc": "3781:22:12",
															"nodeType": "YulAssignment",
															"src": "3781:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3795:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3795:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3801:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3801:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3791:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:12"
																},
																"nativeSrc": "3791:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3791:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3781:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:12"
																}
															]
														},
														{
															"nativeSrc": "3812:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3812:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3842:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3842:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3838:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:12"
																},
																"nativeSrc": "3838:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3838:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3816:18:12",
																	"nodeType": "YulTypedName",
																	"src": "3816:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3889:51:12",
																"nodeType": "YulBlock",
																"src": "3889:51:12",
																"statements": [
																	{
																		"nativeSrc": "3903:27:12",
																		"nodeType": "YulAssignment",
																		"src": "3903:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3917:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3917:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3925:4:12",
																					"nodeType": "YulLiteral",
																					"src": "3925:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3913:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3913:3:12"
																			},
																			"nativeSrc": "3913:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3913:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3903:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3903:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3869:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "3869:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3862:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:12"
																},
																"nativeSrc": "3862:26:12",
																"nodeType": "YulFunctionCall",
																"src": "3862:26:12"
															},
															"nativeSrc": "3859:81:12",
															"nodeType": "YulIf",
															"src": "3859:81:12"
														},
														{
															"body": {
																"nativeSrc": "3992:42:12",
																"nodeType": "YulBlock",
																"src": "3992:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4006:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4006:16:12"
																			},
																			"nativeSrc": "4006:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4006:18:12"
																		},
																		"nativeSrc": "4006:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4006:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3956:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "3956:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3979:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3979:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3987:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3976:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3976:2:12"
																		},
																		"nativeSrc": "3976:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3976:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3953:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3953:2:12"
																},
																"nativeSrc": "3953:38:12",
																"nodeType": "YulFunctionCall",
																"src": "3953:38:12"
															},
															"nativeSrc": "3950:84:12",
															"nodeType": "YulIf",
															"src": "3950:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3720:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3755:4:12",
														"nodeType": "YulTypedName",
														"src": "3755:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3764:6:12",
														"nodeType": "YulTypedName",
														"src": "3764:6:12",
														"type": ""
													}
												],
												"src": "3720:320:12"
											},
											{
												"body": {
													"nativeSrc": "4100:87:12",
													"nodeType": "YulBlock",
													"src": "4100:87:12",
													"statements": [
														{
															"nativeSrc": "4110:11:12",
															"nodeType": "YulAssignment",
															"src": "4110:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "4118:3:12",
																"nodeType": "YulIdentifier",
																"src": "4118:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4110:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4110:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4138:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4138:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4141:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4131:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:12"
																},
																"nativeSrc": "4131:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4131:14:12"
															},
															"nativeSrc": "4131:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "4131:14:12"
														},
														{
															"nativeSrc": "4154:26:12",
															"nodeType": "YulAssignment",
															"src": "4154:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4172:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4172:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4175:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4175:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4162:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4162:9:12"
																},
																"nativeSrc": "4162:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4162:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4154:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4154:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4046:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4087:3:12",
														"nodeType": "YulTypedName",
														"src": "4087:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4095:4:12",
														"nodeType": "YulTypedName",
														"src": "4095:4:12",
														"type": ""
													}
												],
												"src": "4046:141:12"
											},
											{
												"body": {
													"nativeSrc": "4237:49:12",
													"nodeType": "YulBlock",
													"src": "4237:49:12",
													"statements": [
														{
															"nativeSrc": "4247:33:12",
															"nodeType": "YulAssignment",
															"src": "4247:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4265:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4265:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4272:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4272:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4261:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:12"
																		},
																		"nativeSrc": "4261:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4261:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4277:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4277:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4257:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4257:3:12"
																},
																"nativeSrc": "4257:23:12",
																"nodeType": "YulFunctionCall",
																"src": "4257:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4247:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4193:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4220:5:12",
														"nodeType": "YulTypedName",
														"src": "4220:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4230:6:12",
														"nodeType": "YulTypedName",
														"src": "4230:6:12",
														"type": ""
													}
												],
												"src": "4193:93:12"
											},
											{
												"body": {
													"nativeSrc": "4345:54:12",
													"nodeType": "YulBlock",
													"src": "4345:54:12",
													"statements": [
														{
															"nativeSrc": "4355:37:12",
															"nodeType": "YulAssignment",
															"src": "4355:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4380:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4380:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4386:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4386:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4376:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4376:3:12"
																},
																"nativeSrc": "4376:16:12",
																"nodeType": "YulFunctionCall",
																"src": "4376:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4355:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "4355:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4292:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4320:4:12",
														"nodeType": "YulTypedName",
														"src": "4320:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4326:5:12",
														"nodeType": "YulTypedName",
														"src": "4326:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4336:8:12",
														"nodeType": "YulTypedName",
														"src": "4336:8:12",
														"type": ""
													}
												],
												"src": "4292:107:12"
											},
											{
												"body": {
													"nativeSrc": "4481:317:12",
													"nodeType": "YulBlock",
													"src": "4481:317:12",
													"statements": [
														{
															"nativeSrc": "4491:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4491:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4512:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "4512:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4508:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:12"
																},
																"nativeSrc": "4508:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4508:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4495:9:12",
																	"nodeType": "YulTypedName",
																	"src": "4495:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4535:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4535:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4566:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4577:66:12",
																		"nodeType": "YulLiteral",
																		"src": "4577:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4547:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4547:18:12"
																},
																"nativeSrc": "4547:97:12",
																"nodeType": "YulFunctionCall",
																"src": "4547:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4539:4:12",
																	"nodeType": "YulTypedName",
																	"src": "4539:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4653:51:12",
															"nodeType": "YulAssignment",
															"src": "4653:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4684:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4684:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4695:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "4695:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4665:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4665:18:12"
																},
																"nativeSrc": "4665:39:12",
																"nodeType": "YulFunctionCall",
																"src": "4665:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4653:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "4653:8:12"
																}
															]
														},
														{
															"nativeSrc": "4713:30:12",
															"nodeType": "YulAssignment",
															"src": "4713:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4726:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4726:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4737:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4737:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4733:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:12"
																		},
																		"nativeSrc": "4733:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4722:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4722:3:12"
																},
																"nativeSrc": "4722:21:12",
																"nodeType": "YulFunctionCall",
																"src": "4722:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4713:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4713:5:12"
																}
															]
														},
														{
															"nativeSrc": "4752:40:12",
															"nodeType": "YulAssignment",
															"src": "4752:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4765:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4765:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4776:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "4776:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4786:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4786:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4772:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:12"
																		},
																		"nativeSrc": "4772:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:12"
																},
																"nativeSrc": "4762:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4762:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4752:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4752:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4405:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4442:5:12",
														"nodeType": "YulTypedName",
														"src": "4442:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4449:10:12",
														"nodeType": "YulTypedName",
														"src": "4449:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4461:8:12",
														"nodeType": "YulTypedName",
														"src": "4461:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4474:6:12",
														"nodeType": "YulTypedName",
														"src": "4474:6:12",
														"type": ""
													}
												],
												"src": "4405:393:12"
											},
											{
												"body": {
													"nativeSrc": "4849:32:12",
													"nodeType": "YulBlock",
													"src": "4849:32:12",
													"statements": [
														{
															"nativeSrc": "4859:16:12",
															"nodeType": "YulAssignment",
															"src": "4859:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "4870:5:12",
																"nodeType": "YulIdentifier",
																"src": "4870:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4859:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "4859:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4804:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4831:5:12",
														"nodeType": "YulTypedName",
														"src": "4831:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4841:7:12",
														"nodeType": "YulTypedName",
														"src": "4841:7:12",
														"type": ""
													}
												],
												"src": "4804:77:12"
											},
											{
												"body": {
													"nativeSrc": "4919:28:12",
													"nodeType": "YulBlock",
													"src": "4919:28:12",
													"statements": [
														{
															"nativeSrc": "4929:12:12",
															"nodeType": "YulAssignment",
															"src": "4929:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "4936:5:12",
																"nodeType": "YulIdentifier",
																"src": "4936:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4929:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4929:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4887:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4905:5:12",
														"nodeType": "YulTypedName",
														"src": "4905:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4915:3:12",
														"nodeType": "YulTypedName",
														"src": "4915:3:12",
														"type": ""
													}
												],
												"src": "4887:60:12"
											},
											{
												"body": {
													"nativeSrc": "5013:82:12",
													"nodeType": "YulBlock",
													"src": "5013:82:12",
													"statements": [
														{
															"nativeSrc": "5023:66:12",
															"nodeType": "YulAssignment",
															"src": "5023:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5081:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5081:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5063:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5063:17:12"
																				},
																				"nativeSrc": "5063:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5063:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5054:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "5054:8:12"
																		},
																		"nativeSrc": "5054:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5054:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5036:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5036:17:12"
																},
																"nativeSrc": "5036:53:12",
																"nodeType": "YulFunctionCall",
																"src": "5036:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5023:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5023:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4953:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4993:5:12",
														"nodeType": "YulTypedName",
														"src": "4993:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5003:9:12",
														"nodeType": "YulTypedName",
														"src": "5003:9:12",
														"type": ""
													}
												],
												"src": "4953:142:12"
											},
											{
												"body": {
													"nativeSrc": "5148:28:12",
													"nodeType": "YulBlock",
													"src": "5148:28:12",
													"statements": [
														{
															"nativeSrc": "5158:12:12",
															"nodeType": "YulAssignment",
															"src": "5158:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "5165:5:12",
																"nodeType": "YulIdentifier",
																"src": "5165:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5158:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5101:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:12",
														"nodeType": "YulTypedName",
														"src": "5134:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5144:3:12",
														"nodeType": "YulTypedName",
														"src": "5144:3:12",
														"type": ""
													}
												],
												"src": "5101:75:12"
											},
											{
												"body": {
													"nativeSrc": "5258:193:12",
													"nodeType": "YulBlock",
													"src": "5258:193:12",
													"statements": [
														{
															"nativeSrc": "5268:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5268:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5323:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "5323:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5292:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "5292:30:12"
																},
																"nativeSrc": "5292:39:12",
																"nodeType": "YulFunctionCall",
																"src": "5292:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5272:16:12",
																	"nodeType": "YulTypedName",
																	"src": "5272:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5347:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5347:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5387:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "5387:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5381:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "5381:5:12"
																				},
																				"nativeSrc": "5381:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5381:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5394:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5394:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5426:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "5426:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5402:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "5402:23:12"
																				},
																				"nativeSrc": "5402:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5402:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5353:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "5353:27:12"
																		},
																		"nativeSrc": "5353:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5353:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5340:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:12"
																},
																"nativeSrc": "5340:105:12",
																"nodeType": "YulFunctionCall",
																"src": "5340:105:12"
															},
															"nativeSrc": "5340:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "5340:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5182:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5235:4:12",
														"nodeType": "YulTypedName",
														"src": "5235:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5241:6:12",
														"nodeType": "YulTypedName",
														"src": "5241:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5249:7:12",
														"nodeType": "YulTypedName",
														"src": "5249:7:12",
														"type": ""
													}
												],
												"src": "5182:269:12"
											},
											{
												"body": {
													"nativeSrc": "5506:24:12",
													"nodeType": "YulBlock",
													"src": "5506:24:12",
													"statements": [
														{
															"nativeSrc": "5516:8:12",
															"nodeType": "YulAssignment",
															"src": "5516:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5523:1:12",
																"nodeType": "YulLiteral",
																"src": "5523:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5516:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5516:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5457:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5502:3:12",
														"nodeType": "YulTypedName",
														"src": "5502:3:12",
														"type": ""
													}
												],
												"src": "5457:73:12"
											},
											{
												"body": {
													"nativeSrc": "5589:136:12",
													"nodeType": "YulBlock",
													"src": "5589:136:12",
													"statements": [
														{
															"nativeSrc": "5599:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5599:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5613:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "5613:30:12"
																},
																"nativeSrc": "5613:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5613:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5603:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5603:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5698:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5698:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5704:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5704:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5712:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5712:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5654:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5654:43:12"
																},
																"nativeSrc": "5654:65:12",
																"nodeType": "YulFunctionCall",
																"src": "5654:65:12"
															},
															"nativeSrc": "5654:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "5654:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5536:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5575:4:12",
														"nodeType": "YulTypedName",
														"src": "5575:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5581:6:12",
														"nodeType": "YulTypedName",
														"src": "5581:6:12",
														"type": ""
													}
												],
												"src": "5536:189:12"
											},
											{
												"body": {
													"nativeSrc": "5781:136:12",
													"nodeType": "YulBlock",
													"src": "5781:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5848:63:12",
																"nodeType": "YulBlock",
																"src": "5848:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5892:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "5892:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5899:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5899:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5862:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "5862:29:12"
																			},
																			"nativeSrc": "5862:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5862:39:12"
																		},
																		"nativeSrc": "5862:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5862:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5801:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5801:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5808:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5808:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5798:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5798:2:12"
																},
																"nativeSrc": "5798:14:12",
																"nodeType": "YulFunctionCall",
																"src": "5798:14:12"
															},
															"nativeSrc": "5791:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5813:26:12",
																"nodeType": "YulBlock",
																"src": "5813:26:12",
																"statements": [
																	{
																		"nativeSrc": "5815:22:12",
																		"nodeType": "YulAssignment",
																		"src": "5815:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5828:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "5828:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5835:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5835:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5824:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:12"
																			},
																			"nativeSrc": "5824:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5824:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5815:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5815:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5795:2:12",
																"nodeType": "YulBlock",
																"src": "5795:2:12",
																"statements": []
															},
															"src": "5791:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5731:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5769:5:12",
														"nodeType": "YulTypedName",
														"src": "5769:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5776:3:12",
														"nodeType": "YulTypedName",
														"src": "5776:3:12",
														"type": ""
													}
												],
												"src": "5731:186:12"
											},
											{
												"body": {
													"nativeSrc": "6002:464:12",
													"nodeType": "YulBlock",
													"src": "6002:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6028:431:12",
																"nodeType": "YulBlock",
																"src": "6028:431:12",
																"statements": [
																	{
																		"nativeSrc": "6042:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6042:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6090:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6090:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6058:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "6058:31:12"
																			},
																			"nativeSrc": "6058:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6058:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6046:8:12",
																				"nodeType": "YulTypedName",
																				"src": "6046:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6109:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6109:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6132:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "6132:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6160:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "6160:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6142:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "6142:17:12"
																					},
																					"nativeSrc": "6142:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6142:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6128:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6128:3:12"
																			},
																			"nativeSrc": "6128:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6128:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6113:11:12",
																				"nodeType": "YulTypedName",
																				"src": "6113:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6329:27:12",
																			"nodeType": "YulBlock",
																			"src": "6329:27:12",
																			"statements": [
																				{
																					"nativeSrc": "6331:23:12",
																					"nodeType": "YulAssignment",
																					"src": "6331:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6346:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "6346:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6331:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "6331:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6313:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "6313:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6325:2:12",
																					"nodeType": "YulLiteral",
																					"src": "6325:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6310:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "6310:2:12"
																			},
																			"nativeSrc": "6310:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6310:18:12"
																		},
																		"nativeSrc": "6307:49:12",
																		"nodeType": "YulIf",
																		"src": "6307:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6398:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "6398:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6415:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "6415:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6443:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "6443:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6425:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "6425:17:12"
																							},
																							"nativeSrc": "6425:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "6425:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6411:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "6411:3:12"
																					},
																					"nativeSrc": "6411:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6411:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6369:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "6369:28:12"
																			},
																			"nativeSrc": "6369:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6369:80:12"
																		},
																		"nativeSrc": "6369:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6369:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6019:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6019:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6024:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6024:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6016:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6016:2:12"
																},
																"nativeSrc": "6016:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6016:11:12"
															},
															"nativeSrc": "6013:446:12",
															"nodeType": "YulIf",
															"src": "6013:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5923:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5978:5:12",
														"nodeType": "YulTypedName",
														"src": "5978:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5985:3:12",
														"nodeType": "YulTypedName",
														"src": "5985:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5990:10:12",
														"nodeType": "YulTypedName",
														"src": "5990:10:12",
														"type": ""
													}
												],
												"src": "5923:543:12"
											},
											{
												"body": {
													"nativeSrc": "6535:54:12",
													"nodeType": "YulBlock",
													"src": "6535:54:12",
													"statements": [
														{
															"nativeSrc": "6545:37:12",
															"nodeType": "YulAssignment",
															"src": "6545:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6570:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6570:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6576:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6576:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6566:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6566:3:12"
																},
																"nativeSrc": "6566:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6566:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6545:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "6545:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6472:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6510:4:12",
														"nodeType": "YulTypedName",
														"src": "6510:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6516:5:12",
														"nodeType": "YulTypedName",
														"src": "6516:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6526:8:12",
														"nodeType": "YulTypedName",
														"src": "6526:8:12",
														"type": ""
													}
												],
												"src": "6472:117:12"
											},
											{
												"body": {
													"nativeSrc": "6646:118:12",
													"nodeType": "YulBlock",
													"src": "6646:118:12",
													"statements": [
														{
															"nativeSrc": "6656:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6656:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6705:1:12",
																						"nodeType": "YulLiteral",
																						"src": "6705:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6708:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "6708:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6701:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6701:3:12"
																				},
																				"nativeSrc": "6701:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6701:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6720:1:12",
																						"nodeType": "YulLiteral",
																						"src": "6720:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6716:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6716:3:12"
																				},
																				"nativeSrc": "6716:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6716:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6672:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "6672:28:12"
																		},
																		"nativeSrc": "6672:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6668:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6668:3:12"
																},
																"nativeSrc": "6668:56:12",
																"nodeType": "YulFunctionCall",
																"src": "6668:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6660:4:12",
																	"nodeType": "YulTypedName",
																	"src": "6660:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6733:25:12",
															"nodeType": "YulAssignment",
															"src": "6733:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6747:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6747:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6753:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6753:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6743:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6743:3:12"
																},
																"nativeSrc": "6743:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6743:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6733:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6733:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6595:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6623:4:12",
														"nodeType": "YulTypedName",
														"src": "6623:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6629:5:12",
														"nodeType": "YulTypedName",
														"src": "6629:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6639:6:12",
														"nodeType": "YulTypedName",
														"src": "6639:6:12",
														"type": ""
													}
												],
												"src": "6595:169:12"
											},
											{
												"body": {
													"nativeSrc": "6850:214:12",
													"nodeType": "YulBlock",
													"src": "6850:214:12",
													"statements": [
														{
															"nativeSrc": "6983:37:12",
															"nodeType": "YulAssignment",
															"src": "6983:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7010:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7010:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7016:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7016:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6991:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "6991:18:12"
																},
																"nativeSrc": "6991:29:12",
																"nodeType": "YulFunctionCall",
																"src": "6991:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6983:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6983:4:12"
																}
															]
														},
														{
															"nativeSrc": "7029:29:12",
															"nodeType": "YulAssignment",
															"src": "7029:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7040:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7040:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7050:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7050:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7053:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7053:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7046:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:12"
																		},
																		"nativeSrc": "7046:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7046:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7037:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:12"
																},
																"nativeSrc": "7037:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7037:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7029:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7029:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6769:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6831:4:12",
														"nodeType": "YulTypedName",
														"src": "6831:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6837:3:12",
														"nodeType": "YulTypedName",
														"src": "6837:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6845:4:12",
														"nodeType": "YulTypedName",
														"src": "6845:4:12",
														"type": ""
													}
												],
												"src": "6769:295:12"
											},
											{
												"body": {
													"nativeSrc": "7161:1303:12",
													"nodeType": "YulBlock",
													"src": "7161:1303:12",
													"statements": [
														{
															"nativeSrc": "7172:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7172:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7219:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7186:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "7186:32:12"
																},
																"nativeSrc": "7186:37:12",
																"nodeType": "YulFunctionCall",
																"src": "7186:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7176:6:12",
																	"nodeType": "YulTypedName",
																	"src": "7176:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7308:22:12",
																"nodeType": "YulBlock",
																"src": "7308:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7310:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7310:16:12"
																			},
																			"nativeSrc": "7310:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7310:18:12"
																		},
																		"nativeSrc": "7310:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7310:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7280:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7280:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7288:18:12",
																		"nodeType": "YulLiteral",
																		"src": "7288:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7277:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7277:2:12"
																},
																"nativeSrc": "7277:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7277:30:12"
															},
															"nativeSrc": "7274:56:12",
															"nodeType": "YulIf",
															"src": "7274:56:12"
														},
														{
															"nativeSrc": "7340:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7340:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7386:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7380:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "7380:5:12"
																		},
																		"nativeSrc": "7380:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7380:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7354:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "7354:25:12"
																},
																"nativeSrc": "7354:38:12",
																"nodeType": "YulFunctionCall",
																"src": "7354:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7344:6:12",
																	"nodeType": "YulTypedName",
																	"src": "7344:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7485:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7485:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7491:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7491:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7499:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7499:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7439:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "7439:45:12"
																},
																"nativeSrc": "7439:67:12",
																"nodeType": "YulFunctionCall",
																"src": "7439:67:12"
															},
															"nativeSrc": "7439:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "7439:67:12"
														},
														{
															"nativeSrc": "7516:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "7533:1:12",
																"nodeType": "YulLiteral",
																"src": "7533:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7520:9:12",
																	"nodeType": "YulTypedName",
																	"src": "7520:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7544:17:12",
															"nodeType": "YulAssignment",
															"src": "7544:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "7557:4:12",
																"nodeType": "YulLiteral",
																"src": "7557:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7544:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "7544:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7608:611:12",
																		"nodeType": "YulBlock",
																		"src": "7608:611:12",
																		"statements": [
																			{
																				"nativeSrc": "7622:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7622:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7641:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "7641:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7653:4:12",
																									"nodeType": "YulLiteral",
																									"src": "7653:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7649:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "7649:3:12"
																							},
																							"nativeSrc": "7649:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "7649:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7637:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "7637:3:12"
																					},
																					"nativeSrc": "7637:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7637:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7626:7:12",
																						"nodeType": "YulTypedName",
																						"src": "7626:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7673:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7673:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7719:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "7719:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7687:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "7687:31:12"
																					},
																					"nativeSrc": "7687:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7687:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7677:6:12",
																						"nodeType": "YulTypedName",
																						"src": "7677:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7737:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7737:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7746:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7746:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7741:1:12",
																						"nodeType": "YulTypedName",
																						"src": "7741:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7805:163:12",
																					"nodeType": "YulBlock",
																					"src": "7805:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7830:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "7830:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7848:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "7848:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7853:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "7853:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7844:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "7844:3:12"
																												},
																												"nativeSrc": "7844:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "7844:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7838:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "7838:5:12"
																										},
																										"nativeSrc": "7838:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "7838:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7823:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "7823:6:12"
																								},
																								"nativeSrc": "7823:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "7823:42:12"
																							},
																							"nativeSrc": "7823:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "7823:42:12"
																						},
																						{
																							"nativeSrc": "7882:24:12",
																							"nodeType": "YulAssignment",
																							"src": "7882:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7896:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "7896:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:1:12",
																										"nodeType": "YulLiteral",
																										"src": "7904:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7892:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "7892:3:12"
																								},
																								"nativeSrc": "7892:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "7892:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7882:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "7882:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7923:31:12",
																							"nodeType": "YulAssignment",
																							"src": "7923:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7940:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "7940:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7951:2:12",
																										"nodeType": "YulLiteral",
																										"src": "7951:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7936:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "7936:3:12"
																								},
																								"nativeSrc": "7936:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "7936:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7923:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "7923:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7771:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "7771:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7774:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "7774:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7768:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "7768:2:12"
																					},
																					"nativeSrc": "7768:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7768:14:12"
																				},
																				"nativeSrc": "7760:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7783:21:12",
																					"nodeType": "YulBlock",
																					"src": "7783:21:12",
																					"statements": [
																						{
																							"nativeSrc": "7785:17:12",
																							"nodeType": "YulAssignment",
																							"src": "7785:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7794:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "7794:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7797:4:12",
																										"nodeType": "YulLiteral",
																										"src": "7797:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7790:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "7790:3:12"
																								},
																								"nativeSrc": "7790:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "7790:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7785:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "7785:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7764:3:12",
																					"nodeType": "YulBlock",
																					"src": "7764:3:12",
																					"statements": []
																				},
																				"src": "7760:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "8004:156:12",
																					"nodeType": "YulBlock",
																					"src": "8004:156:12",
																					"statements": [
																						{
																							"nativeSrc": "8022:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8022:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8049:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "8049:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8054:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8054:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8045:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "8045:3:12"
																										},
																										"nativeSrc": "8045:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8045:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8039:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8039:5:12"
																								},
																								"nativeSrc": "8039:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8039:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8026:9:12",
																									"nodeType": "YulTypedName",
																									"src": "8026:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8089:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "8089:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8116:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8116:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8131:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "8131:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8139:4:12",
																														"nodeType": "YulLiteral",
																														"src": "8139:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8127:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "8127:3:12"
																												},
																												"nativeSrc": "8127:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "8127:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8097:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "8097:18:12"
																										},
																										"nativeSrc": "8097:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8097:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8082:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8082:6:12"
																								},
																								"nativeSrc": "8082:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8082:64:12"
																							},
																							"nativeSrc": "8082:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "8082:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7987:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "7987:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7996:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "7996:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7984:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "7984:2:12"
																					},
																					"nativeSrc": "7984:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7984:19:12"
																				},
																				"nativeSrc": "7981:179:12",
																				"nodeType": "YulIf",
																				"src": "7981:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8180:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "8180:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8194:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "8194:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8202:1:12",
																											"nodeType": "YulLiteral",
																											"src": "8202:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8190:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "8190:3:12"
																									},
																									"nativeSrc": "8190:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "8190:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8206:1:12",
																									"nodeType": "YulLiteral",
																									"src": "8206:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8186:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "8186:3:12"
																							},
																							"nativeSrc": "8186:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "8186:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8173:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8173:6:12"
																					},
																					"nativeSrc": "8173:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8173:36:12"
																				},
																				"nativeSrc": "8173:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "8173:36:12"
																			}
																		]
																	},
																	"nativeSrc": "7601:618:12",
																	"nodeType": "YulCase",
																	"src": "7601:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7606:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7606:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8236:222:12",
																		"nodeType": "YulBlock",
																		"src": "8236:222:12",
																		"statements": [
																			{
																				"nativeSrc": "8250:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8250:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8263:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8263:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8254:5:12",
																						"nodeType": "YulTypedName",
																						"src": "8254:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8287:67:12",
																					"nodeType": "YulBlock",
																					"src": "8287:67:12",
																					"statements": [
																						{
																							"nativeSrc": "8305:35:12",
																							"nodeType": "YulAssignment",
																							"src": "8305:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8324:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "8324:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8329:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "8329:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8320:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "8320:3:12"
																										},
																										"nativeSrc": "8320:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8320:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8314:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8314:5:12"
																								},
																								"nativeSrc": "8314:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8314:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8305:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8305:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8280:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8280:6:12"
																				},
																				"nativeSrc": "8277:77:12",
																				"nodeType": "YulIf",
																				"src": "8277:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8374:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "8374:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8433:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "8433:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8440:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8440:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8380:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "8380:52:12"
																							},
																							"nativeSrc": "8380:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "8380:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8367:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8367:6:12"
																					},
																					"nativeSrc": "8367:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8367:81:12"
																				},
																				"nativeSrc": "8367:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "8367:81:12"
																			}
																		]
																	},
																	"nativeSrc": "8228:230:12",
																	"nodeType": "YulCase",
																	"src": "8228:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7581:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7581:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7589:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7589:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7578:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7578:2:12"
																},
																"nativeSrc": "7578:14:12",
																"nodeType": "YulFunctionCall",
																"src": "7578:14:12"
															},
															"nativeSrc": "7571:887:12",
															"nodeType": "YulSwitch",
															"src": "7571:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7069:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7150:4:12",
														"nodeType": "YulTypedName",
														"src": "7150:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7156:3:12",
														"nodeType": "YulTypedName",
														"src": "7156:3:12",
														"type": ""
													}
												],
												"src": "7069:1395:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051612913380380612913833981810160405281019061003191906101af565b8181815f90816100419190610432565b5080600190816100519190610432565b5050505f6006819055505050610501565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6100c18261007b565b810181811067ffffffffffffffff821117156100e0576100df61008b565b5b80604052505050565b5f6100f2610062565b90506100fe82826100b8565b919050565b5f67ffffffffffffffff82111561011d5761011c61008b565b5b6101268261007b565b9050602081019050919050565b8281835e5f83830152505050565b5f61015361014e84610103565b6100e9565b90508281526020810184848401111561016f5761016e610077565b5b61017a848285610133565b509392505050565b5f82601f83011261019657610195610073565b5b81516101a6848260208601610141565b91505092915050565b5f80604083850312156101c5576101c461006b565b5b5f83015167ffffffffffffffff8111156101e2576101e161006f565b5b6101ee85828601610182565b925050602083015167ffffffffffffffff81111561020f5761020e61006f565b5b61021b85828601610182565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061027357607f821691505b6020821081036102865761028561022f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102e87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102ad565b6102f286836102ad565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61033661033161032c8461030a565b610313565b61030a565b9050919050565b5f819050919050565b61034f8361031c565b61036361035b8261033d565b8484546102b9565b825550505050565b5f90565b61037761036b565b610382818484610346565b505050565b5b818110156103a55761039a5f8261036f565b600181019050610388565b5050565b601f8211156103ea576103bb8161028c565b6103c48461029e565b810160208510156103d3578190505b6103e76103df8561029e565b830182610387565b50505b505050565b5f82821c905092915050565b5f61040a5f19846008026103ef565b1980831691505092915050565b5f61042283836103fb565b9150826002028217905092915050565b61043b82610225565b67ffffffffffffffff8111156104545761045361008b565b5b61045e825461025c565b6104698282856103a9565b5f60209050601f83116001811461049a575f8415610488578287015190505b6104928582610417565b8655506104f9565b601f1984166104a88661028c565b5f5b828110156104cf578489015182556001820191506020850194506020810190506104aa565b868310156104ec57848901516104e8601f8916826103fb565b8355505b6001600288020188555050505b505050505050565b6124058061050e5f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c80636031680111610095578063a22cb46511610064578063a22cb465146102a8578063b88d4fde146102c4578063c87b56dd146102e0578063e985e9c514610310576100f3565b806360316801146101f95780636352211e1461022a57806370a082311461025a57806395d89b411461028a576100f3565b8063095ea7b3116100d1578063095ea7b3146101755780631e5769121461019157806323b872dd146101c157806342842e0e146101dd576100f3565b806301ffc9a7146100f757806306fdde0314610127578063081812fc14610145575b5f80fd5b610111600480360381019061010c9190611830565b610340565b60405161011e9190611875565b60405180910390f35b61012f610421565b60405161013c91906118fe565b60405180910390f35b61015f600480360381019061015a9190611951565b6104b0565b60405161016c91906119bb565b60405180910390f35b61018f600480360381019061018a91906119fe565b6104cb565b005b6101ab60048036038101906101a69190611b68565b6104e1565b6040516101b89190611be3565b60405180910390f35b6101db60048036038101906101d69190611bfc565b6105aa565b005b6101f760048036038101906101f29190611bfc565b6106a9565b005b610213600480360381019061020e9190611951565b6106c8565b604051610221929190611c4c565b60405180910390f35b610244600480360381019061023f9190611951565b6107de565b60405161025191906119bb565b60405180910390f35b610274600480360381019061026f9190611c7a565b6107ef565b6040516102819190611be3565b60405180910390f35b6102926108a5565b60405161029f91906118fe565b60405180910390f35b6102c260048036038101906102bd9190611ccf565b610935565b005b6102de60048036038101906102d99190611dab565b61094b565b005b6102fa60048036038101906102f59190611951565b610968565b60405161030791906118fe565b60405180910390f35b61032a60048036038101906103259190611e2b565b6109ce565b6040516103379190611875565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061040a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061041a575061041982610a5c565b5b9050919050565b60605f805461042f90611e96565b80601f016020809104026020016040519081016040528092919081815260200182805461045b90611e96565b80156104a65780601f1061047d576101008083540402835291602001916104a6565b820191905f5260205f20905b81548152906001019060200180831161048957829003601f168201915b5050505050905090565b5f6104ba82610ac5565b506104c482610b4b565b9050919050565b6104dd82826104d8610b84565b610b8b565b5050565b5f60065f8154809291906104f490611ef3565b91905055505f60065490506105098582610b9d565b8460085f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180604001604052808581526020018481525060075f8381526020019081526020015f205f820151815f0155602082015181600101908161059b91906120d7565b50905050809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361061a575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161061191906119bb565b60405180910390fd5b5f61062d8383610628610b84565b610c90565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106a3578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161069a939291906121a6565b60405180910390fd5b50505050565b6106c383838360405180602001604052805f81525061094b565b505050565b5f60606106d483610e9b565b610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070a90612225565b60405180910390fd5b5f60075f8581526020019081526020015f206040518060400160405290815f820154815260200160018201805461074990611e96565b80601f016020809104026020016040519081016040528092919081815260200182805461077590611e96565b80156107c05780601f10610797576101008083540402835291602001916107c0565b820191905f5260205f20905b8154815290600101906020018083116107a357829003601f168201915b5050505050815250509050805f015181602001519250925050915091565b5f6107e882610ac5565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610860575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161085791906119bb565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600180546108b490611e96565b80601f01602080910402602001604051908101604052809291908181526020018280546108e090611e96565b801561092b5780601f106109025761010080835404028352916020019161092b565b820191905f5260205f20905b81548152906001019060200180831161090e57829003601f168201915b5050505050905090565b610947610940610b84565b8383610f03565b5050565b6109568484846105aa565b6109628484848461106c565b50505050565b606061097382610ac5565b505f61097d61121e565b90505f81511161099b5760405180602001604052805f8152506109c6565b806109a584611234565b6040516020016109b692919061227d565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610ad0836112fe565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b4257826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b399190611be3565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610b988383836001611337565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c0d575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610c0491906119bb565b60405180910390fd5b5f610c1983835f610c90565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c8b575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610c8291906119bb565b60405180910390fd5b505050565b5f80610c9b846112fe565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610cdc57610cdb8184866114f6565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d6757610d1b5f855f80611337565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610de657600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f8073ffffffffffffffffffffffffffffffffffffffff1660085f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f7357816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610f6a91906119bb565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161105f9190611875565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611218578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026110af610b84565b8685856040518563ffffffff1660e01b81526004016110d194939291906122f2565b6020604051808303815f875af192505050801561110c57506040513d601f19601f820116820180604052508101906111099190612350565b60015b61118d573d805f811461113a576040519150601f19603f3d011682016040523d82523d5f602084013e61113f565b606091505b505f81510361118557836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161117c91906119bb565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461121657836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161120d91906119bb565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f6001611242846115b9565b0190505f8167ffffffffffffffff8111156112605761125f611a44565b5b6040519080825280601f01601f1916602001820160405280156112925781602001600182028036833780820191505090505b5090505f82602001820190505b6001156112f3578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816112e8576112e761237b565b5b0494505f850361129f575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061136f57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156114a1575f61137e84610ac5565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156113e857508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156113fb57506113f981846109ce565b155b1561143d57826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161143491906119bb565b60405180910390fd5b811561149f57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61150183838361170a565b6115b4575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361157557806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161156c9190611be3565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016115ab9291906123a8565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611615577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161160b5761160a61237b565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611652576d04ee2d6d415b85acef810000000083816116485761164761237b565b5b0492506020810190505b662386f26fc10000831061168157662386f26fc1000083816116775761167661237b565b5b0492506010810190505b6305f5e10083106116aa576305f5e10083816116a05761169f61237b565b5b0492506008810190505b61271083106116cf5761271083816116c5576116c461237b565b5b0492506004810190505b606483106116f257606483816116e8576116e761237b565b5b0492506002810190505b600a8310611701576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156117c157508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611782575061178184846109ce565b5b806117c057508273ffffffffffffffffffffffffffffffffffffffff166117a883610b4b565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61180f816117db565b8114611819575f80fd5b50565b5f8135905061182a81611806565b92915050565b5f60208284031215611845576118446117d3565b5b5f6118528482850161181c565b91505092915050565b5f8115159050919050565b61186f8161185b565b82525050565b5f6020820190506118885f830184611866565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6118d08261188e565b6118da8185611898565b93506118ea8185602086016118a8565b6118f3816118b6565b840191505092915050565b5f6020820190508181035f83015261191681846118c6565b905092915050565b5f819050919050565b6119308161191e565b811461193a575f80fd5b50565b5f8135905061194b81611927565b92915050565b5f60208284031215611966576119656117d3565b5b5f6119738482850161193d565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119a58261197c565b9050919050565b6119b58161199b565b82525050565b5f6020820190506119ce5f8301846119ac565b92915050565b6119dd8161199b565b81146119e7575f80fd5b50565b5f813590506119f8816119d4565b92915050565b5f8060408385031215611a1457611a136117d3565b5b5f611a21858286016119ea565b9250506020611a328582860161193d565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611a7a826118b6565b810181811067ffffffffffffffff82111715611a9957611a98611a44565b5b80604052505050565b5f611aab6117ca565b9050611ab78282611a71565b919050565b5f67ffffffffffffffff821115611ad657611ad5611a44565b5b611adf826118b6565b9050602081019050919050565b828183375f83830152505050565b5f611b0c611b0784611abc565b611aa2565b905082815260208101848484011115611b2857611b27611a40565b5b611b33848285611aec565b509392505050565b5f82601f830112611b4f57611b4e611a3c565b5b8135611b5f848260208601611afa565b91505092915050565b5f805f60608486031215611b7f57611b7e6117d3565b5b5f611b8c868287016119ea565b9350506020611b9d8682870161193d565b925050604084013567ffffffffffffffff811115611bbe57611bbd6117d7565b5b611bca86828701611b3b565b9150509250925092565b611bdd8161191e565b82525050565b5f602082019050611bf65f830184611bd4565b92915050565b5f805f60608486031215611c1357611c126117d3565b5b5f611c20868287016119ea565b9350506020611c31868287016119ea565b9250506040611c428682870161193d565b9150509250925092565b5f604082019050611c5f5f830185611bd4565b8181036020830152611c7181846118c6565b90509392505050565b5f60208284031215611c8f57611c8e6117d3565b5b5f611c9c848285016119ea565b91505092915050565b611cae8161185b565b8114611cb8575f80fd5b50565b5f81359050611cc981611ca5565b92915050565b5f8060408385031215611ce557611ce46117d3565b5b5f611cf2858286016119ea565b9250506020611d0385828601611cbb565b9150509250929050565b5f67ffffffffffffffff821115611d2757611d26611a44565b5b611d30826118b6565b9050602081019050919050565b5f611d4f611d4a84611d0d565b611aa2565b905082815260208101848484011115611d6b57611d6a611a40565b5b611d76848285611aec565b509392505050565b5f82601f830112611d9257611d91611a3c565b5b8135611da2848260208601611d3d565b91505092915050565b5f805f8060808587031215611dc357611dc26117d3565b5b5f611dd0878288016119ea565b9450506020611de1878288016119ea565b9350506040611df28782880161193d565b925050606085013567ffffffffffffffff811115611e1357611e126117d7565b5b611e1f87828801611d7e565b91505092959194509250565b5f8060408385031215611e4157611e406117d3565b5b5f611e4e858286016119ea565b9250506020611e5f858286016119ea565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ead57607f821691505b602082108103611ec057611ebf611e69565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611efd8261191e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f2f57611f2e611ec6565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611f967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611f5b565b611fa08683611f5b565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611fdb611fd6611fd18461191e565b611fb8565b61191e565b9050919050565b5f819050919050565b611ff483611fc1565b61200861200082611fe2565b848454611f67565b825550505050565b5f90565b61201c612010565b612027818484611feb565b505050565b5b8181101561204a5761203f5f82612014565b60018101905061202d565b5050565b601f82111561208f5761206081611f3a565b61206984611f4c565b81016020851015612078578190505b61208c61208485611f4c565b83018261202c565b50505b505050565b5f82821c905092915050565b5f6120af5f1984600802612094565b1980831691505092915050565b5f6120c783836120a0565b9150826002028217905092915050565b6120e08261188e565b67ffffffffffffffff8111156120f9576120f8611a44565b5b6121038254611e96565b61210e82828561204e565b5f60209050601f83116001811461213f575f841561212d578287015190505b61213785826120bc565b86555061219e565b601f19841661214d86611f3a565b5f5b828110156121745784890151825560018201915060208501945060208101905061214f565b86831015612191578489015161218d601f8916826120a0565b8355505b6001600288020188555050505b505050505050565b5f6060820190506121b95f8301866119ac565b6121c66020830185611bd4565b6121d360408301846119ac565b949350505050565b7f546f6b656e20646f6573206e6f742065786973740000000000000000000000005f82015250565b5f61220f601483611898565b915061221a826121db565b602082019050919050565b5f6020820190508181035f83015261223c81612203565b9050919050565b5f81905092915050565b5f6122578261188e565b6122618185612243565b93506122718185602086016118a8565b80840191505092915050565b5f612288828561224d565b9150612294828461224d565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6122c4826122a0565b6122ce81856122aa565b93506122de8185602086016118a8565b6122e7816118b6565b840191505092915050565b5f6080820190506123055f8301876119ac565b61231260208301866119ac565b61231f6040830185611bd4565b818103606083015261233181846122ba565b905095945050505050565b5f8151905061234a81611806565b92915050565b5f60208284031215612365576123646117d3565b5b5f6123728482850161233c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506123bb5f8301856119ac565b6123c86020830184611bd4565b939250505056fea264697066735822122086e16049ea753957bf3a4cb9998ac06101bd3d21adb103184ad6b1b05c1188ea64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2913 CODESIZE SUB DUP1 PUSH2 0x2913 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1AF JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x41 SWAP2 SWAP1 PUSH2 0x432 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x51 SWAP2 SWAP1 PUSH2 0x432 JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x501 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xC1 DUP3 PUSH2 0x7B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x8B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF2 PUSH2 0x62 JUMP JUMPDEST SWAP1 POP PUSH2 0xFE DUP3 DUP3 PUSH2 0xB8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x11D JUMPI PUSH2 0x11C PUSH2 0x8B JUMP JUMPDEST JUMPDEST PUSH2 0x126 DUP3 PUSH2 0x7B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x153 PUSH2 0x14E DUP5 PUSH2 0x103 JUMP JUMPDEST PUSH2 0xE9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x16F JUMPI PUSH2 0x16E PUSH2 0x77 JUMP JUMPDEST JUMPDEST PUSH2 0x17A DUP5 DUP3 DUP6 PUSH2 0x133 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x196 JUMPI PUSH2 0x195 PUSH2 0x73 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1A6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x141 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C5 JUMPI PUSH2 0x1C4 PUSH2 0x6B JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E2 JUMPI PUSH2 0x1E1 PUSH2 0x6F JUMP JUMPDEST JUMPDEST PUSH2 0x1EE DUP6 DUP3 DUP7 ADD PUSH2 0x182 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20F JUMPI PUSH2 0x20E PUSH2 0x6F JUMP JUMPDEST JUMPDEST PUSH2 0x21B DUP6 DUP3 DUP7 ADD PUSH2 0x182 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x273 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x22F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2E8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x2F2 DUP7 DUP4 PUSH2 0x2AD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x336 PUSH2 0x331 PUSH2 0x32C DUP5 PUSH2 0x30A JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34F DUP4 PUSH2 0x31C JUMP JUMPDEST PUSH2 0x363 PUSH2 0x35B DUP3 PUSH2 0x33D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2B9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x377 PUSH2 0x36B JUMP JUMPDEST PUSH2 0x382 DUP2 DUP5 DUP5 PUSH2 0x346 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A5 JUMPI PUSH2 0x39A PUSH0 DUP3 PUSH2 0x36F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x388 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3EA JUMPI PUSH2 0x3BB DUP2 PUSH2 0x28C JUMP JUMPDEST PUSH2 0x3C4 DUP5 PUSH2 0x29E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3D3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3E7 PUSH2 0x3DF DUP6 PUSH2 0x29E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x387 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x40A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3EF JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x422 DUP4 DUP4 PUSH2 0x3FB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x43B DUP3 PUSH2 0x225 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x454 JUMPI PUSH2 0x453 PUSH2 0x8B JUMP JUMPDEST JUMPDEST PUSH2 0x45E DUP3 SLOAD PUSH2 0x25C JUMP JUMPDEST PUSH2 0x469 DUP3 DUP3 DUP6 PUSH2 0x3A9 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x49A JUMPI PUSH0 DUP5 ISZERO PUSH2 0x488 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x492 DUP6 DUP3 PUSH2 0x417 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4A8 DUP7 PUSH2 0x28C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4CF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4AA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4EC JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4E8 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3FB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2405 DUP1 PUSH2 0x50E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60316801 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x310 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x60316801 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28A JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x1E576912 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1DD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x1BFC JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1BFC JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP3 SWAP2 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1C7A JUMP JUMPDEST PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x968 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x40A JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x41A JUMPI POP PUSH2 0x419 DUP3 PUSH2 0xA5C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x42F SWAP1 PUSH2 0x1E96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45B SWAP1 PUSH2 0x1E96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x489 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4BA DUP3 PUSH2 0xAC5 JUMP JUMPDEST POP PUSH2 0x4C4 DUP3 PUSH2 0xB4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DD DUP3 DUP3 PUSH2 0x4D8 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0xB8B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x4F4 SWAP1 PUSH2 0x1EF3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0x509 DUP6 DUP3 PUSH2 0xB9D JUMP JUMPDEST DUP5 PUSH1 0x8 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST POP SWAP1 POP POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x61A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x62D DUP4 DUP4 PUSH2 0x628 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A3 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6C3 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x94B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH2 0x6D4 DUP4 PUSH2 0xE9B JUMP JUMPDEST PUSH2 0x713 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70A SWAP1 PUSH2 0x2225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x749 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x775 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x797 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0x7E8 DUP3 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x860 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x857 SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8B4 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E0 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x92B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x902 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x92B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x947 PUSH2 0x940 PUSH2 0xB84 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF03 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x956 DUP5 DUP5 DUP5 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x962 DUP5 DUP5 DUP5 DUP5 PUSH2 0x106C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x973 DUP3 PUSH2 0xAC5 JUMP JUMPDEST POP PUSH0 PUSH2 0x97D PUSH2 0x121E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9C6 JUMP JUMPDEST DUP1 PUSH2 0x9A5 DUP5 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9B6 SWAP3 SWAP2 SWAP1 PUSH2 0x227D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAD0 DUP4 PUSH2 0x12FE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB42 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB39 SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB98 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1337 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC0D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC04 SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xC19 DUP4 DUP4 PUSH0 PUSH2 0xC90 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC82 SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC9B DUP5 PUSH2 0x12FE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCDC JUMPI PUSH2 0xCDB DUP2 DUP5 DUP7 PUSH2 0x14F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD67 JUMPI PUSH2 0xD1B PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDE6 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF73 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6A SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x105F SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1218 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x10AF PUSH2 0xB84 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x110C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1109 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x118D JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x113F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1185 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117C SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1216 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120D SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1242 DUP5 PUSH2 0x15B9 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1260 JUMPI PUSH2 0x125F PUSH2 0x1A44 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1292 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x12F3 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x12E8 JUMPI PUSH2 0x12E7 PUSH2 0x237B JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x129F JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x136F JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x14A1 JUMPI PUSH0 PUSH2 0x137E DUP5 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x13E8 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13FB JUMPI POP PUSH2 0x13F9 DUP2 DUP5 PUSH2 0x9CE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x143D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1434 SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x149F JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1501 DUP4 DUP4 DUP4 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x15B4 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1575 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x156C SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15AB SWAP3 SWAP2 SWAP1 PUSH2 0x23A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1615 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x160B JUMPI PUSH2 0x160A PUSH2 0x237B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1652 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1648 JUMPI PUSH2 0x1647 PUSH2 0x237B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1681 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1677 JUMPI PUSH2 0x1676 PUSH2 0x237B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x16AA JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x16A0 JUMPI PUSH2 0x169F PUSH2 0x237B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x16CF JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x16C5 JUMPI PUSH2 0x16C4 PUSH2 0x237B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x16F2 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x16E8 JUMPI PUSH2 0x16E7 PUSH2 0x237B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1701 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x17C1 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1782 JUMPI POP PUSH2 0x1781 DUP5 DUP5 PUSH2 0x9CE JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x17C0 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17A8 DUP4 PUSH2 0xB4B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180F DUP2 PUSH2 0x17DB JUMP JUMPDEST DUP2 EQ PUSH2 0x1819 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x182A DUP2 PUSH2 0x1806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1845 JUMPI PUSH2 0x1844 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1852 DUP5 DUP3 DUP6 ADD PUSH2 0x181C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186F DUP2 PUSH2 0x185B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1888 PUSH0 DUP4 ADD DUP5 PUSH2 0x1866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18D0 DUP3 PUSH2 0x188E JUMP JUMPDEST PUSH2 0x18DA DUP2 DUP6 PUSH2 0x1898 JUMP JUMPDEST SWAP4 POP PUSH2 0x18EA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0x18F3 DUP2 PUSH2 0x18B6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1916 DUP2 DUP5 PUSH2 0x18C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1930 DUP2 PUSH2 0x191E JUMP JUMPDEST DUP2 EQ PUSH2 0x193A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x194B DUP2 PUSH2 0x1927 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1973 DUP5 DUP3 DUP6 ADD PUSH2 0x193D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19A5 DUP3 PUSH2 0x197C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B5 DUP2 PUSH2 0x199B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19CE PUSH0 DUP4 ADD DUP5 PUSH2 0x19AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19DD DUP2 PUSH2 0x199B JUMP JUMPDEST DUP2 EQ PUSH2 0x19E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F8 DUP2 PUSH2 0x19D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A14 JUMPI PUSH2 0x1A13 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A21 DUP6 DUP3 DUP7 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A32 DUP6 DUP3 DUP7 ADD PUSH2 0x193D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1A7A DUP3 PUSH2 0x18B6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A99 JUMPI PUSH2 0x1A98 PUSH2 0x1A44 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AAB PUSH2 0x17CA JUMP JUMPDEST SWAP1 POP PUSH2 0x1AB7 DUP3 DUP3 PUSH2 0x1A71 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AD6 JUMPI PUSH2 0x1AD5 PUSH2 0x1A44 JUMP JUMPDEST JUMPDEST PUSH2 0x1ADF DUP3 PUSH2 0x18B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B0C PUSH2 0x1B07 DUP5 PUSH2 0x1ABC JUMP JUMPDEST PUSH2 0x1AA2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B28 JUMPI PUSH2 0x1B27 PUSH2 0x1A40 JUMP JUMPDEST JUMPDEST PUSH2 0x1B33 DUP5 DUP3 DUP6 PUSH2 0x1AEC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B4F JUMPI PUSH2 0x1B4E PUSH2 0x1A3C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B5F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1AFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B7F JUMPI PUSH2 0x1B7E PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B8C DUP7 DUP3 DUP8 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B9D DUP7 DUP3 DUP8 ADD PUSH2 0x193D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BBE JUMPI PUSH2 0x1BBD PUSH2 0x17D7 JUMP JUMPDEST JUMPDEST PUSH2 0x1BCA DUP7 DUP3 DUP8 ADD PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1BDD DUP2 PUSH2 0x191E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BF6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C13 JUMPI PUSH2 0x1C12 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C20 DUP7 DUP3 DUP8 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C31 DUP7 DUP3 DUP8 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C42 DUP7 DUP3 DUP8 ADD PUSH2 0x193D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C5F PUSH0 DUP4 ADD DUP6 PUSH2 0x1BD4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C71 DUP2 DUP5 PUSH2 0x18C6 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8F JUMPI PUSH2 0x1C8E PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C9C DUP5 DUP3 DUP6 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CAE DUP2 PUSH2 0x185B JUMP JUMPDEST DUP2 EQ PUSH2 0x1CB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CC9 DUP2 PUSH2 0x1CA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CE5 JUMPI PUSH2 0x1CE4 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CF2 DUP6 DUP3 DUP7 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D03 DUP6 DUP3 DUP7 ADD PUSH2 0x1CBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D27 JUMPI PUSH2 0x1D26 PUSH2 0x1A44 JUMP JUMPDEST JUMPDEST PUSH2 0x1D30 DUP3 PUSH2 0x18B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D4F PUSH2 0x1D4A DUP5 PUSH2 0x1D0D JUMP JUMPDEST PUSH2 0x1AA2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1D6B JUMPI PUSH2 0x1D6A PUSH2 0x1A40 JUMP JUMPDEST JUMPDEST PUSH2 0x1D76 DUP5 DUP3 DUP6 PUSH2 0x1AEC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D92 JUMPI PUSH2 0x1D91 PUSH2 0x1A3C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DA2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1DC3 JUMPI PUSH2 0x1DC2 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DD0 DUP8 DUP3 DUP9 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1DE1 DUP8 DUP3 DUP9 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1DF2 DUP8 DUP3 DUP9 ADD PUSH2 0x193D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E13 JUMPI PUSH2 0x1E12 PUSH2 0x17D7 JUMP JUMPDEST JUMPDEST PUSH2 0x1E1F DUP8 DUP3 DUP9 ADD PUSH2 0x1D7E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E41 JUMPI PUSH2 0x1E40 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E4E DUP6 DUP3 DUP7 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E5F DUP6 DUP3 DUP7 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EAD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1EC0 JUMPI PUSH2 0x1EBF PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EFD DUP3 PUSH2 0x191E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1F2F JUMPI PUSH2 0x1F2E PUSH2 0x1EC6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1F96 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1F5B JUMP JUMPDEST PUSH2 0x1FA0 DUP7 DUP4 PUSH2 0x1F5B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDB PUSH2 0x1FD6 PUSH2 0x1FD1 DUP5 PUSH2 0x191E JUMP JUMPDEST PUSH2 0x1FB8 JUMP JUMPDEST PUSH2 0x191E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF4 DUP4 PUSH2 0x1FC1 JUMP JUMPDEST PUSH2 0x2008 PUSH2 0x2000 DUP3 PUSH2 0x1FE2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1F67 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x201C PUSH2 0x2010 JUMP JUMPDEST PUSH2 0x2027 DUP2 DUP5 DUP5 PUSH2 0x1FEB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x204A JUMPI PUSH2 0x203F PUSH0 DUP3 PUSH2 0x2014 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x202D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x208F JUMPI PUSH2 0x2060 DUP2 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x2069 DUP5 PUSH2 0x1F4C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2078 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x208C PUSH2 0x2084 DUP6 PUSH2 0x1F4C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x202C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20AF PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2094 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20C7 DUP4 DUP4 PUSH2 0x20A0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20E0 DUP3 PUSH2 0x188E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20F9 JUMPI PUSH2 0x20F8 PUSH2 0x1A44 JUMP JUMPDEST JUMPDEST PUSH2 0x2103 DUP3 SLOAD PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x210E DUP3 DUP3 DUP6 PUSH2 0x204E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x213F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x212D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2137 DUP6 DUP3 PUSH2 0x20BC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x219E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x214D DUP7 PUSH2 0x1F3A JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2174 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x214F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2191 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x218D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x20A0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x21B9 PUSH0 DUP4 ADD DUP7 PUSH2 0x19AC JUMP JUMPDEST PUSH2 0x21C6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x21D3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19AC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20646F6573206E6F74206578697374000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x220F PUSH1 0x14 DUP4 PUSH2 0x1898 JUMP JUMPDEST SWAP2 POP PUSH2 0x221A DUP3 PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x223C DUP2 PUSH2 0x2203 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2257 DUP3 PUSH2 0x188E JUMP JUMPDEST PUSH2 0x2261 DUP2 DUP6 PUSH2 0x2243 JUMP JUMPDEST SWAP4 POP PUSH2 0x2271 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18A8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2288 DUP3 DUP6 PUSH2 0x224D JUMP JUMPDEST SWAP2 POP PUSH2 0x2294 DUP3 DUP5 PUSH2 0x224D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22C4 DUP3 PUSH2 0x22A0 JUMP JUMPDEST PUSH2 0x22CE DUP2 DUP6 PUSH2 0x22AA JUMP JUMPDEST SWAP4 POP PUSH2 0x22DE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0x22E7 DUP2 PUSH2 0x18B6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2305 PUSH0 DUP4 ADD DUP8 PUSH2 0x19AC JUMP JUMPDEST PUSH2 0x2312 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x19AC JUMP JUMPDEST PUSH2 0x231F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1BD4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2331 DUP2 DUP5 PUSH2 0x22BA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x234A DUP2 PUSH2 0x1806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2365 JUMPI PUSH2 0x2364 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2372 DUP5 DUP3 DUP6 ADD PUSH2 0x233C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23BB PUSH0 DUP4 ADD DUP6 PUSH2 0x19AC JUMP JUMPDEST PUSH2 0x23C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BD4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xE1 PUSH1 0x49 0xEA PUSH22 0x3957BF3A4CB9998AC06101BD3D21ADB103184AD6B1B0 TLOAD GT DUP9 0xEA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "117:1219:11:-:0;;;379:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;440:4;446:6;1455:5:1;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;482:1:11::1;464:15;:19;;;;379:147:::0;;117:1219;;7:75:12;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:853::-;2669:6;2677;2726:2;2714:9;2705:7;2701:23;2697:32;2694:119;;;2732:79;;:::i;:::-;2694:119;2873:1;2862:9;2858:17;2852:24;2903:18;2895:6;2892:30;2889:117;;;2925:79;;:::i;:::-;2889:117;3030:74;3096:7;3087:6;3076:9;3072:22;3030:74;:::i;:::-;3020:84;;2823:291;3174:2;3163:9;3159:18;3153:25;3205:18;3197:6;3194:30;3191:117;;;3227:79;;:::i;:::-;3191:117;3332:74;3398:7;3389:6;3378:9;3374:22;3332:74;:::i;:::-;3322:84;;3124:292;2570:853;;;;;:::o;3429:99::-;3481:6;3515:5;3509:12;3499:22;;3429:99;;;:::o;3534:180::-;3582:77;3579:1;3572:88;3679:4;3676:1;3669:15;3703:4;3700:1;3693:15;3720:320;3764:6;3801:1;3795:4;3791:12;3781:22;;3848:1;3842:4;3838:12;3869:18;3859:81;;3925:4;3917:6;3913:17;3903:27;;3859:81;3987:2;3979:6;3976:14;3956:18;3953:38;3950:84;;4006:18;;:::i;:::-;3950:84;3771:269;3720:320;;;:::o;4046:141::-;4095:4;4118:3;4110:11;;4141:3;4138:1;4131:14;4175:4;4172:1;4162:18;4154:26;;4046:141;;;:::o;4193:93::-;4230:6;4277:2;4272;4265:5;4261:14;4257:23;4247:33;;4193:93;;;:::o;4292:107::-;4336:8;4386:5;4380:4;4376:16;4355:37;;4292:107;;;;:::o;4405:393::-;4474:6;4524:1;4512:10;4508:18;4547:97;4577:66;4566:9;4547:97;:::i;:::-;4665:39;4695:8;4684:9;4665:39;:::i;:::-;4653:51;;4737:4;4733:9;4726:5;4722:21;4713:30;;4786:4;4776:8;4772:19;4765:5;4762:30;4752:40;;4481:317;;4405:393;;;;;:::o;4804:77::-;4841:7;4870:5;4859:16;;4804:77;;;:::o;4887:60::-;4915:3;4936:5;4929:12;;4887:60;;;:::o;4953:142::-;5003:9;5036:53;5054:34;5063:24;5081:5;5063:24;:::i;:::-;5054:34;:::i;:::-;5036:53;:::i;:::-;5023:66;;4953:142;;;:::o;5101:75::-;5144:3;5165:5;5158:12;;5101:75;;;:::o;5182:269::-;5292:39;5323:7;5292:39;:::i;:::-;5353:91;5402:41;5426:16;5402:41;:::i;:::-;5394:6;5387:4;5381:11;5353:91;:::i;:::-;5347:4;5340:105;5258:193;5182:269;;;:::o;5457:73::-;5502:3;5457:73;:::o;5536:189::-;5613:32;;:::i;:::-;5654:65;5712:6;5704;5698:4;5654:65;:::i;:::-;5589:136;5536:189;;:::o;5731:186::-;5791:120;5808:3;5801:5;5798:14;5791:120;;;5862:39;5899:1;5892:5;5862:39;:::i;:::-;5835:1;5828:5;5824:13;5815:22;;5791:120;;;5731:186;;:::o;5923:543::-;6024:2;6019:3;6016:11;6013:446;;;6058:38;6090:5;6058:38;:::i;:::-;6142:29;6160:10;6142:29;:::i;:::-;6132:8;6128:44;6325:2;6313:10;6310:18;6307:49;;;6346:8;6331:23;;6307:49;6369:80;6425:22;6443:3;6425:22;:::i;:::-;6415:8;6411:37;6398:11;6369:80;:::i;:::-;6028:431;;6013:446;5923:543;;;:::o;6472:117::-;6526:8;6576:5;6570:4;6566:16;6545:37;;6472:117;;;;:::o;6595:169::-;6639:6;6672:51;6720:1;6716:6;6708:5;6705:1;6701:13;6672:51;:::i;:::-;6668:56;6753:4;6747;6743:15;6733:25;;6646:118;6595:169;;;;:::o;6769:295::-;6845:4;6991:29;7016:3;7010:4;6991:29;:::i;:::-;6983:37;;7053:3;7050:1;7046:11;7040:4;7037:21;7029:29;;6769:295;;;;:::o;7069:1395::-;7186:37;7219:3;7186:37;:::i;:::-;7288:18;7280:6;7277:30;7274:56;;;7310:18;;:::i;:::-;7274:56;7354:38;7386:4;7380:11;7354:38;:::i;:::-;7439:67;7499:6;7491;7485:4;7439:67;:::i;:::-;7533:1;7557:4;7544:17;;7589:2;7581:6;7578:14;7606:1;7601:618;;;;8263:1;8280:6;8277:77;;;8329:9;8324:3;8320:19;8314:26;8305:35;;8277:77;8380:67;8440:6;8433:5;8380:67;:::i;:::-;8374:4;8367:81;8236:222;7571:887;;7601:618;7653:4;7649:9;7641:6;7637:22;7687:37;7719:4;7687:37;:::i;:::-;7746:1;7760:208;7774:7;7771:1;7768:14;7760:208;;;7853:9;7848:3;7844:19;7838:26;7830:6;7823:42;7904:1;7896:6;7892:14;7882:24;;7951:2;7940:9;7936:18;7923:31;;7797:4;7794:1;7790:12;7785:17;;7760:208;;;7996:6;7987:7;7984:19;7981:179;;;8054:9;8049:3;8045:19;8039:26;8097:48;8139:4;8131:6;8127:17;8116:9;8097:48;:::i;:::-;8089:6;8082:64;8004:156;7981:179;8206:1;8202;8194:6;8190:14;8186:22;8180:4;8173:36;7608:611;;;7571:887;;7161:1303;;;7069:1395;;:::o;117:1219:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1014": {
									"entryPoint": 4919,
									"id": 1014,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_948": {
									"entryPoint": 2955,
									"id": 948,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_341": {
									"entryPoint": 4638,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_596": {
									"entryPoint": 5366,
									"id": 596,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1144": {
									"entryPoint": 4204,
									"id": 1144,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_exists_2883": {
									"entryPoint": 3739,
									"id": 2883,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_getApproved_523": {
									"entryPoint": 2891,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_559": {
									"entryPoint": 5898,
									"id": 559,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_752": {
									"entryPoint": 2973,
									"id": 752,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1320": {
									"entryPoint": 2948,
									"id": 1320,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_510": {
									"entryPoint": 4862,
									"id": 510,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1080": {
									"entryPoint": 2757,
									"id": 1080,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1051": {
									"entryPoint": 3843,
									"id": 1051,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_702": {
									"entryPoint": 3216,
									"id": 702,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_357": {
									"entryPoint": 1227,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_265": {
									"entryPoint": 2031,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_374": {
									"entryPoint": 1200,
									"id": 374,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenMetadata_2913": {
									"entryPoint": 1736,
									"id": 2913,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@isApprovedForAll_407": {
									"entryPoint": 2510,
									"id": 407,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2503": {
									"entryPoint": 5561,
									"id": 2503,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintNFT_2866": {
									"entryPoint": 1249,
									"id": 2866,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@name_287": {
									"entryPoint": 1057,
									"id": 287,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_278": {
									"entryPoint": 2014,
									"id": 278,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_471": {
									"entryPoint": 1705,
									"id": 471,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_497": {
									"entryPoint": 2379,
									"id": 497,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_390": {
									"entryPoint": 2357,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1616": {
									"entryPoint": 2652,
									"id": 1616,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_237": {
									"entryPoint": 832,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_296": {
									"entryPoint": 2213,
									"id": 296,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1406": {
									"entryPoint": 4660,
									"id": 1406,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_332": {
									"entryPoint": 2408,
									"id": 332,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_453": {
									"entryPoint": 1450,
									"id": 453,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7485,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6906,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_string_memory_ptr": {
									"entryPoint": 7016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8829,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8946,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9128,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8614,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7244,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6090,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 7994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8270,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6892,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6312,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7878,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9083,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6724,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6716,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6720,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6099,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726": {
									"entryPoint": 8667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8039,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8171,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22721:12",
										"nodeType": "YulBlock",
										"src": "0:22721:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1577:40:12",
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nativeSrc": "1588:22:12",
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nativeSrc": "1598:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:12",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:12",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nativeSrc": "1719:73:12",
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nativeSrc": "1729:19:12",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nativeSrc": "1729:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nativeSrc": "1757:29:12",
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nativeSrc": "1772:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:12",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:12",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:12",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nativeSrc": "1860:77:12",
													"nodeType": "YulBlock",
													"src": "1860:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:12"
																},
																"nativeSrc": "1871:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:12"
															},
															"nativeSrc": "1871:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:12"
																		},
																		"nativeSrc": "1910:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:12"
																},
																"nativeSrc": "1903:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:12"
															},
															"nativeSrc": "1903:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:12",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:12",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:12",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:139:12"
											},
											{
												"body": {
													"nativeSrc": "1991:54:12",
													"nodeType": "YulBlock",
													"src": "1991:54:12",
													"statements": [
														{
															"nativeSrc": "2001:38:12",
															"nodeType": "YulAssignment",
															"src": "2001:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:12"
																		},
																		"nativeSrc": "2015:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:12"
																		},
																		"nativeSrc": "2031:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:12"
																},
																"nativeSrc": "2011:28:12",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:12",
														"nodeType": "YulTypedName",
														"src": "1974:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:12",
														"nodeType": "YulTypedName",
														"src": "1984:6:12",
														"type": ""
													}
												],
												"src": "1943:102:12"
											},
											{
												"body": {
													"nativeSrc": "2143:285:12",
													"nodeType": "YulBlock",
													"src": "2143:285:12",
													"statements": [
														{
															"nativeSrc": "2153:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:12"
																},
																"nativeSrc": "2167:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:12",
															"nodeType": "YulAssignment",
															"src": "2215:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:12"
																},
																"nativeSrc": "2222:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:12"
																		},
																		"nativeSrc": "2337:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:12"
																},
																"nativeSrc": "2302:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:12"
															},
															"nativeSrc": "2302:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:12"
														},
														{
															"nativeSrc": "2376:46:12",
															"nodeType": "YulAssignment",
															"src": "2376:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:12"
																		},
																		"nativeSrc": "2392:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:12"
																},
																"nativeSrc": "2383:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:12",
														"nodeType": "YulTypedName",
														"src": "2124:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:12",
														"nodeType": "YulTypedName",
														"src": "2131:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:12",
														"nodeType": "YulTypedName",
														"src": "2139:3:12",
														"type": ""
													}
												],
												"src": "2051:377:12"
											},
											{
												"body": {
													"nativeSrc": "2552:195:12",
													"nodeType": "YulBlock",
													"src": "2552:195:12",
													"statements": [
														{
															"nativeSrc": "2562:26:12",
															"nodeType": "YulAssignment",
															"src": "2562:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:12"
																},
																"nativeSrc": "2570:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:12"
																		},
																		"nativeSrc": "2605:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:12"
																		},
																		"nativeSrc": "2624:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:12"
																},
																"nativeSrc": "2598:47:12",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:12"
															},
															"nativeSrc": "2598:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:12"
														},
														{
															"nativeSrc": "2654:86:12",
															"nodeType": "YulAssignment",
															"src": "2654:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:12"
																},
																"nativeSrc": "2662:78:12",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:12",
														"nodeType": "YulTypedName",
														"src": "2524:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:12",
														"nodeType": "YulTypedName",
														"src": "2536:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:12",
														"nodeType": "YulTypedName",
														"src": "2547:4:12",
														"type": ""
													}
												],
												"src": "2434:313:12"
											},
											{
												"body": {
													"nativeSrc": "2798:32:12",
													"nodeType": "YulBlock",
													"src": "2798:32:12",
													"statements": [
														{
															"nativeSrc": "2808:16:12",
															"nodeType": "YulAssignment",
															"src": "2808:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:12",
																"nodeType": "YulIdentifier",
																"src": "2819:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:12",
														"nodeType": "YulTypedName",
														"src": "2780:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:12",
														"nodeType": "YulTypedName",
														"src": "2790:7:12",
														"type": ""
													}
												],
												"src": "2753:77:12"
											},
											{
												"body": {
													"nativeSrc": "2879:79:12",
													"nodeType": "YulBlock",
													"src": "2879:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:12",
																"nodeType": "YulBlock",
																"src": "2936:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:12"
																			},
																			"nativeSrc": "2938:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:12"
																		},
																		"nativeSrc": "2938:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:12"
																				},
																				"nativeSrc": "2909:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:12"
																		},
																		"nativeSrc": "2899:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:12"
																},
																"nativeSrc": "2892:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:12"
															},
															"nativeSrc": "2889:63:12",
															"nodeType": "YulIf",
															"src": "2889:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:12",
														"nodeType": "YulTypedName",
														"src": "2872:5:12",
														"type": ""
													}
												],
												"src": "2836:122:12"
											},
											{
												"body": {
													"nativeSrc": "3016:87:12",
													"nodeType": "YulBlock",
													"src": "3016:87:12",
													"statements": [
														{
															"nativeSrc": "3026:29:12",
															"nodeType": "YulAssignment",
															"src": "3026:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:12"
																},
																"nativeSrc": "3035:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:12"
																},
																"nativeSrc": "3064:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:12"
															},
															"nativeSrc": "3064:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:12",
														"nodeType": "YulTypedName",
														"src": "2994:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:12",
														"nodeType": "YulTypedName",
														"src": "3002:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:12",
														"nodeType": "YulTypedName",
														"src": "3010:5:12",
														"type": ""
													}
												],
												"src": "2964:139:12"
											},
											{
												"body": {
													"nativeSrc": "3175:263:12",
													"nodeType": "YulBlock",
													"src": "3175:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:12",
																"nodeType": "YulBlock",
																"src": "3221:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:12"
																			},
																			"nativeSrc": "3223:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:12"
																		},
																		"nativeSrc": "3223:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:12"
																		},
																		"nativeSrc": "3192:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:12"
																},
																"nativeSrc": "3188:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:12"
															},
															"nativeSrc": "3185:119:12",
															"nodeType": "YulIf",
															"src": "3185:119:12"
														},
														{
															"nativeSrc": "3314:117:12",
															"nodeType": "YulBlock",
															"src": "3314:117:12",
															"statements": [
																{
																	"nativeSrc": "3329:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:12"
																				},
																				"nativeSrc": "3389:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:12"
																		},
																		"nativeSrc": "3368:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:12",
														"nodeType": "YulTypedName",
														"src": "3145:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:12",
														"nodeType": "YulTypedName",
														"src": "3156:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:12",
														"nodeType": "YulTypedName",
														"src": "3168:6:12",
														"type": ""
													}
												],
												"src": "3109:329:12"
											},
											{
												"body": {
													"nativeSrc": "3489:81:12",
													"nodeType": "YulBlock",
													"src": "3489:81:12",
													"statements": [
														{
															"nativeSrc": "3499:65:12",
															"nodeType": "YulAssignment",
															"src": "3499:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:12",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:12"
																},
																"nativeSrc": "3510:54:12",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:12",
														"nodeType": "YulTypedName",
														"src": "3471:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:12",
														"nodeType": "YulTypedName",
														"src": "3481:7:12",
														"type": ""
													}
												],
												"src": "3444:126:12"
											},
											{
												"body": {
													"nativeSrc": "3621:51:12",
													"nodeType": "YulBlock",
													"src": "3621:51:12",
													"statements": [
														{
															"nativeSrc": "3631:35:12",
															"nodeType": "YulAssignment",
															"src": "3631:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:12"
																},
																"nativeSrc": "3642:24:12",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:12",
														"nodeType": "YulTypedName",
														"src": "3603:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:12",
														"nodeType": "YulTypedName",
														"src": "3613:7:12",
														"type": ""
													}
												],
												"src": "3576:96:12"
											},
											{
												"body": {
													"nativeSrc": "3743:53:12",
													"nodeType": "YulBlock",
													"src": "3743:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:12"
																		},
																		"nativeSrc": "3765:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:12"
																},
																"nativeSrc": "3753:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:12"
															},
															"nativeSrc": "3753:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:12",
														"nodeType": "YulTypedName",
														"src": "3731:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:12",
														"nodeType": "YulTypedName",
														"src": "3738:3:12",
														"type": ""
													}
												],
												"src": "3678:118:12"
											},
											{
												"body": {
													"nativeSrc": "3900:124:12",
													"nodeType": "YulBlock",
													"src": "3900:124:12",
													"statements": [
														{
															"nativeSrc": "3910:26:12",
															"nodeType": "YulAssignment",
															"src": "3910:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:12"
																},
																"nativeSrc": "3918:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:12"
																		},
																		"nativeSrc": "3999:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:12"
																},
																"nativeSrc": "3946:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:12"
															},
															"nativeSrc": "3946:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:12",
														"nodeType": "YulTypedName",
														"src": "3872:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:12",
														"nodeType": "YulTypedName",
														"src": "3884:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:12",
														"nodeType": "YulTypedName",
														"src": "3895:4:12",
														"type": ""
													}
												],
												"src": "3802:222:12"
											},
											{
												"body": {
													"nativeSrc": "4073:79:12",
													"nodeType": "YulBlock",
													"src": "4073:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:12",
																"nodeType": "YulBlock",
																"src": "4130:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:12"
																			},
																			"nativeSrc": "4132:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:12"
																		},
																		"nativeSrc": "4132:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:12"
																				},
																				"nativeSrc": "4103:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:12"
																		},
																		"nativeSrc": "4093:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:12"
																},
																"nativeSrc": "4086:43:12",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:12"
															},
															"nativeSrc": "4083:63:12",
															"nodeType": "YulIf",
															"src": "4083:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:12",
														"nodeType": "YulTypedName",
														"src": "4066:5:12",
														"type": ""
													}
												],
												"src": "4030:122:12"
											},
											{
												"body": {
													"nativeSrc": "4210:87:12",
													"nodeType": "YulBlock",
													"src": "4210:87:12",
													"statements": [
														{
															"nativeSrc": "4220:29:12",
															"nodeType": "YulAssignment",
															"src": "4220:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:12"
																},
																"nativeSrc": "4229:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:12"
																},
																"nativeSrc": "4258:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:12"
															},
															"nativeSrc": "4258:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:12",
														"nodeType": "YulTypedName",
														"src": "4188:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:12",
														"nodeType": "YulTypedName",
														"src": "4196:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:12",
														"nodeType": "YulTypedName",
														"src": "4204:5:12",
														"type": ""
													}
												],
												"src": "4158:139:12"
											},
											{
												"body": {
													"nativeSrc": "4386:391:12",
													"nodeType": "YulBlock",
													"src": "4386:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:12",
																"nodeType": "YulBlock",
																"src": "4432:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:12"
																			},
																			"nativeSrc": "4434:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:12"
																		},
																		"nativeSrc": "4434:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:12"
																		},
																		"nativeSrc": "4403:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:12"
																},
																"nativeSrc": "4399:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:12"
															},
															"nativeSrc": "4396:119:12",
															"nodeType": "YulIf",
															"src": "4396:119:12"
														},
														{
															"nativeSrc": "4525:117:12",
															"nodeType": "YulBlock",
															"src": "4525:117:12",
															"statements": [
																{
																	"nativeSrc": "4540:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:12"
																				},
																				"nativeSrc": "4600:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:12"
																		},
																		"nativeSrc": "4579:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:12",
															"nodeType": "YulBlock",
															"src": "4652:118:12",
															"statements": [
																{
																	"nativeSrc": "4667:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:12"
																				},
																				"nativeSrc": "4728:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:12"
																		},
																		"nativeSrc": "4707:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:12",
														"nodeType": "YulTypedName",
														"src": "4348:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:12",
														"nodeType": "YulTypedName",
														"src": "4359:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:12",
														"nodeType": "YulTypedName",
														"src": "4371:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:12",
														"nodeType": "YulTypedName",
														"src": "4379:6:12",
														"type": ""
													}
												],
												"src": "4303:474:12"
											},
											{
												"body": {
													"nativeSrc": "4872:28:12",
													"nodeType": "YulBlock",
													"src": "4872:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4889:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4889:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4892:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4892:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4882:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4882:6:12"
																},
																"nativeSrc": "4882:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4882:12:12"
															},
															"nativeSrc": "4882:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "4882:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4783:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4783:117:12"
											},
											{
												"body": {
													"nativeSrc": "4995:28:12",
													"nodeType": "YulBlock",
													"src": "4995:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5012:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5012:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5015:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5015:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5005:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5005:6:12"
																},
																"nativeSrc": "5005:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5005:12:12"
															},
															"nativeSrc": "5005:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "5005:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4906:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4906:117:12"
											},
											{
												"body": {
													"nativeSrc": "5057:152:12",
													"nodeType": "YulBlock",
													"src": "5057:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5074:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5074:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5077:77:12",
																		"nodeType": "YulLiteral",
																		"src": "5077:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5067:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5067:6:12"
																},
																"nativeSrc": "5067:88:12",
																"nodeType": "YulFunctionCall",
																"src": "5067:88:12"
															},
															"nativeSrc": "5067:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "5067:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5171:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5171:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5174:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5174:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5164:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5164:6:12"
																},
																"nativeSrc": "5164:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5164:15:12"
															},
															"nativeSrc": "5164:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5164:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5195:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5195:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5198:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5198:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5188:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5188:6:12"
																},
																"nativeSrc": "5188:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5188:15:12"
															},
															"nativeSrc": "5188:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5188:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5029:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5029:180:12"
											},
											{
												"body": {
													"nativeSrc": "5258:238:12",
													"nodeType": "YulBlock",
													"src": "5258:238:12",
													"statements": [
														{
															"nativeSrc": "5268:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5268:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5290:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5290:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5320:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5320:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5298:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "5298:21:12"
																		},
																		"nativeSrc": "5298:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5298:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5286:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5286:3:12"
																},
																"nativeSrc": "5286:40:12",
																"nodeType": "YulFunctionCall",
																"src": "5286:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5272:10:12",
																	"nodeType": "YulTypedName",
																	"src": "5272:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5437:22:12",
																"nodeType": "YulBlock",
																"src": "5437:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5439:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5439:16:12"
																			},
																			"nativeSrc": "5439:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5439:18:12"
																		},
																		"nativeSrc": "5439:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5439:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5380:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "5380:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5392:18:12",
																				"nodeType": "YulLiteral",
																				"src": "5392:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5377:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5377:2:12"
																		},
																		"nativeSrc": "5377:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5377:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5416:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "5416:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5428:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5428:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5413:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5413:2:12"
																		},
																		"nativeSrc": "5413:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5413:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5374:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5374:2:12"
																},
																"nativeSrc": "5374:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5374:62:12"
															},
															"nativeSrc": "5371:88:12",
															"nodeType": "YulIf",
															"src": "5371:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5475:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5475:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5479:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "5479:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5468:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5468:6:12"
																},
																"nativeSrc": "5468:22:12",
																"nodeType": "YulFunctionCall",
																"src": "5468:22:12"
															},
															"nativeSrc": "5468:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "5468:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5215:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5244:6:12",
														"nodeType": "YulTypedName",
														"src": "5244:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5252:4:12",
														"nodeType": "YulTypedName",
														"src": "5252:4:12",
														"type": ""
													}
												],
												"src": "5215:281:12"
											},
											{
												"body": {
													"nativeSrc": "5543:88:12",
													"nodeType": "YulBlock",
													"src": "5543:88:12",
													"statements": [
														{
															"nativeSrc": "5553:30:12",
															"nodeType": "YulAssignment",
															"src": "5553:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5563:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5563:18:12"
																},
																"nativeSrc": "5563:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5563:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5553:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5553:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5612:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5612:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5620:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5620:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5592:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "5592:19:12"
																},
																"nativeSrc": "5592:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5592:33:12"
															},
															"nativeSrc": "5592:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5592:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5502:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5527:4:12",
														"nodeType": "YulTypedName",
														"src": "5527:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5536:6:12",
														"nodeType": "YulTypedName",
														"src": "5536:6:12",
														"type": ""
													}
												],
												"src": "5502:129:12"
											},
											{
												"body": {
													"nativeSrc": "5704:241:12",
													"nodeType": "YulBlock",
													"src": "5704:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5809:22:12",
																"nodeType": "YulBlock",
																"src": "5809:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5811:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5811:16:12"
																			},
																			"nativeSrc": "5811:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5811:18:12"
																		},
																		"nativeSrc": "5811:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5811:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5781:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5781:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5789:18:12",
																		"nodeType": "YulLiteral",
																		"src": "5789:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5778:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5778:2:12"
																},
																"nativeSrc": "5778:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5778:30:12"
															},
															"nativeSrc": "5775:56:12",
															"nodeType": "YulIf",
															"src": "5775:56:12"
														},
														{
															"nativeSrc": "5841:37:12",
															"nodeType": "YulAssignment",
															"src": "5841:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5871:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5871:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5849:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "5849:21:12"
																},
																"nativeSrc": "5849:29:12",
																"nodeType": "YulFunctionCall",
																"src": "5849:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5841:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5841:4:12"
																}
															]
														},
														{
															"nativeSrc": "5915:23:12",
															"nodeType": "YulAssignment",
															"src": "5915:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5927:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5927:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5933:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5933:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5923:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5923:3:12"
																},
																"nativeSrc": "5923:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5923:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5915:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5915:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "5637:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5688:6:12",
														"nodeType": "YulTypedName",
														"src": "5688:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5699:4:12",
														"nodeType": "YulTypedName",
														"src": "5699:4:12",
														"type": ""
													}
												],
												"src": "5637:308:12"
											},
											{
												"body": {
													"nativeSrc": "6015:84:12",
													"nodeType": "YulBlock",
													"src": "6015:84:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6039:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6039:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6044:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6044:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6049:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6049:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6026:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "6026:12:12"
																},
																"nativeSrc": "6026:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6026:30:12"
															},
															"nativeSrc": "6026:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6026:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6076:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6076:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6081:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6081:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6072:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6072:3:12"
																		},
																		"nativeSrc": "6072:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6072:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6090:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6090:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6065:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6065:6:12"
																},
																"nativeSrc": "6065:27:12",
																"nodeType": "YulFunctionCall",
																"src": "6065:27:12"
															},
															"nativeSrc": "6065:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "6065:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "5951:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5997:3:12",
														"nodeType": "YulTypedName",
														"src": "5997:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6002:3:12",
														"nodeType": "YulTypedName",
														"src": "6002:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6007:6:12",
														"nodeType": "YulTypedName",
														"src": "6007:6:12",
														"type": ""
													}
												],
												"src": "5951:148:12"
											},
											{
												"body": {
													"nativeSrc": "6189:341:12",
													"nodeType": "YulBlock",
													"src": "6189:341:12",
													"statements": [
														{
															"nativeSrc": "6199:75:12",
															"nodeType": "YulAssignment",
															"src": "6199:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6266:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6266:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6224:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "6224:41:12"
																		},
																		"nativeSrc": "6224:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6224:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6208:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "6208:15:12"
																},
																"nativeSrc": "6208:66:12",
																"nodeType": "YulFunctionCall",
																"src": "6208:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6199:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6199:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6290:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6290:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6297:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6297:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6283:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6283:6:12"
																},
																"nativeSrc": "6283:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6283:21:12"
															},
															"nativeSrc": "6283:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6283:21:12"
														},
														{
															"nativeSrc": "6313:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6313:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6328:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6328:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6335:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6335:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6324:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:12"
																},
																"nativeSrc": "6324:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6324:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6317:3:12",
																	"nodeType": "YulTypedName",
																	"src": "6317:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6378:83:12",
																"nodeType": "YulBlock",
																"src": "6378:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6380:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6380:77:12"
																			},
																			"nativeSrc": "6380:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6380:79:12"
																		},
																		"nativeSrc": "6380:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6380:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6359:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6359:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6364:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6364:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6355:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6355:3:12"
																		},
																		"nativeSrc": "6355:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6373:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6373:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6352:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6352:2:12"
																},
																"nativeSrc": "6352:25:12",
																"nodeType": "YulFunctionCall",
																"src": "6352:25:12"
															},
															"nativeSrc": "6349:112:12",
															"nodeType": "YulIf",
															"src": "6349:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6507:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6507:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6512:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6512:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6517:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6517:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6470:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "6470:36:12"
																},
																"nativeSrc": "6470:54:12",
																"nodeType": "YulFunctionCall",
																"src": "6470:54:12"
															},
															"nativeSrc": "6470:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "6470:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6105:425:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6162:3:12",
														"nodeType": "YulTypedName",
														"src": "6162:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6167:6:12",
														"nodeType": "YulTypedName",
														"src": "6167:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6175:3:12",
														"nodeType": "YulTypedName",
														"src": "6175:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6183:5:12",
														"nodeType": "YulTypedName",
														"src": "6183:5:12",
														"type": ""
													}
												],
												"src": "6105:425:12"
											},
											{
												"body": {
													"nativeSrc": "6612:278:12",
													"nodeType": "YulBlock",
													"src": "6612:278:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6661:83:12",
																"nodeType": "YulBlock",
																"src": "6661:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6663:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6663:77:12"
																			},
																			"nativeSrc": "6663:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6663:79:12"
																		},
																		"nativeSrc": "6663:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6663:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6640:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6640:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6648:4:12",
																						"nodeType": "YulLiteral",
																						"src": "6648:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6636:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6636:3:12"
																				},
																				"nativeSrc": "6636:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6636:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6655:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6655:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6632:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6632:3:12"
																		},
																		"nativeSrc": "6632:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6632:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6625:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6625:6:12"
																},
																"nativeSrc": "6625:35:12",
																"nodeType": "YulFunctionCall",
																"src": "6625:35:12"
															},
															"nativeSrc": "6622:122:12",
															"nodeType": "YulIf",
															"src": "6622:122:12"
														},
														{
															"nativeSrc": "6753:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6753:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6780:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6767:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "6767:12:12"
																},
																"nativeSrc": "6767:20:12",
																"nodeType": "YulFunctionCall",
																"src": "6767:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6757:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6757:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6796:88:12",
															"nodeType": "YulAssignment",
															"src": "6796:88:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6857:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6857:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6865:4:12",
																				"nodeType": "YulLiteral",
																				"src": "6865:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6853:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6853:3:12"
																		},
																		"nativeSrc": "6853:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6853:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6872:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6872:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6880:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6880:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "6805:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "6805:47:12"
																},
																"nativeSrc": "6805:79:12",
																"nodeType": "YulFunctionCall",
																"src": "6805:79:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6796:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6796:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "6550:340:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6590:6:12",
														"nodeType": "YulTypedName",
														"src": "6590:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6598:3:12",
														"nodeType": "YulTypedName",
														"src": "6598:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6606:5:12",
														"nodeType": "YulTypedName",
														"src": "6606:5:12",
														"type": ""
													}
												],
												"src": "6550:340:12"
											},
											{
												"body": {
													"nativeSrc": "7006:689:12",
													"nodeType": "YulBlock",
													"src": "7006:689:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7052:83:12",
																"nodeType": "YulBlock",
																"src": "7052:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7054:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7054:77:12"
																			},
																			"nativeSrc": "7054:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7054:79:12"
																		},
																		"nativeSrc": "7054:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7054:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7027:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7027:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7036:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7036:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7023:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7023:3:12"
																		},
																		"nativeSrc": "7023:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7023:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7048:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7048:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7019:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7019:3:12"
																},
																"nativeSrc": "7019:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7019:32:12"
															},
															"nativeSrc": "7016:119:12",
															"nodeType": "YulIf",
															"src": "7016:119:12"
														},
														{
															"nativeSrc": "7145:117:12",
															"nodeType": "YulBlock",
															"src": "7145:117:12",
															"statements": [
																{
																	"nativeSrc": "7160:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7160:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7174:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7174:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7164:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7164:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7189:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7189:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7224:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7224:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7235:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7235:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7220:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7220:3:12"
																				},
																				"nativeSrc": "7220:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7220:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7244:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7244:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7199:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7199:20:12"
																		},
																		"nativeSrc": "7199:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7199:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7189:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7189:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7272:118:12",
															"nodeType": "YulBlock",
															"src": "7272:118:12",
															"statements": [
																{
																	"nativeSrc": "7287:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7287:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7301:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7301:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7291:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7291:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7317:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7317:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7352:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7352:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7363:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7363:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7348:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7348:3:12"
																				},
																				"nativeSrc": "7348:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7348:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7372:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7372:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7327:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7327:20:12"
																		},
																		"nativeSrc": "7327:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7327:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7317:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7317:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7400:288:12",
															"nodeType": "YulBlock",
															"src": "7400:288:12",
															"statements": [
																{
																	"nativeSrc": "7415:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7415:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7446:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7446:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7457:2:12",
																						"nodeType": "YulLiteral",
																						"src": "7457:2:12",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7442:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7442:3:12"
																				},
																				"nativeSrc": "7442:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7442:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7429:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "7429:12:12"
																		},
																		"nativeSrc": "7429:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7429:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7419:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7419:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7508:83:12",
																		"nodeType": "YulBlock",
																		"src": "7508:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7510:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "7510:77:12"
																					},
																					"nativeSrc": "7510:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7510:79:12"
																				},
																				"nativeSrc": "7510:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "7510:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7480:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7480:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7488:18:12",
																				"nodeType": "YulLiteral",
																				"src": "7488:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7477:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7477:2:12"
																		},
																		"nativeSrc": "7477:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7477:30:12"
																	},
																	"nativeSrc": "7474:117:12",
																	"nodeType": "YulIf",
																	"src": "7474:117:12"
																},
																{
																	"nativeSrc": "7605:73:12",
																	"nodeType": "YulAssignment",
																	"src": "7605:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7650:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7650:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7661:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7661:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7646:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7646:3:12"
																				},
																				"nativeSrc": "7646:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7646:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7670:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7670:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7615:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "7615:30:12"
																		},
																		"nativeSrc": "7615:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7615:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7605:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7605:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_string_memory_ptr",
												"nativeSrc": "6896:799:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6960:9:12",
														"nodeType": "YulTypedName",
														"src": "6960:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6971:7:12",
														"nodeType": "YulTypedName",
														"src": "6971:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6983:6:12",
														"nodeType": "YulTypedName",
														"src": "6983:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6991:6:12",
														"nodeType": "YulTypedName",
														"src": "6991:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6999:6:12",
														"nodeType": "YulTypedName",
														"src": "6999:6:12",
														"type": ""
													}
												],
												"src": "6896:799:12"
											},
											{
												"body": {
													"nativeSrc": "7766:53:12",
													"nodeType": "YulBlock",
													"src": "7766:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7783:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7783:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7806:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7806:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7788:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "7788:17:12"
																		},
																		"nativeSrc": "7788:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7788:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7776:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7776:6:12"
																},
																"nativeSrc": "7776:37:12",
																"nodeType": "YulFunctionCall",
																"src": "7776:37:12"
															},
															"nativeSrc": "7776:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "7776:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7701:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7754:5:12",
														"nodeType": "YulTypedName",
														"src": "7754:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7761:3:12",
														"nodeType": "YulTypedName",
														"src": "7761:3:12",
														"type": ""
													}
												],
												"src": "7701:118:12"
											},
											{
												"body": {
													"nativeSrc": "7923:124:12",
													"nodeType": "YulBlock",
													"src": "7923:124:12",
													"statements": [
														{
															"nativeSrc": "7933:26:12",
															"nodeType": "YulAssignment",
															"src": "7933:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7945:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7945:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7956:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7956:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7941:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7941:3:12"
																},
																"nativeSrc": "7941:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7941:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7933:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7933:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8013:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8013:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8026:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8026:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8037:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8037:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8022:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8022:3:12"
																		},
																		"nativeSrc": "8022:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8022:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7969:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "7969:43:12"
																},
																"nativeSrc": "7969:71:12",
																"nodeType": "YulFunctionCall",
																"src": "7969:71:12"
															},
															"nativeSrc": "7969:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "7969:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7825:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7895:9:12",
														"nodeType": "YulTypedName",
														"src": "7895:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7907:6:12",
														"nodeType": "YulTypedName",
														"src": "7907:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7918:4:12",
														"nodeType": "YulTypedName",
														"src": "7918:4:12",
														"type": ""
													}
												],
												"src": "7825:222:12"
											},
											{
												"body": {
													"nativeSrc": "8153:519:12",
													"nodeType": "YulBlock",
													"src": "8153:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8199:83:12",
																"nodeType": "YulBlock",
																"src": "8199:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8201:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8201:77:12"
																			},
																			"nativeSrc": "8201:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8201:79:12"
																		},
																		"nativeSrc": "8201:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8201:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8174:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8174:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8183:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8183:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8170:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8170:3:12"
																		},
																		"nativeSrc": "8170:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8170:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8195:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8195:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8166:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8166:3:12"
																},
																"nativeSrc": "8166:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8166:32:12"
															},
															"nativeSrc": "8163:119:12",
															"nodeType": "YulIf",
															"src": "8163:119:12"
														},
														{
															"nativeSrc": "8292:117:12",
															"nodeType": "YulBlock",
															"src": "8292:117:12",
															"statements": [
																{
																	"nativeSrc": "8307:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8307:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8321:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8321:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8311:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8311:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8336:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8336:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8371:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8371:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8382:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8382:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8367:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8367:3:12"
																				},
																				"nativeSrc": "8367:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8367:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8391:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8391:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8346:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8346:20:12"
																		},
																		"nativeSrc": "8346:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8346:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8336:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8336:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8419:118:12",
															"nodeType": "YulBlock",
															"src": "8419:118:12",
															"statements": [
																{
																	"nativeSrc": "8434:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8434:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8448:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8448:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8438:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8438:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8464:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8464:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8499:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8499:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8510:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8510:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8495:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8495:3:12"
																				},
																				"nativeSrc": "8495:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8495:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8519:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8519:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8474:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8474:20:12"
																		},
																		"nativeSrc": "8474:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8474:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8464:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8464:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8547:118:12",
															"nodeType": "YulBlock",
															"src": "8547:118:12",
															"statements": [
																{
																	"nativeSrc": "8562:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8562:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8576:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8576:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8566:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8566:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8592:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8592:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8627:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8627:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8638:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8638:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8623:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8623:3:12"
																				},
																				"nativeSrc": "8623:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8623:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8647:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8647:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8602:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8602:20:12"
																		},
																		"nativeSrc": "8602:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8602:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8592:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8592:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "8053:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8107:9:12",
														"nodeType": "YulTypedName",
														"src": "8107:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8118:7:12",
														"nodeType": "YulTypedName",
														"src": "8118:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8130:6:12",
														"nodeType": "YulTypedName",
														"src": "8130:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8138:6:12",
														"nodeType": "YulTypedName",
														"src": "8138:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8146:6:12",
														"nodeType": "YulTypedName",
														"src": "8146:6:12",
														"type": ""
													}
												],
												"src": "8053:619:12"
											},
											{
												"body": {
													"nativeSrc": "8824:277:12",
													"nodeType": "YulBlock",
													"src": "8824:277:12",
													"statements": [
														{
															"nativeSrc": "8834:26:12",
															"nodeType": "YulAssignment",
															"src": "8834:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8846:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8846:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8857:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8857:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8842:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8842:3:12"
																},
																"nativeSrc": "8842:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8842:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8834:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8834:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8914:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8914:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8927:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8927:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8938:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8938:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8923:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8923:3:12"
																		},
																		"nativeSrc": "8923:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8923:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8870:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8870:43:12"
																},
																"nativeSrc": "8870:71:12",
																"nodeType": "YulFunctionCall",
																"src": "8870:71:12"
															},
															"nativeSrc": "8870:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "8870:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8962:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8962:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8973:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8973:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8958:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8958:3:12"
																		},
																		"nativeSrc": "8958:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8958:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8982:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "8982:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8988:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8988:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8978:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8978:3:12"
																		},
																		"nativeSrc": "8978:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8978:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8951:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8951:6:12"
																},
																"nativeSrc": "8951:48:12",
																"nodeType": "YulFunctionCall",
																"src": "8951:48:12"
															},
															"nativeSrc": "8951:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "8951:48:12"
														},
														{
															"nativeSrc": "9008:86:12",
															"nodeType": "YulAssignment",
															"src": "9008:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9080:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9080:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9089:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9089:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9016:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "9016:63:12"
																},
																"nativeSrc": "9016:78:12",
																"nodeType": "YulFunctionCall",
																"src": "9016:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9008:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9008:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8678:423:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8788:9:12",
														"nodeType": "YulTypedName",
														"src": "8788:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8800:6:12",
														"nodeType": "YulTypedName",
														"src": "8800:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8808:6:12",
														"nodeType": "YulTypedName",
														"src": "8808:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8819:4:12",
														"nodeType": "YulTypedName",
														"src": "8819:4:12",
														"type": ""
													}
												],
												"src": "8678:423:12"
											},
											{
												"body": {
													"nativeSrc": "9173:263:12",
													"nodeType": "YulBlock",
													"src": "9173:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9219:83:12",
																"nodeType": "YulBlock",
																"src": "9219:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9221:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "9221:77:12"
																			},
																			"nativeSrc": "9221:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9221:79:12"
																		},
																		"nativeSrc": "9221:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9221:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9194:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9194:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9203:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9203:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9190:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9190:3:12"
																		},
																		"nativeSrc": "9190:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9190:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9215:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9215:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9186:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9186:3:12"
																},
																"nativeSrc": "9186:32:12",
																"nodeType": "YulFunctionCall",
																"src": "9186:32:12"
															},
															"nativeSrc": "9183:119:12",
															"nodeType": "YulIf",
															"src": "9183:119:12"
														},
														{
															"nativeSrc": "9312:117:12",
															"nodeType": "YulBlock",
															"src": "9312:117:12",
															"statements": [
																{
																	"nativeSrc": "9327:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9327:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9341:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9341:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9331:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9331:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9356:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9356:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9391:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9391:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9402:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9402:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9387:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9387:3:12"
																				},
																				"nativeSrc": "9387:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9387:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9411:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9411:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9366:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9366:20:12"
																		},
																		"nativeSrc": "9366:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9366:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9356:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9356:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9107:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9143:9:12",
														"nodeType": "YulTypedName",
														"src": "9143:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9154:7:12",
														"nodeType": "YulTypedName",
														"src": "9154:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9166:6:12",
														"nodeType": "YulTypedName",
														"src": "9166:6:12",
														"type": ""
													}
												],
												"src": "9107:329:12"
											},
											{
												"body": {
													"nativeSrc": "9482:76:12",
													"nodeType": "YulBlock",
													"src": "9482:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9536:16:12",
																"nodeType": "YulBlock",
																"src": "9536:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9545:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9545:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9548:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9548:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9538:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9538:6:12"
																			},
																			"nativeSrc": "9538:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9538:12:12"
																		},
																		"nativeSrc": "9538:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9538:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9505:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9505:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9527:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "9527:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9512:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "9512:14:12"
																				},
																				"nativeSrc": "9512:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9512:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9502:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9502:2:12"
																		},
																		"nativeSrc": "9502:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9502:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9495:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9495:6:12"
																},
																"nativeSrc": "9495:40:12",
																"nodeType": "YulFunctionCall",
																"src": "9495:40:12"
															},
															"nativeSrc": "9492:60:12",
															"nodeType": "YulIf",
															"src": "9492:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9442:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9475:5:12",
														"nodeType": "YulTypedName",
														"src": "9475:5:12",
														"type": ""
													}
												],
												"src": "9442:116:12"
											},
											{
												"body": {
													"nativeSrc": "9613:84:12",
													"nodeType": "YulBlock",
													"src": "9613:84:12",
													"statements": [
														{
															"nativeSrc": "9623:29:12",
															"nodeType": "YulAssignment",
															"src": "9623:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9645:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9645:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9632:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "9632:12:12"
																},
																"nativeSrc": "9632:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9632:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9623:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9623:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9685:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9685:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9661:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "9661:23:12"
																},
																"nativeSrc": "9661:30:12",
																"nodeType": "YulFunctionCall",
																"src": "9661:30:12"
															},
															"nativeSrc": "9661:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "9661:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "9564:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9591:6:12",
														"nodeType": "YulTypedName",
														"src": "9591:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9599:3:12",
														"nodeType": "YulTypedName",
														"src": "9599:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9607:5:12",
														"nodeType": "YulTypedName",
														"src": "9607:5:12",
														"type": ""
													}
												],
												"src": "9564:133:12"
											},
											{
												"body": {
													"nativeSrc": "9783:388:12",
													"nodeType": "YulBlock",
													"src": "9783:388:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9829:83:12",
																"nodeType": "YulBlock",
																"src": "9829:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9831:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "9831:77:12"
																			},
																			"nativeSrc": "9831:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9831:79:12"
																		},
																		"nativeSrc": "9831:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9831:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9804:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9804:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9813:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9813:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9800:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9800:3:12"
																		},
																		"nativeSrc": "9800:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9800:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9825:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9825:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9796:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9796:3:12"
																},
																"nativeSrc": "9796:32:12",
																"nodeType": "YulFunctionCall",
																"src": "9796:32:12"
															},
															"nativeSrc": "9793:119:12",
															"nodeType": "YulIf",
															"src": "9793:119:12"
														},
														{
															"nativeSrc": "9922:117:12",
															"nodeType": "YulBlock",
															"src": "9922:117:12",
															"statements": [
																{
																	"nativeSrc": "9937:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9937:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9951:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9951:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9941:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9941:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9966:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9966:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10001:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10001:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10012:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10012:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9997:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9997:3:12"
																				},
																				"nativeSrc": "9997:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9997:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10021:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10021:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9976:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9976:20:12"
																		},
																		"nativeSrc": "9976:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9976:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9966:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9966:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10049:115:12",
															"nodeType": "YulBlock",
															"src": "10049:115:12",
															"statements": [
																{
																	"nativeSrc": "10064:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10064:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10078:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10078:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10068:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10068:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10094:60:12",
																	"nodeType": "YulAssignment",
																	"src": "10094:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10126:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10126:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10137:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10137:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10122:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10122:3:12"
																				},
																				"nativeSrc": "10122:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10122:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10146:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10146:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "10104:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "10104:17:12"
																		},
																		"nativeSrc": "10104:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10104:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10094:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10094:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "9703:468:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9745:9:12",
														"nodeType": "YulTypedName",
														"src": "9745:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9756:7:12",
														"nodeType": "YulTypedName",
														"src": "9756:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9768:6:12",
														"nodeType": "YulTypedName",
														"src": "9768:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9776:6:12",
														"nodeType": "YulTypedName",
														"src": "9776:6:12",
														"type": ""
													}
												],
												"src": "9703:468:12"
											},
											{
												"body": {
													"nativeSrc": "10243:241:12",
													"nodeType": "YulBlock",
													"src": "10243:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10348:22:12",
																"nodeType": "YulBlock",
																"src": "10348:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10350:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "10350:16:12"
																			},
																			"nativeSrc": "10350:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10350:18:12"
																		},
																		"nativeSrc": "10350:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10350:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10320:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10320:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10328:18:12",
																		"nodeType": "YulLiteral",
																		"src": "10328:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10317:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10317:2:12"
																},
																"nativeSrc": "10317:30:12",
																"nodeType": "YulFunctionCall",
																"src": "10317:30:12"
															},
															"nativeSrc": "10314:56:12",
															"nodeType": "YulIf",
															"src": "10314:56:12"
														},
														{
															"nativeSrc": "10380:37:12",
															"nodeType": "YulAssignment",
															"src": "10380:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10410:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10410:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10388:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "10388:21:12"
																},
																"nativeSrc": "10388:29:12",
																"nodeType": "YulFunctionCall",
																"src": "10388:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10380:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10380:4:12"
																}
															]
														},
														{
															"nativeSrc": "10454:23:12",
															"nodeType": "YulAssignment",
															"src": "10454:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10466:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10466:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10472:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10472:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10462:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10462:3:12"
																},
																"nativeSrc": "10462:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10462:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10454:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10454:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "10177:307:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10227:6:12",
														"nodeType": "YulTypedName",
														"src": "10227:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10238:4:12",
														"nodeType": "YulTypedName",
														"src": "10238:4:12",
														"type": ""
													}
												],
												"src": "10177:307:12"
											},
											{
												"body": {
													"nativeSrc": "10573:340:12",
													"nodeType": "YulBlock",
													"src": "10573:340:12",
													"statements": [
														{
															"nativeSrc": "10583:74:12",
															"nodeType": "YulAssignment",
															"src": "10583:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10649:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10649:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "10608:40:12",
																			"nodeType": "YulIdentifier",
																			"src": "10608:40:12"
																		},
																		"nativeSrc": "10608:48:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10608:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10592:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "10592:15:12"
																},
																"nativeSrc": "10592:65:12",
																"nodeType": "YulFunctionCall",
																"src": "10592:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10583:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10583:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10673:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10673:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10680:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10680:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10666:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10666:6:12"
																},
																"nativeSrc": "10666:21:12",
																"nodeType": "YulFunctionCall",
																"src": "10666:21:12"
															},
															"nativeSrc": "10666:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "10666:21:12"
														},
														{
															"nativeSrc": "10696:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10696:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10711:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10711:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10718:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10718:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10707:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10707:3:12"
																},
																"nativeSrc": "10707:16:12",
																"nodeType": "YulFunctionCall",
																"src": "10707:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10700:3:12",
																	"nodeType": "YulTypedName",
																	"src": "10700:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10761:83:12",
																"nodeType": "YulBlock",
																"src": "10761:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10763:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "10763:77:12"
																			},
																			"nativeSrc": "10763:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10763:79:12"
																		},
																		"nativeSrc": "10763:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10763:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10742:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10742:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10747:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10747:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10738:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10738:3:12"
																		},
																		"nativeSrc": "10738:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10738:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10756:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10756:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10735:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10735:2:12"
																},
																"nativeSrc": "10735:25:12",
																"nodeType": "YulFunctionCall",
																"src": "10735:25:12"
															},
															"nativeSrc": "10732:112:12",
															"nodeType": "YulIf",
															"src": "10732:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10890:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10890:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10895:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10895:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10900:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10900:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10853:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "10853:36:12"
																},
																"nativeSrc": "10853:54:12",
																"nodeType": "YulFunctionCall",
																"src": "10853:54:12"
															},
															"nativeSrc": "10853:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "10853:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "10490:423:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10546:3:12",
														"nodeType": "YulTypedName",
														"src": "10546:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10551:6:12",
														"nodeType": "YulTypedName",
														"src": "10551:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10559:3:12",
														"nodeType": "YulTypedName",
														"src": "10559:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10567:5:12",
														"nodeType": "YulTypedName",
														"src": "10567:5:12",
														"type": ""
													}
												],
												"src": "10490:423:12"
											},
											{
												"body": {
													"nativeSrc": "10993:277:12",
													"nodeType": "YulBlock",
													"src": "10993:277:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11042:83:12",
																"nodeType": "YulBlock",
																"src": "11042:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11044:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "11044:77:12"
																			},
																			"nativeSrc": "11044:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11044:79:12"
																		},
																		"nativeSrc": "11044:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11044:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11021:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11021:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11029:4:12",
																						"nodeType": "YulLiteral",
																						"src": "11029:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11017:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11017:3:12"
																				},
																				"nativeSrc": "11017:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11017:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11036:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "11036:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11013:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11013:3:12"
																		},
																		"nativeSrc": "11013:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11013:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11006:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11006:6:12"
																},
																"nativeSrc": "11006:35:12",
																"nodeType": "YulFunctionCall",
																"src": "11006:35:12"
															},
															"nativeSrc": "11003:122:12",
															"nodeType": "YulIf",
															"src": "11003:122:12"
														},
														{
															"nativeSrc": "11134:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11134:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11161:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11161:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11148:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "11148:12:12"
																},
																"nativeSrc": "11148:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11148:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11138:6:12",
																	"nodeType": "YulTypedName",
																	"src": "11138:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11177:87:12",
															"nodeType": "YulAssignment",
															"src": "11177:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11237:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11237:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11245:4:12",
																				"nodeType": "YulLiteral",
																				"src": "11245:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11233:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11233:3:12"
																		},
																		"nativeSrc": "11233:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11233:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11252:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11252:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11260:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11260:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "11186:46:12",
																	"nodeType": "YulIdentifier",
																	"src": "11186:46:12"
																},
																"nativeSrc": "11186:78:12",
																"nodeType": "YulFunctionCall",
																"src": "11186:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11177:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11177:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "10932:338:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10971:6:12",
														"nodeType": "YulTypedName",
														"src": "10971:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10979:3:12",
														"nodeType": "YulTypedName",
														"src": "10979:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10987:5:12",
														"nodeType": "YulTypedName",
														"src": "10987:5:12",
														"type": ""
													}
												],
												"src": "10932:338:12"
											},
											{
												"body": {
													"nativeSrc": "11402:817:12",
													"nodeType": "YulBlock",
													"src": "11402:817:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11449:83:12",
																"nodeType": "YulBlock",
																"src": "11449:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11451:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "11451:77:12"
																			},
																			"nativeSrc": "11451:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11451:79:12"
																		},
																		"nativeSrc": "11451:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11451:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11423:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11423:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11432:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11432:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11419:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11419:3:12"
																		},
																		"nativeSrc": "11419:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11419:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11444:3:12",
																		"nodeType": "YulLiteral",
																		"src": "11444:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11415:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11415:3:12"
																},
																"nativeSrc": "11415:33:12",
																"nodeType": "YulFunctionCall",
																"src": "11415:33:12"
															},
															"nativeSrc": "11412:120:12",
															"nodeType": "YulIf",
															"src": "11412:120:12"
														},
														{
															"nativeSrc": "11542:117:12",
															"nodeType": "YulBlock",
															"src": "11542:117:12",
															"statements": [
																{
																	"nativeSrc": "11557:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11557:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11571:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11571:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11561:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11561:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11586:63:12",
																	"nodeType": "YulAssignment",
																	"src": "11586:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11621:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11621:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11632:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11632:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11617:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11617:3:12"
																				},
																				"nativeSrc": "11617:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11617:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11641:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11641:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11596:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "11596:20:12"
																		},
																		"nativeSrc": "11596:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11596:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11586:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11586:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11669:118:12",
															"nodeType": "YulBlock",
															"src": "11669:118:12",
															"statements": [
																{
																	"nativeSrc": "11684:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11684:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11698:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11698:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11688:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11688:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11714:63:12",
																	"nodeType": "YulAssignment",
																	"src": "11714:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11749:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11749:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11760:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11760:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11745:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11745:3:12"
																				},
																				"nativeSrc": "11745:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11745:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11769:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11769:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11724:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "11724:20:12"
																		},
																		"nativeSrc": "11724:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11724:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11714:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11714:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11797:118:12",
															"nodeType": "YulBlock",
															"src": "11797:118:12",
															"statements": [
																{
																	"nativeSrc": "11812:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11812:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11826:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11826:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11816:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11816:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11842:63:12",
																	"nodeType": "YulAssignment",
																	"src": "11842:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11877:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11877:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11888:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11888:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11873:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11873:3:12"
																				},
																				"nativeSrc": "11873:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11873:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11897:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11897:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11852:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "11852:20:12"
																		},
																		"nativeSrc": "11852:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11852:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11842:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11842:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11925:287:12",
															"nodeType": "YulBlock",
															"src": "11925:287:12",
															"statements": [
																{
																	"nativeSrc": "11940:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11940:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11971:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11971:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11982:2:12",
																						"nodeType": "YulLiteral",
																						"src": "11982:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11967:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11967:3:12"
																				},
																				"nativeSrc": "11967:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11967:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11954:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "11954:12:12"
																		},
																		"nativeSrc": "11954:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11954:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11944:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11944:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12033:83:12",
																		"nodeType": "YulBlock",
																		"src": "12033:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12035:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "12035:77:12"
																					},
																					"nativeSrc": "12035:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "12035:79:12"
																				},
																				"nativeSrc": "12035:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "12035:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12005:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12005:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12013:18:12",
																				"nodeType": "YulLiteral",
																				"src": "12013:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12002:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "12002:2:12"
																		},
																		"nativeSrc": "12002:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12002:30:12"
																	},
																	"nativeSrc": "11999:117:12",
																	"nodeType": "YulIf",
																	"src": "11999:117:12"
																},
																{
																	"nativeSrc": "12130:72:12",
																	"nodeType": "YulAssignment",
																	"src": "12130:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12174:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "12174:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12185:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "12185:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12170:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12170:3:12"
																				},
																				"nativeSrc": "12170:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12170:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12194:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12194:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "12140:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "12140:29:12"
																		},
																		"nativeSrc": "12140:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12140:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12130:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "12130:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "11276:943:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11348:9:12",
														"nodeType": "YulTypedName",
														"src": "11348:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11359:7:12",
														"nodeType": "YulTypedName",
														"src": "11359:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11371:6:12",
														"nodeType": "YulTypedName",
														"src": "11371:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11379:6:12",
														"nodeType": "YulTypedName",
														"src": "11379:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11387:6:12",
														"nodeType": "YulTypedName",
														"src": "11387:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11395:6:12",
														"nodeType": "YulTypedName",
														"src": "11395:6:12",
														"type": ""
													}
												],
												"src": "11276:943:12"
											},
											{
												"body": {
													"nativeSrc": "12308:391:12",
													"nodeType": "YulBlock",
													"src": "12308:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "12354:83:12",
																"nodeType": "YulBlock",
																"src": "12354:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12356:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "12356:77:12"
																			},
																			"nativeSrc": "12356:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12356:79:12"
																		},
																		"nativeSrc": "12356:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12356:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12329:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12329:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12338:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12338:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12325:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12325:3:12"
																		},
																		"nativeSrc": "12325:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12325:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12350:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12350:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12321:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12321:3:12"
																},
																"nativeSrc": "12321:32:12",
																"nodeType": "YulFunctionCall",
																"src": "12321:32:12"
															},
															"nativeSrc": "12318:119:12",
															"nodeType": "YulIf",
															"src": "12318:119:12"
														},
														{
															"nativeSrc": "12447:117:12",
															"nodeType": "YulBlock",
															"src": "12447:117:12",
															"statements": [
																{
																	"nativeSrc": "12462:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12462:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12476:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12476:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12466:6:12",
																			"nodeType": "YulTypedName",
																			"src": "12466:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12491:63:12",
																	"nodeType": "YulAssignment",
																	"src": "12491:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12526:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "12526:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12537:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "12537:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12522:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12522:3:12"
																				},
																				"nativeSrc": "12522:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12522:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12546:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12546:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12501:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "12501:20:12"
																		},
																		"nativeSrc": "12501:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12501:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12491:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "12491:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12574:118:12",
															"nodeType": "YulBlock",
															"src": "12574:118:12",
															"statements": [
																{
																	"nativeSrc": "12589:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12589:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12603:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12603:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12593:6:12",
																			"nodeType": "YulTypedName",
																			"src": "12593:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12619:63:12",
																	"nodeType": "YulAssignment",
																	"src": "12619:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12654:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "12654:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12665:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "12665:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12650:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12650:3:12"
																				},
																				"nativeSrc": "12650:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12650:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12674:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12674:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12629:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "12629:20:12"
																		},
																		"nativeSrc": "12629:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12629:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12619:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "12619:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12225:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12270:9:12",
														"nodeType": "YulTypedName",
														"src": "12270:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12281:7:12",
														"nodeType": "YulTypedName",
														"src": "12281:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12293:6:12",
														"nodeType": "YulTypedName",
														"src": "12293:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12301:6:12",
														"nodeType": "YulTypedName",
														"src": "12301:6:12",
														"type": ""
													}
												],
												"src": "12225:474:12"
											},
											{
												"body": {
													"nativeSrc": "12733:152:12",
													"nodeType": "YulBlock",
													"src": "12733:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12750:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12750:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12753:77:12",
																		"nodeType": "YulLiteral",
																		"src": "12753:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12743:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12743:6:12"
																},
																"nativeSrc": "12743:88:12",
																"nodeType": "YulFunctionCall",
																"src": "12743:88:12"
															},
															"nativeSrc": "12743:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "12743:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12847:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12847:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12850:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12850:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12840:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12840:6:12"
																},
																"nativeSrc": "12840:15:12",
																"nodeType": "YulFunctionCall",
																"src": "12840:15:12"
															},
															"nativeSrc": "12840:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "12840:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12871:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12871:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12874:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12874:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12864:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12864:6:12"
																},
																"nativeSrc": "12864:15:12",
																"nodeType": "YulFunctionCall",
																"src": "12864:15:12"
															},
															"nativeSrc": "12864:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "12864:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12705:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "12705:180:12"
											},
											{
												"body": {
													"nativeSrc": "12942:269:12",
													"nodeType": "YulBlock",
													"src": "12942:269:12",
													"statements": [
														{
															"nativeSrc": "12952:22:12",
															"nodeType": "YulAssignment",
															"src": "12952:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12966:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12966:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12972:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12972:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12962:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12962:3:12"
																},
																"nativeSrc": "12962:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12962:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12952:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12952:6:12"
																}
															]
														},
														{
															"nativeSrc": "12983:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12983:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13013:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13013:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13019:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13019:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13009:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13009:3:12"
																},
																"nativeSrc": "13009:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13009:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12987:18:12",
																	"nodeType": "YulTypedName",
																	"src": "12987:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13060:51:12",
																"nodeType": "YulBlock",
																"src": "13060:51:12",
																"statements": [
																	{
																		"nativeSrc": "13074:27:12",
																		"nodeType": "YulAssignment",
																		"src": "13074:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13088:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "13088:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13096:4:12",
																					"nodeType": "YulLiteral",
																					"src": "13096:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13084:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "13084:3:12"
																			},
																			"nativeSrc": "13084:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13084:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13074:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13074:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13040:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "13040:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13033:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13033:6:12"
																},
																"nativeSrc": "13033:26:12",
																"nodeType": "YulFunctionCall",
																"src": "13033:26:12"
															},
															"nativeSrc": "13030:81:12",
															"nodeType": "YulIf",
															"src": "13030:81:12"
														},
														{
															"body": {
																"nativeSrc": "13163:42:12",
																"nodeType": "YulBlock",
																"src": "13163:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13177:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "13177:16:12"
																			},
																			"nativeSrc": "13177:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13177:18:12"
																		},
																		"nativeSrc": "13177:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13177:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13127:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "13127:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13150:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13150:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13158:2:12",
																				"nodeType": "YulLiteral",
																				"src": "13158:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13147:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "13147:2:12"
																		},
																		"nativeSrc": "13147:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13147:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13124:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "13124:2:12"
																},
																"nativeSrc": "13124:38:12",
																"nodeType": "YulFunctionCall",
																"src": "13124:38:12"
															},
															"nativeSrc": "13121:84:12",
															"nodeType": "YulIf",
															"src": "13121:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12891:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12926:4:12",
														"nodeType": "YulTypedName",
														"src": "12926:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12935:6:12",
														"nodeType": "YulTypedName",
														"src": "12935:6:12",
														"type": ""
													}
												],
												"src": "12891:320:12"
											},
											{
												"body": {
													"nativeSrc": "13245:152:12",
													"nodeType": "YulBlock",
													"src": "13245:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13262:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13262:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13265:77:12",
																		"nodeType": "YulLiteral",
																		"src": "13265:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13255:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13255:6:12"
																},
																"nativeSrc": "13255:88:12",
																"nodeType": "YulFunctionCall",
																"src": "13255:88:12"
															},
															"nativeSrc": "13255:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "13255:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13359:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13359:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13362:4:12",
																		"nodeType": "YulLiteral",
																		"src": "13362:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13352:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13352:6:12"
																},
																"nativeSrc": "13352:15:12",
																"nodeType": "YulFunctionCall",
																"src": "13352:15:12"
															},
															"nativeSrc": "13352:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "13352:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13383:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13383:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13386:4:12",
																		"nodeType": "YulLiteral",
																		"src": "13386:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13376:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13376:6:12"
																},
																"nativeSrc": "13376:15:12",
																"nodeType": "YulFunctionCall",
																"src": "13376:15:12"
															},
															"nativeSrc": "13376:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "13376:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13217:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "13217:180:12"
											},
											{
												"body": {
													"nativeSrc": "13446:190:12",
													"nodeType": "YulBlock",
													"src": "13446:190:12",
													"statements": [
														{
															"nativeSrc": "13456:33:12",
															"nodeType": "YulAssignment",
															"src": "13456:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13483:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13483:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13465:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "13465:17:12"
																},
																"nativeSrc": "13465:24:12",
																"nodeType": "YulFunctionCall",
																"src": "13465:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13456:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13456:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13579:22:12",
																"nodeType": "YulBlock",
																"src": "13579:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13581:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "13581:16:12"
																			},
																			"nativeSrc": "13581:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13581:18:12"
																		},
																		"nativeSrc": "13581:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13581:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13504:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13504:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13511:66:12",
																		"nodeType": "YulLiteral",
																		"src": "13511:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13501:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "13501:2:12"
																},
																"nativeSrc": "13501:77:12",
																"nodeType": "YulFunctionCall",
																"src": "13501:77:12"
															},
															"nativeSrc": "13498:103:12",
															"nodeType": "YulIf",
															"src": "13498:103:12"
														},
														{
															"nativeSrc": "13610:20:12",
															"nodeType": "YulAssignment",
															"src": "13610:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13621:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13621:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13628:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13628:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13617:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13617:3:12"
																},
																"nativeSrc": "13617:13:12",
																"nodeType": "YulFunctionCall",
																"src": "13617:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13610:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13610:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "13403:233:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13432:5:12",
														"nodeType": "YulTypedName",
														"src": "13432:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13442:3:12",
														"nodeType": "YulTypedName",
														"src": "13442:3:12",
														"type": ""
													}
												],
												"src": "13403:233:12"
											},
											{
												"body": {
													"nativeSrc": "13696:87:12",
													"nodeType": "YulBlock",
													"src": "13696:87:12",
													"statements": [
														{
															"nativeSrc": "13706:11:12",
															"nodeType": "YulAssignment",
															"src": "13706:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "13714:3:12",
																"nodeType": "YulIdentifier",
																"src": "13714:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13706:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13706:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13734:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13734:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "13737:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13737:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13727:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13727:6:12"
																},
																"nativeSrc": "13727:14:12",
																"nodeType": "YulFunctionCall",
																"src": "13727:14:12"
															},
															"nativeSrc": "13727:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "13727:14:12"
														},
														{
															"nativeSrc": "13750:26:12",
															"nodeType": "YulAssignment",
															"src": "13750:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13768:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13768:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13771:4:12",
																		"nodeType": "YulLiteral",
																		"src": "13771:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "13758:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "13758:9:12"
																},
																"nativeSrc": "13758:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13758:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13750:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13750:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "13642:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13683:3:12",
														"nodeType": "YulTypedName",
														"src": "13683:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "13691:4:12",
														"nodeType": "YulTypedName",
														"src": "13691:4:12",
														"type": ""
													}
												],
												"src": "13642:141:12"
											},
											{
												"body": {
													"nativeSrc": "13833:49:12",
													"nodeType": "YulBlock",
													"src": "13833:49:12",
													"statements": [
														{
															"nativeSrc": "13843:33:12",
															"nodeType": "YulAssignment",
															"src": "13843:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13861:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "13861:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13868:2:12",
																				"nodeType": "YulLiteral",
																				"src": "13868:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13857:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13857:3:12"
																		},
																		"nativeSrc": "13857:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13857:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13873:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13873:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13853:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13853:3:12"
																},
																"nativeSrc": "13853:23:12",
																"nodeType": "YulFunctionCall",
																"src": "13853:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "13843:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13843:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "13789:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13816:5:12",
														"nodeType": "YulTypedName",
														"src": "13816:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13826:6:12",
														"nodeType": "YulTypedName",
														"src": "13826:6:12",
														"type": ""
													}
												],
												"src": "13789:93:12"
											},
											{
												"body": {
													"nativeSrc": "13941:54:12",
													"nodeType": "YulBlock",
													"src": "13941:54:12",
													"statements": [
														{
															"nativeSrc": "13951:37:12",
															"nodeType": "YulAssignment",
															"src": "13951:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "13976:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13976:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13982:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13982:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "13972:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13972:3:12"
																},
																"nativeSrc": "13972:16:12",
																"nodeType": "YulFunctionCall",
																"src": "13972:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13951:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "13951:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "13888:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "13916:4:12",
														"nodeType": "YulTypedName",
														"src": "13916:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "13922:5:12",
														"nodeType": "YulTypedName",
														"src": "13922:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13932:8:12",
														"nodeType": "YulTypedName",
														"src": "13932:8:12",
														"type": ""
													}
												],
												"src": "13888:107:12"
											},
											{
												"body": {
													"nativeSrc": "14077:317:12",
													"nodeType": "YulBlock",
													"src": "14077:317:12",
													"statements": [
														{
															"nativeSrc": "14087:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "14087:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "14108:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "14108:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14120:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14120:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14104:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14104:3:12"
																},
																"nativeSrc": "14104:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14104:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "14091:9:12",
																	"nodeType": "YulTypedName",
																	"src": "14091:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14131:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "14131:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14162:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14162:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14173:66:12",
																		"nodeType": "YulLiteral",
																		"src": "14173:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14143:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "14143:18:12"
																},
																"nativeSrc": "14143:97:12",
																"nodeType": "YulFunctionCall",
																"src": "14143:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14135:4:12",
																	"nodeType": "YulTypedName",
																	"src": "14135:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14249:51:12",
															"nodeType": "YulAssignment",
															"src": "14249:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14280:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14280:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "14291:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "14291:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14261:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "14261:18:12"
																},
																"nativeSrc": "14261:39:12",
																"nodeType": "YulFunctionCall",
																"src": "14261:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "14249:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "14249:8:12"
																}
															]
														},
														{
															"nativeSrc": "14309:30:12",
															"nodeType": "YulAssignment",
															"src": "14309:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14322:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "14322:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "14333:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14333:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14329:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14329:3:12"
																		},
																		"nativeSrc": "14329:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14329:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14318:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14318:3:12"
																},
																"nativeSrc": "14318:21:12",
																"nodeType": "YulFunctionCall",
																"src": "14318:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14309:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "14309:5:12"
																}
															]
														},
														{
															"nativeSrc": "14348:40:12",
															"nodeType": "YulAssignment",
															"src": "14348:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14361:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "14361:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "14372:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "14372:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "14382:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14382:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14368:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14368:3:12"
																		},
																		"nativeSrc": "14368:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14368:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14358:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "14358:2:12"
																},
																"nativeSrc": "14358:30:12",
																"nodeType": "YulFunctionCall",
																"src": "14358:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14348:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14348:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "14001:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14038:5:12",
														"nodeType": "YulTypedName",
														"src": "14038:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "14045:10:12",
														"nodeType": "YulTypedName",
														"src": "14045:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "14057:8:12",
														"nodeType": "YulTypedName",
														"src": "14057:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14070:6:12",
														"nodeType": "YulTypedName",
														"src": "14070:6:12",
														"type": ""
													}
												],
												"src": "14001:393:12"
											},
											{
												"body": {
													"nativeSrc": "14432:28:12",
													"nodeType": "YulBlock",
													"src": "14432:28:12",
													"statements": [
														{
															"nativeSrc": "14442:12:12",
															"nodeType": "YulAssignment",
															"src": "14442:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "14449:5:12",
																"nodeType": "YulIdentifier",
																"src": "14449:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14442:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14442:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "14400:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14418:5:12",
														"nodeType": "YulTypedName",
														"src": "14418:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14428:3:12",
														"nodeType": "YulTypedName",
														"src": "14428:3:12",
														"type": ""
													}
												],
												"src": "14400:60:12"
											},
											{
												"body": {
													"nativeSrc": "14526:82:12",
													"nodeType": "YulBlock",
													"src": "14526:82:12",
													"statements": [
														{
															"nativeSrc": "14536:66:12",
															"nodeType": "YulAssignment",
															"src": "14536:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14594:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "14594:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "14576:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "14576:17:12"
																				},
																				"nativeSrc": "14576:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14576:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "14567:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "14567:8:12"
																		},
																		"nativeSrc": "14567:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14567:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14549:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "14549:17:12"
																},
																"nativeSrc": "14549:53:12",
																"nodeType": "YulFunctionCall",
																"src": "14549:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "14536:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "14536:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "14466:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14506:5:12",
														"nodeType": "YulTypedName",
														"src": "14506:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "14516:9:12",
														"nodeType": "YulTypedName",
														"src": "14516:9:12",
														"type": ""
													}
												],
												"src": "14466:142:12"
											},
											{
												"body": {
													"nativeSrc": "14661:28:12",
													"nodeType": "YulBlock",
													"src": "14661:28:12",
													"statements": [
														{
															"nativeSrc": "14671:12:12",
															"nodeType": "YulAssignment",
															"src": "14671:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "14678:5:12",
																"nodeType": "YulIdentifier",
																"src": "14678:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14671:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14671:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "14614:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14647:5:12",
														"nodeType": "YulTypedName",
														"src": "14647:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14657:3:12",
														"nodeType": "YulTypedName",
														"src": "14657:3:12",
														"type": ""
													}
												],
												"src": "14614:75:12"
											},
											{
												"body": {
													"nativeSrc": "14771:193:12",
													"nodeType": "YulBlock",
													"src": "14771:193:12",
													"statements": [
														{
															"nativeSrc": "14781:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "14781:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "14836:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "14836:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "14805:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "14805:30:12"
																},
																"nativeSrc": "14805:39:12",
																"nodeType": "YulFunctionCall",
																"src": "14805:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "14785:16:12",
																	"nodeType": "YulTypedName",
																	"src": "14785:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "14860:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14860:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "14900:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "14900:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "14894:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "14894:5:12"
																				},
																				"nativeSrc": "14894:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14894:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "14907:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14907:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "14939:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "14939:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "14915:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "14915:23:12"
																				},
																				"nativeSrc": "14915:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14915:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "14866:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "14866:27:12"
																		},
																		"nativeSrc": "14866:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14866:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "14853:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14853:6:12"
																},
																"nativeSrc": "14853:105:12",
																"nodeType": "YulFunctionCall",
																"src": "14853:105:12"
															},
															"nativeSrc": "14853:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "14853:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "14695:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14748:4:12",
														"nodeType": "YulTypedName",
														"src": "14748:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "14754:6:12",
														"nodeType": "YulTypedName",
														"src": "14754:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "14762:7:12",
														"nodeType": "YulTypedName",
														"src": "14762:7:12",
														"type": ""
													}
												],
												"src": "14695:269:12"
											},
											{
												"body": {
													"nativeSrc": "15019:24:12",
													"nodeType": "YulBlock",
													"src": "15019:24:12",
													"statements": [
														{
															"nativeSrc": "15029:8:12",
															"nodeType": "YulAssignment",
															"src": "15029:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "15036:1:12",
																"nodeType": "YulLiteral",
																"src": "15036:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15029:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15029:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "14970:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15015:3:12",
														"nodeType": "YulTypedName",
														"src": "15015:3:12",
														"type": ""
													}
												],
												"src": "14970:73:12"
											},
											{
												"body": {
													"nativeSrc": "15102:136:12",
													"nodeType": "YulBlock",
													"src": "15102:136:12",
													"statements": [
														{
															"nativeSrc": "15112:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "15112:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "15126:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "15126:30:12"
																},
																"nativeSrc": "15126:32:12",
																"nodeType": "YulFunctionCall",
																"src": "15126:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "15116:6:12",
																	"nodeType": "YulTypedName",
																	"src": "15116:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15211:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15211:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "15217:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15217:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "15225:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15225:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "15167:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "15167:43:12"
																},
																"nativeSrc": "15167:65:12",
																"nodeType": "YulFunctionCall",
																"src": "15167:65:12"
															},
															"nativeSrc": "15167:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "15167:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "15049:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15088:4:12",
														"nodeType": "YulTypedName",
														"src": "15088:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15094:6:12",
														"nodeType": "YulTypedName",
														"src": "15094:6:12",
														"type": ""
													}
												],
												"src": "15049:189:12"
											},
											{
												"body": {
													"nativeSrc": "15294:136:12",
													"nodeType": "YulBlock",
													"src": "15294:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "15361:63:12",
																"nodeType": "YulBlock",
																"src": "15361:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15405:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "15405:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15412:1:12",
																					"nodeType": "YulLiteral",
																					"src": "15412:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "15375:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "15375:29:12"
																			},
																			"nativeSrc": "15375:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15375:39:12"
																		},
																		"nativeSrc": "15375:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15375:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "15314:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15314:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15321:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15321:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "15311:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "15311:2:12"
																},
																"nativeSrc": "15311:14:12",
																"nodeType": "YulFunctionCall",
																"src": "15311:14:12"
															},
															"nativeSrc": "15304:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15326:26:12",
																"nodeType": "YulBlock",
																"src": "15326:26:12",
																"statements": [
																	{
																		"nativeSrc": "15328:22:12",
																		"nodeType": "YulAssignment",
																		"src": "15328:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15341:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "15341:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15348:1:12",
																					"nodeType": "YulLiteral",
																					"src": "15348:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15337:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "15337:3:12"
																			},
																			"nativeSrc": "15337:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15337:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "15328:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "15328:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "15308:2:12",
																"nodeType": "YulBlock",
																"src": "15308:2:12",
																"statements": []
															},
															"src": "15304:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "15244:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "15282:5:12",
														"nodeType": "YulTypedName",
														"src": "15282:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15289:3:12",
														"nodeType": "YulTypedName",
														"src": "15289:3:12",
														"type": ""
													}
												],
												"src": "15244:186:12"
											},
											{
												"body": {
													"nativeSrc": "15515:464:12",
													"nodeType": "YulBlock",
													"src": "15515:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "15541:431:12",
																"nodeType": "YulBlock",
																"src": "15541:431:12",
																"statements": [
																	{
																		"nativeSrc": "15555:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15555:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "15603:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "15603:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "15571:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "15571:31:12"
																			},
																			"nativeSrc": "15571:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15571:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "15559:8:12",
																				"nodeType": "YulTypedName",
																				"src": "15559:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15622:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15622:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "15645:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "15645:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "15673:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "15673:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "15655:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "15655:17:12"
																					},
																					"nativeSrc": "15655:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "15655:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15641:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "15641:3:12"
																			},
																			"nativeSrc": "15641:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15641:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "15626:11:12",
																				"nodeType": "YulTypedName",
																				"src": "15626:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15842:27:12",
																			"nodeType": "YulBlock",
																			"src": "15842:27:12",
																			"statements": [
																				{
																					"nativeSrc": "15844:23:12",
																					"nodeType": "YulAssignment",
																					"src": "15844:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "15859:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "15859:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "15844:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "15844:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "15826:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "15826:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15838:2:12",
																					"nodeType": "YulLiteral",
																					"src": "15838:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "15823:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "15823:2:12"
																			},
																			"nativeSrc": "15823:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15823:18:12"
																		},
																		"nativeSrc": "15820:49:12",
																		"nodeType": "YulIf",
																		"src": "15820:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "15911:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "15911:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "15928:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "15928:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "15956:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "15956:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "15938:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "15938:17:12"
																							},
																							"nativeSrc": "15938:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "15938:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "15924:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "15924:3:12"
																					},
																					"nativeSrc": "15924:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "15924:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "15882:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "15882:28:12"
																			},
																			"nativeSrc": "15882:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15882:80:12"
																		},
																		"nativeSrc": "15882:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15882:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "15532:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15532:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15537:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15537:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15529:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "15529:2:12"
																},
																"nativeSrc": "15529:11:12",
																"nodeType": "YulFunctionCall",
																"src": "15529:11:12"
															},
															"nativeSrc": "15526:446:12",
															"nodeType": "YulIf",
															"src": "15526:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "15436:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "15491:5:12",
														"nodeType": "YulTypedName",
														"src": "15491:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15498:3:12",
														"nodeType": "YulTypedName",
														"src": "15498:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "15503:10:12",
														"nodeType": "YulTypedName",
														"src": "15503:10:12",
														"type": ""
													}
												],
												"src": "15436:543:12"
											},
											{
												"body": {
													"nativeSrc": "16048:54:12",
													"nodeType": "YulBlock",
													"src": "16048:54:12",
													"statements": [
														{
															"nativeSrc": "16058:37:12",
															"nodeType": "YulAssignment",
															"src": "16058:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16083:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16083:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16089:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "16089:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "16079:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16079:3:12"
																},
																"nativeSrc": "16079:16:12",
																"nodeType": "YulFunctionCall",
																"src": "16079:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16058:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "16058:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "15985:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16023:4:12",
														"nodeType": "YulTypedName",
														"src": "16023:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16029:5:12",
														"nodeType": "YulTypedName",
														"src": "16029:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16039:8:12",
														"nodeType": "YulTypedName",
														"src": "16039:8:12",
														"type": ""
													}
												],
												"src": "15985:117:12"
											},
											{
												"body": {
													"nativeSrc": "16159:118:12",
													"nodeType": "YulBlock",
													"src": "16159:118:12",
													"statements": [
														{
															"nativeSrc": "16169:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "16169:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16218:1:12",
																						"nodeType": "YulLiteral",
																						"src": "16218:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "16221:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "16221:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "16214:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16214:3:12"
																				},
																				"nativeSrc": "16214:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16214:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16233:1:12",
																						"nodeType": "YulLiteral",
																						"src": "16233:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16229:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16229:3:12"
																				},
																				"nativeSrc": "16229:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16229:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "16185:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "16185:28:12"
																		},
																		"nativeSrc": "16185:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16185:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "16181:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16181:3:12"
																},
																"nativeSrc": "16181:56:12",
																"nodeType": "YulFunctionCall",
																"src": "16181:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16173:4:12",
																	"nodeType": "YulTypedName",
																	"src": "16173:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16246:25:12",
															"nodeType": "YulAssignment",
															"src": "16246:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16260:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16260:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "16266:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16266:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16256:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16256:3:12"
																},
																"nativeSrc": "16256:15:12",
																"nodeType": "YulFunctionCall",
																"src": "16256:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16246:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16246:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "16108:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16136:4:12",
														"nodeType": "YulTypedName",
														"src": "16136:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "16142:5:12",
														"nodeType": "YulTypedName",
														"src": "16142:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16152:6:12",
														"nodeType": "YulTypedName",
														"src": "16152:6:12",
														"type": ""
													}
												],
												"src": "16108:169:12"
											},
											{
												"body": {
													"nativeSrc": "16363:214:12",
													"nodeType": "YulBlock",
													"src": "16363:214:12",
													"statements": [
														{
															"nativeSrc": "16496:37:12",
															"nodeType": "YulAssignment",
															"src": "16496:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16523:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16523:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "16529:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16529:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "16504:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "16504:18:12"
																},
																"nativeSrc": "16504:29:12",
																"nodeType": "YulFunctionCall",
																"src": "16504:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16496:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16496:4:12"
																}
															]
														},
														{
															"nativeSrc": "16542:29:12",
															"nodeType": "YulAssignment",
															"src": "16542:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16553:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16553:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16563:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16563:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "16566:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "16566:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "16559:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16559:3:12"
																		},
																		"nativeSrc": "16559:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16559:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16550:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "16550:2:12"
																},
																"nativeSrc": "16550:21:12",
																"nodeType": "YulFunctionCall",
																"src": "16550:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "16542:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16542:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "16282:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16344:4:12",
														"nodeType": "YulTypedName",
														"src": "16344:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16350:3:12",
														"nodeType": "YulTypedName",
														"src": "16350:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "16358:4:12",
														"nodeType": "YulTypedName",
														"src": "16358:4:12",
														"type": ""
													}
												],
												"src": "16282:295:12"
											},
											{
												"body": {
													"nativeSrc": "16674:1303:12",
													"nodeType": "YulBlock",
													"src": "16674:1303:12",
													"statements": [
														{
															"nativeSrc": "16685:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "16685:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "16732:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16732:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16699:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "16699:32:12"
																},
																"nativeSrc": "16699:37:12",
																"nodeType": "YulFunctionCall",
																"src": "16699:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "16689:6:12",
																	"nodeType": "YulTypedName",
																	"src": "16689:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16821:22:12",
																"nodeType": "YulBlock",
																"src": "16821:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "16823:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "16823:16:12"
																			},
																			"nativeSrc": "16823:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16823:18:12"
																		},
																		"nativeSrc": "16823:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "16823:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "16793:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16793:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16801:18:12",
																		"nodeType": "YulLiteral",
																		"src": "16801:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16790:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "16790:2:12"
																},
																"nativeSrc": "16790:30:12",
																"nodeType": "YulFunctionCall",
																"src": "16790:30:12"
															},
															"nativeSrc": "16787:56:12",
															"nodeType": "YulIf",
															"src": "16787:56:12"
														},
														{
															"nativeSrc": "16853:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "16853:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "16899:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16899:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "16893:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "16893:5:12"
																		},
																		"nativeSrc": "16893:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16893:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "16867:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "16867:25:12"
																},
																"nativeSrc": "16867:38:12",
																"nodeType": "YulFunctionCall",
																"src": "16867:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "16857:6:12",
																	"nodeType": "YulTypedName",
																	"src": "16857:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16998:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16998:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "17004:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17004:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "17012:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17012:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "16952:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "16952:45:12"
																},
																"nativeSrc": "16952:67:12",
																"nodeType": "YulFunctionCall",
																"src": "16952:67:12"
															},
															"nativeSrc": "16952:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "16952:67:12"
														},
														{
															"nativeSrc": "17029:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "17029:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "17046:1:12",
																"nodeType": "YulLiteral",
																"src": "17046:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17033:9:12",
																	"nodeType": "YulTypedName",
																	"src": "17033:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17057:17:12",
															"nodeType": "YulAssignment",
															"src": "17057:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "17070:4:12",
																"nodeType": "YulLiteral",
																"src": "17070:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17057:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "17057:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "17121:611:12",
																		"nodeType": "YulBlock",
																		"src": "17121:611:12",
																		"statements": [
																			{
																				"nativeSrc": "17135:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17135:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "17154:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "17154:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "17166:4:12",
																									"nodeType": "YulLiteral",
																									"src": "17166:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "17162:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "17162:3:12"
																							},
																							"nativeSrc": "17162:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "17162:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "17150:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "17150:3:12"
																					},
																					"nativeSrc": "17150:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "17150:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "17139:7:12",
																						"nodeType": "YulTypedName",
																						"src": "17139:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17186:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17186:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17232:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "17232:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "17200:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "17200:31:12"
																					},
																					"nativeSrc": "17200:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "17200:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "17190:6:12",
																						"nodeType": "YulTypedName",
																						"src": "17190:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17250:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17250:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17259:1:12",
																					"nodeType": "YulLiteral",
																					"src": "17259:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "17254:1:12",
																						"nodeType": "YulTypedName",
																						"src": "17254:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17318:163:12",
																					"nodeType": "YulBlock",
																					"src": "17318:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17343:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "17343:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "17361:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "17361:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "17366:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "17366:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "17357:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "17357:3:12"
																												},
																												"nativeSrc": "17357:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "17357:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "17351:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "17351:5:12"
																										},
																										"nativeSrc": "17351:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "17351:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17336:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "17336:6:12"
																								},
																								"nativeSrc": "17336:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "17336:42:12"
																							},
																							"nativeSrc": "17336:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "17336:42:12"
																						},
																						{
																							"nativeSrc": "17395:24:12",
																							"nodeType": "YulAssignment",
																							"src": "17395:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17409:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "17409:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17417:1:12",
																										"nodeType": "YulLiteral",
																										"src": "17417:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17405:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "17405:3:12"
																								},
																								"nativeSrc": "17405:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "17405:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "17395:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "17395:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "17436:31:12",
																							"nodeType": "YulAssignment",
																							"src": "17436:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "17453:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "17453:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17464:2:12",
																										"nodeType": "YulLiteral",
																										"src": "17464:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17449:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "17449:3:12"
																								},
																								"nativeSrc": "17449:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "17449:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "17436:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "17436:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "17284:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "17284:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17287:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "17287:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17281:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "17281:2:12"
																					},
																					"nativeSrc": "17281:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "17281:14:12"
																				},
																				"nativeSrc": "17273:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "17296:21:12",
																					"nodeType": "YulBlock",
																					"src": "17296:21:12",
																					"statements": [
																						{
																							"nativeSrc": "17298:17:12",
																							"nodeType": "YulAssignment",
																							"src": "17298:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "17307:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "17307:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17310:4:12",
																										"nodeType": "YulLiteral",
																										"src": "17310:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17303:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "17303:3:12"
																								},
																								"nativeSrc": "17303:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "17303:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "17298:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "17298:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "17277:3:12",
																					"nodeType": "YulBlock",
																					"src": "17277:3:12",
																					"statements": []
																				},
																				"src": "17273:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "17517:156:12",
																					"nodeType": "YulBlock",
																					"src": "17517:156:12",
																					"statements": [
																						{
																							"nativeSrc": "17535:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "17535:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17562:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "17562:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17567:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "17567:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17558:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "17558:3:12"
																										},
																										"nativeSrc": "17558:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "17558:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17552:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "17552:5:12"
																								},
																								"nativeSrc": "17552:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "17552:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "17539:9:12",
																									"nodeType": "YulTypedName",
																									"src": "17539:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17602:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "17602:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "17629:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "17629:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "17644:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "17644:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "17652:4:12",
																														"nodeType": "YulLiteral",
																														"src": "17652:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "17640:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "17640:3:12"
																												},
																												"nativeSrc": "17640:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "17640:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "17610:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "17610:18:12"
																										},
																										"nativeSrc": "17610:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "17610:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17595:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "17595:6:12"
																								},
																								"nativeSrc": "17595:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "17595:64:12"
																							},
																							"nativeSrc": "17595:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "17595:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17500:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "17500:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "17509:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "17509:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17497:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "17497:2:12"
																					},
																					"nativeSrc": "17497:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "17497:19:12"
																				},
																				"nativeSrc": "17494:179:12",
																				"nodeType": "YulIf",
																				"src": "17494:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17693:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "17693:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "17707:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "17707:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "17715:1:12",
																											"nodeType": "YulLiteral",
																											"src": "17715:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "17703:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "17703:3:12"
																									},
																									"nativeSrc": "17703:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "17703:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "17719:1:12",
																									"nodeType": "YulLiteral",
																									"src": "17719:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "17699:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "17699:3:12"
																							},
																							"nativeSrc": "17699:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "17699:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17686:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "17686:6:12"
																					},
																					"nativeSrc": "17686:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "17686:36:12"
																				},
																				"nativeSrc": "17686:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "17686:36:12"
																			}
																		]
																	},
																	"nativeSrc": "17114:618:12",
																	"nodeType": "YulCase",
																	"src": "17114:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17119:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17119:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "17749:222:12",
																		"nodeType": "YulBlock",
																		"src": "17749:222:12",
																		"statements": [
																			{
																				"nativeSrc": "17763:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17763:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17776:1:12",
																					"nodeType": "YulLiteral",
																					"src": "17776:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "17767:5:12",
																						"nodeType": "YulTypedName",
																						"src": "17767:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17800:67:12",
																					"nodeType": "YulBlock",
																					"src": "17800:67:12",
																					"statements": [
																						{
																							"nativeSrc": "17818:35:12",
																							"nodeType": "YulAssignment",
																							"src": "17818:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17837:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "17837:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17842:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "17842:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17833:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "17833:3:12"
																										},
																										"nativeSrc": "17833:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "17833:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17827:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "17827:5:12"
																								},
																								"nativeSrc": "17827:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "17827:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "17818:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "17818:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "17793:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "17793:6:12"
																				},
																				"nativeSrc": "17790:77:12",
																				"nodeType": "YulIf",
																				"src": "17790:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17887:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "17887:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "17946:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "17946:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "17953:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "17953:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "17893:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "17893:52:12"
																							},
																							"nativeSrc": "17893:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "17893:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17880:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "17880:6:12"
																					},
																					"nativeSrc": "17880:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "17880:81:12"
																				},
																				"nativeSrc": "17880:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "17880:81:12"
																			}
																		]
																	},
																	"nativeSrc": "17741:230:12",
																	"nodeType": "YulCase",
																	"src": "17741:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17094:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17094:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17102:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17102:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17091:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "17091:2:12"
																},
																"nativeSrc": "17091:14:12",
																"nodeType": "YulFunctionCall",
																"src": "17091:14:12"
															},
															"nativeSrc": "17084:887:12",
															"nodeType": "YulSwitch",
															"src": "17084:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "16582:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16663:4:12",
														"nodeType": "YulTypedName",
														"src": "16663:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "16669:3:12",
														"nodeType": "YulTypedName",
														"src": "16669:3:12",
														"type": ""
													}
												],
												"src": "16582:1395:12"
											},
											{
												"body": {
													"nativeSrc": "18137:288:12",
													"nodeType": "YulBlock",
													"src": "18137:288:12",
													"statements": [
														{
															"nativeSrc": "18147:26:12",
															"nodeType": "YulAssignment",
															"src": "18147:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18159:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18159:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18170:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18170:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18155:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18155:3:12"
																},
																"nativeSrc": "18155:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18155:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18147:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18147:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18227:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18227:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18240:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18240:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18251:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18251:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18236:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18236:3:12"
																		},
																		"nativeSrc": "18236:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18236:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18183:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18183:43:12"
																},
																"nativeSrc": "18183:71:12",
																"nodeType": "YulFunctionCall",
																"src": "18183:71:12"
															},
															"nativeSrc": "18183:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "18183:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18308:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18308:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18321:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18321:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18332:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18332:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18317:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18317:3:12"
																		},
																		"nativeSrc": "18317:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18317:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18264:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18264:43:12"
																},
																"nativeSrc": "18264:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18264:72:12"
															},
															"nativeSrc": "18264:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18264:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18390:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18390:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18403:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18403:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18414:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18414:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18399:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18399:3:12"
																		},
																		"nativeSrc": "18399:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18399:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18346:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18346:43:12"
																},
																"nativeSrc": "18346:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18346:72:12"
															},
															"nativeSrc": "18346:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18346:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "17983:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18093:9:12",
														"nodeType": "YulTypedName",
														"src": "18093:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18105:6:12",
														"nodeType": "YulTypedName",
														"src": "18105:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18113:6:12",
														"nodeType": "YulTypedName",
														"src": "18113:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18121:6:12",
														"nodeType": "YulTypedName",
														"src": "18121:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18132:4:12",
														"nodeType": "YulTypedName",
														"src": "18132:4:12",
														"type": ""
													}
												],
												"src": "17983:442:12"
											},
											{
												"body": {
													"nativeSrc": "18537:64:12",
													"nodeType": "YulBlock",
													"src": "18537:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18559:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "18559:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18567:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18567:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18555:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18555:3:12"
																		},
																		"nativeSrc": "18555:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18555:14:12"
																	},
																	{
																		"hexValue": "546f6b656e20646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "18571:22:12",
																		"nodeType": "YulLiteral",
																		"src": "18571:22:12",
																		"type": "",
																		"value": "Token does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18548:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18548:6:12"
																},
																"nativeSrc": "18548:46:12",
																"nodeType": "YulFunctionCall",
																"src": "18548:46:12"
															},
															"nativeSrc": "18548:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "18548:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
												"nativeSrc": "18431:170:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18529:6:12",
														"nodeType": "YulTypedName",
														"src": "18529:6:12",
														"type": ""
													}
												],
												"src": "18431:170:12"
											},
											{
												"body": {
													"nativeSrc": "18753:220:12",
													"nodeType": "YulBlock",
													"src": "18753:220:12",
													"statements": [
														{
															"nativeSrc": "18763:74:12",
															"nodeType": "YulAssignment",
															"src": "18763:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18829:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18829:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18834:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18834:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18770:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "18770:58:12"
																},
																"nativeSrc": "18770:67:12",
																"nodeType": "YulFunctionCall",
																"src": "18770:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18763:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18763:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18935:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18935:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
																	"nativeSrc": "18846:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "18846:88:12"
																},
																"nativeSrc": "18846:93:12",
																"nodeType": "YulFunctionCall",
																"src": "18846:93:12"
															},
															"nativeSrc": "18846:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "18846:93:12"
														},
														{
															"nativeSrc": "18948:19:12",
															"nodeType": "YulAssignment",
															"src": "18948:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18959:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18959:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18964:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18964:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18955:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18955:3:12"
																},
																"nativeSrc": "18955:12:12",
																"nodeType": "YulFunctionCall",
																"src": "18955:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18948:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18948:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18607:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18741:3:12",
														"nodeType": "YulTypedName",
														"src": "18741:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18749:3:12",
														"nodeType": "YulTypedName",
														"src": "18749:3:12",
														"type": ""
													}
												],
												"src": "18607:366:12"
											},
											{
												"body": {
													"nativeSrc": "19150:248:12",
													"nodeType": "YulBlock",
													"src": "19150:248:12",
													"statements": [
														{
															"nativeSrc": "19160:26:12",
															"nodeType": "YulAssignment",
															"src": "19160:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19172:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "19172:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19183:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19183:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19168:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19168:3:12"
																},
																"nativeSrc": "19168:18:12",
																"nodeType": "YulFunctionCall",
																"src": "19168:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19160:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19160:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19207:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19207:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19218:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19218:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19203:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19203:3:12"
																		},
																		"nativeSrc": "19203:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19203:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19226:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19226:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19232:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19232:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19222:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19222:3:12"
																		},
																		"nativeSrc": "19222:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19222:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19196:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19196:6:12"
																},
																"nativeSrc": "19196:47:12",
																"nodeType": "YulFunctionCall",
																"src": "19196:47:12"
															},
															"nativeSrc": "19196:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "19196:47:12"
														},
														{
															"nativeSrc": "19252:139:12",
															"nodeType": "YulAssignment",
															"src": "19252:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19386:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19386:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19260:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "19260:124:12"
																},
																"nativeSrc": "19260:131:12",
																"nodeType": "YulFunctionCall",
																"src": "19260:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19252:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19252:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18979:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19130:9:12",
														"nodeType": "YulTypedName",
														"src": "19130:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19145:4:12",
														"nodeType": "YulTypedName",
														"src": "19145:4:12",
														"type": ""
													}
												],
												"src": "18979:419:12"
											},
											{
												"body": {
													"nativeSrc": "19518:34:12",
													"nodeType": "YulBlock",
													"src": "19518:34:12",
													"statements": [
														{
															"nativeSrc": "19528:18:12",
															"nodeType": "YulAssignment",
															"src": "19528:18:12",
															"value": {
																"name": "pos",
																"nativeSrc": "19543:3:12",
																"nodeType": "YulIdentifier",
																"src": "19543:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "19528:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "19528:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19404:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19490:3:12",
														"nodeType": "YulTypedName",
														"src": "19490:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19495:6:12",
														"nodeType": "YulTypedName",
														"src": "19495:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "19506:11:12",
														"nodeType": "YulTypedName",
														"src": "19506:11:12",
														"type": ""
													}
												],
												"src": "19404:148:12"
											},
											{
												"body": {
													"nativeSrc": "19668:280:12",
													"nodeType": "YulBlock",
													"src": "19668:280:12",
													"statements": [
														{
															"nativeSrc": "19678:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "19678:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19725:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "19725:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19692:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "19692:32:12"
																},
																"nativeSrc": "19692:39:12",
																"nodeType": "YulFunctionCall",
																"src": "19692:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19682:6:12",
																	"nodeType": "YulTypedName",
																	"src": "19682:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19740:96:12",
															"nodeType": "YulAssignment",
															"src": "19740:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19824:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19824:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19829:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19829:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19747:76:12",
																	"nodeType": "YulIdentifier",
																	"src": "19747:76:12"
																},
																"nativeSrc": "19747:89:12",
																"nodeType": "YulFunctionCall",
																"src": "19747:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19740:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19740:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19884:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "19884:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19891:4:12",
																				"nodeType": "YulLiteral",
																				"src": "19891:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19880:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19880:3:12"
																		},
																		"nativeSrc": "19880:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19880:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19898:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19898:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19903:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19903:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19845:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "19845:34:12"
																},
																"nativeSrc": "19845:65:12",
																"nodeType": "YulFunctionCall",
																"src": "19845:65:12"
															},
															"nativeSrc": "19845:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "19845:65:12"
														},
														{
															"nativeSrc": "19919:23:12",
															"nodeType": "YulAssignment",
															"src": "19919:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19930:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19930:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19935:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19935:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19926:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19926:3:12"
																},
																"nativeSrc": "19926:16:12",
																"nodeType": "YulFunctionCall",
																"src": "19926:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19919:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19919:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19558:390:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19649:5:12",
														"nodeType": "YulTypedName",
														"src": "19649:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19656:3:12",
														"nodeType": "YulTypedName",
														"src": "19656:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19664:3:12",
														"nodeType": "YulTypedName",
														"src": "19664:3:12",
														"type": ""
													}
												],
												"src": "19558:390:12"
											},
											{
												"body": {
													"nativeSrc": "20138:251:12",
													"nodeType": "YulBlock",
													"src": "20138:251:12",
													"statements": [
														{
															"nativeSrc": "20149:102:12",
															"nodeType": "YulAssignment",
															"src": "20149:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20238:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20238:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20247:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20247:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20156:81:12",
																	"nodeType": "YulIdentifier",
																	"src": "20156:81:12"
																},
																"nativeSrc": "20156:95:12",
																"nodeType": "YulFunctionCall",
																"src": "20156:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20149:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20149:3:12"
																}
															]
														},
														{
															"nativeSrc": "20261:102:12",
															"nodeType": "YulAssignment",
															"src": "20261:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20350:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20350:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20359:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20359:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20268:81:12",
																	"nodeType": "YulIdentifier",
																	"src": "20268:81:12"
																},
																"nativeSrc": "20268:95:12",
																"nodeType": "YulFunctionCall",
																"src": "20268:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20261:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20261:3:12"
																}
															]
														},
														{
															"nativeSrc": "20373:10:12",
															"nodeType": "YulAssignment",
															"src": "20373:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "20380:3:12",
																"nodeType": "YulIdentifier",
																"src": "20380:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20373:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20373:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "19954:435:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20109:3:12",
														"nodeType": "YulTypedName",
														"src": "20109:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20115:6:12",
														"nodeType": "YulTypedName",
														"src": "20115:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20123:6:12",
														"nodeType": "YulTypedName",
														"src": "20123:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20134:3:12",
														"nodeType": "YulTypedName",
														"src": "20134:3:12",
														"type": ""
													}
												],
												"src": "19954:435:12"
											},
											{
												"body": {
													"nativeSrc": "20453:40:12",
													"nodeType": "YulBlock",
													"src": "20453:40:12",
													"statements": [
														{
															"nativeSrc": "20464:22:12",
															"nodeType": "YulAssignment",
															"src": "20464:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20480:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "20480:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20474:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "20474:5:12"
																},
																"nativeSrc": "20474:12:12",
																"nodeType": "YulFunctionCall",
																"src": "20474:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "20464:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20464:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "20395:98:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20436:5:12",
														"nodeType": "YulTypedName",
														"src": "20436:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "20446:6:12",
														"nodeType": "YulTypedName",
														"src": "20446:6:12",
														"type": ""
													}
												],
												"src": "20395:98:12"
											},
											{
												"body": {
													"nativeSrc": "20594:73:12",
													"nodeType": "YulBlock",
													"src": "20594:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20611:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20611:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20616:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20616:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20604:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20604:6:12"
																},
																"nativeSrc": "20604:19:12",
																"nodeType": "YulFunctionCall",
																"src": "20604:19:12"
															},
															"nativeSrc": "20604:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "20604:19:12"
														},
														{
															"nativeSrc": "20632:29:12",
															"nodeType": "YulAssignment",
															"src": "20632:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20651:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20651:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20656:4:12",
																		"nodeType": "YulLiteral",
																		"src": "20656:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20647:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20647:3:12"
																},
																"nativeSrc": "20647:14:12",
																"nodeType": "YulFunctionCall",
																"src": "20647:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "20632:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "20632:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20499:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20566:3:12",
														"nodeType": "YulTypedName",
														"src": "20566:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20571:6:12",
														"nodeType": "YulTypedName",
														"src": "20571:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "20582:11:12",
														"nodeType": "YulTypedName",
														"src": "20582:11:12",
														"type": ""
													}
												],
												"src": "20499:168:12"
											},
											{
												"body": {
													"nativeSrc": "20763:283:12",
													"nodeType": "YulBlock",
													"src": "20763:283:12",
													"statements": [
														{
															"nativeSrc": "20773:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "20773:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20819:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "20819:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "20787:31:12",
																	"nodeType": "YulIdentifier",
																	"src": "20787:31:12"
																},
																"nativeSrc": "20787:38:12",
																"nodeType": "YulFunctionCall",
																"src": "20787:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20777:6:12",
																	"nodeType": "YulTypedName",
																	"src": "20777:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20834:77:12",
															"nodeType": "YulAssignment",
															"src": "20834:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20899:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20899:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20904:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20904:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "20841:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "20841:57:12"
																},
																"nativeSrc": "20841:70:12",
																"nodeType": "YulFunctionCall",
																"src": "20841:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20834:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20834:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20959:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "20959:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20966:4:12",
																				"nodeType": "YulLiteral",
																				"src": "20966:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20955:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20955:3:12"
																		},
																		"nativeSrc": "20955:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20955:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20973:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20973:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20978:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20978:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "20920:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "20920:34:12"
																},
																"nativeSrc": "20920:65:12",
																"nodeType": "YulFunctionCall",
																"src": "20920:65:12"
															},
															"nativeSrc": "20920:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "20920:65:12"
														},
														{
															"nativeSrc": "20994:46:12",
															"nodeType": "YulAssignment",
															"src": "20994:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21005:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21005:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21032:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "21032:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "21010:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "21010:21:12"
																		},
																		"nativeSrc": "21010:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21010:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21001:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21001:3:12"
																},
																"nativeSrc": "21001:39:12",
																"nodeType": "YulFunctionCall",
																"src": "21001:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20994:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20994:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20673:373:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20744:5:12",
														"nodeType": "YulTypedName",
														"src": "20744:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20751:3:12",
														"nodeType": "YulTypedName",
														"src": "20751:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20759:3:12",
														"nodeType": "YulTypedName",
														"src": "20759:3:12",
														"type": ""
													}
												],
												"src": "20673:373:12"
											},
											{
												"body": {
													"nativeSrc": "21252:440:12",
													"nodeType": "YulBlock",
													"src": "21252:440:12",
													"statements": [
														{
															"nativeSrc": "21262:27:12",
															"nodeType": "YulAssignment",
															"src": "21262:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21274:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "21274:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21285:3:12",
																		"nodeType": "YulLiteral",
																		"src": "21285:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21270:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21270:3:12"
																},
																"nativeSrc": "21270:19:12",
																"nodeType": "YulFunctionCall",
																"src": "21270:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21262:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21262:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21343:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21343:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21356:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21356:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21367:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21367:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21352:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21352:3:12"
																		},
																		"nativeSrc": "21352:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21352:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21299:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21299:43:12"
																},
																"nativeSrc": "21299:71:12",
																"nodeType": "YulFunctionCall",
																"src": "21299:71:12"
															},
															"nativeSrc": "21299:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "21299:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21424:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21424:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21437:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21437:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21448:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21448:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21433:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21433:3:12"
																		},
																		"nativeSrc": "21433:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21433:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21380:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21380:43:12"
																},
																"nativeSrc": "21380:72:12",
																"nodeType": "YulFunctionCall",
																"src": "21380:72:12"
															},
															"nativeSrc": "21380:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "21380:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21506:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21506:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21519:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21519:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21530:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21530:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21515:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21515:3:12"
																		},
																		"nativeSrc": "21515:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21515:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21462:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21462:43:12"
																},
																"nativeSrc": "21462:72:12",
																"nodeType": "YulFunctionCall",
																"src": "21462:72:12"
															},
															"nativeSrc": "21462:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "21462:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21555:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21555:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21566:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21566:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21551:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21551:3:12"
																		},
																		"nativeSrc": "21551:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21551:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21575:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "21575:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21581:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21581:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21571:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21571:3:12"
																		},
																		"nativeSrc": "21571:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21571:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21544:6:12"
																},
																"nativeSrc": "21544:48:12",
																"nodeType": "YulFunctionCall",
																"src": "21544:48:12"
															},
															"nativeSrc": "21544:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "21544:48:12"
														},
														{
															"nativeSrc": "21601:84:12",
															"nodeType": "YulAssignment",
															"src": "21601:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "21671:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21671:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "21680:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21680:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "21609:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "21609:61:12"
																},
																"nativeSrc": "21609:76:12",
																"nodeType": "YulFunctionCall",
																"src": "21609:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21601:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21601:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "21052:640:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21200:9:12",
														"nodeType": "YulTypedName",
														"src": "21200:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "21212:6:12",
														"nodeType": "YulTypedName",
														"src": "21212:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21220:6:12",
														"nodeType": "YulTypedName",
														"src": "21220:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21228:6:12",
														"nodeType": "YulTypedName",
														"src": "21228:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21236:6:12",
														"nodeType": "YulTypedName",
														"src": "21236:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21247:4:12",
														"nodeType": "YulTypedName",
														"src": "21247:4:12",
														"type": ""
													}
												],
												"src": "21052:640:12"
											},
											{
												"body": {
													"nativeSrc": "21760:79:12",
													"nodeType": "YulBlock",
													"src": "21760:79:12",
													"statements": [
														{
															"nativeSrc": "21770:22:12",
															"nodeType": "YulAssignment",
															"src": "21770:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21785:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21785:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21779:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "21779:5:12"
																},
																"nativeSrc": "21779:13:12",
																"nodeType": "YulFunctionCall",
																"src": "21779:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21770:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "21770:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21827:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "21827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "21801:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "21801:25:12"
																},
																"nativeSrc": "21801:32:12",
																"nodeType": "YulFunctionCall",
																"src": "21801:32:12"
															},
															"nativeSrc": "21801:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "21801:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "21698:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21738:6:12",
														"nodeType": "YulTypedName",
														"src": "21738:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21746:3:12",
														"nodeType": "YulTypedName",
														"src": "21746:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21754:5:12",
														"nodeType": "YulTypedName",
														"src": "21754:5:12",
														"type": ""
													}
												],
												"src": "21698:141:12"
											},
											{
												"body": {
													"nativeSrc": "21921:273:12",
													"nodeType": "YulBlock",
													"src": "21921:273:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "21967:83:12",
																"nodeType": "YulBlock",
																"src": "21967:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21969:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "21969:77:12"
																			},
																			"nativeSrc": "21969:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "21969:79:12"
																		},
																		"nativeSrc": "21969:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "21969:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21942:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "21942:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21951:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21951:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21938:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21938:3:12"
																		},
																		"nativeSrc": "21938:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21938:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21963:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21963:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21934:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21934:3:12"
																},
																"nativeSrc": "21934:32:12",
																"nodeType": "YulFunctionCall",
																"src": "21934:32:12"
															},
															"nativeSrc": "21931:119:12",
															"nodeType": "YulIf",
															"src": "21931:119:12"
														},
														{
															"nativeSrc": "22060:127:12",
															"nodeType": "YulBlock",
															"src": "22060:127:12",
															"statements": [
																{
																	"nativeSrc": "22075:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "22075:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22089:1:12",
																		"nodeType": "YulLiteral",
																		"src": "22089:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "22079:6:12",
																			"nodeType": "YulTypedName",
																			"src": "22079:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "22104:73:12",
																	"nodeType": "YulAssignment",
																	"src": "22104:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "22149:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "22149:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "22160:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "22160:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "22145:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "22145:3:12"
																				},
																				"nativeSrc": "22145:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "22145:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22169:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "22169:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "22114:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "22114:30:12"
																		},
																		"nativeSrc": "22114:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22114:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "22104:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "22104:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "21845:349:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21891:9:12",
														"nodeType": "YulTypedName",
														"src": "21891:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21902:7:12",
														"nodeType": "YulTypedName",
														"src": "21902:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21914:6:12",
														"nodeType": "YulTypedName",
														"src": "21914:6:12",
														"type": ""
													}
												],
												"src": "21845:349:12"
											},
											{
												"body": {
													"nativeSrc": "22228:152:12",
													"nodeType": "YulBlock",
													"src": "22228:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22245:1:12",
																		"nodeType": "YulLiteral",
																		"src": "22245:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22248:77:12",
																		"nodeType": "YulLiteral",
																		"src": "22248:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22238:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22238:6:12"
																},
																"nativeSrc": "22238:88:12",
																"nodeType": "YulFunctionCall",
																"src": "22238:88:12"
															},
															"nativeSrc": "22238:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "22238:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22342:1:12",
																		"nodeType": "YulLiteral",
																		"src": "22342:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22345:4:12",
																		"nodeType": "YulLiteral",
																		"src": "22345:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22335:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22335:6:12"
																},
																"nativeSrc": "22335:15:12",
																"nodeType": "YulFunctionCall",
																"src": "22335:15:12"
															},
															"nativeSrc": "22335:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "22335:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22366:1:12",
																		"nodeType": "YulLiteral",
																		"src": "22366:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22369:4:12",
																		"nodeType": "YulLiteral",
																		"src": "22369:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22359:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22359:6:12"
																},
																"nativeSrc": "22359:15:12",
																"nodeType": "YulFunctionCall",
																"src": "22359:15:12"
															},
															"nativeSrc": "22359:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "22359:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "22200:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "22200:180:12"
											},
											{
												"body": {
													"nativeSrc": "22512:206:12",
													"nodeType": "YulBlock",
													"src": "22512:206:12",
													"statements": [
														{
															"nativeSrc": "22522:26:12",
															"nodeType": "YulAssignment",
															"src": "22522:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22534:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "22534:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22545:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22545:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22530:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22530:3:12"
																},
																"nativeSrc": "22530:18:12",
																"nodeType": "YulFunctionCall",
																"src": "22530:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22522:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22522:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22602:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22602:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22615:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22615:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22626:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22626:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22611:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22611:3:12"
																		},
																		"nativeSrc": "22611:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22611:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22558:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "22558:43:12"
																},
																"nativeSrc": "22558:71:12",
																"nodeType": "YulFunctionCall",
																"src": "22558:71:12"
															},
															"nativeSrc": "22558:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "22558:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22683:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22683:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22696:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22696:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22707:2:12",
																				"nodeType": "YulLiteral",
																				"src": "22707:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22692:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22692:3:12"
																		},
																		"nativeSrc": "22692:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22692:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22639:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "22639:43:12"
																},
																"nativeSrc": "22639:72:12",
																"nodeType": "YulFunctionCall",
																"src": "22639:72:12"
															},
															"nativeSrc": "22639:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "22639:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "22386:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22476:9:12",
														"nodeType": "YulTypedName",
														"src": "22476:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22488:6:12",
														"nodeType": "YulTypedName",
														"src": "22488:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22496:6:12",
														"nodeType": "YulTypedName",
														"src": "22496:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22507:4:12",
														"nodeType": "YulTypedName",
														"src": "22507:4:12",
														"type": ""
													}
												],
												"src": "22386:332:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100f3575f3560e01c80636031680111610095578063a22cb46511610064578063a22cb465146102a8578063b88d4fde146102c4578063c87b56dd146102e0578063e985e9c514610310576100f3565b806360316801146101f95780636352211e1461022a57806370a082311461025a57806395d89b411461028a576100f3565b8063095ea7b3116100d1578063095ea7b3146101755780631e5769121461019157806323b872dd146101c157806342842e0e146101dd576100f3565b806301ffc9a7146100f757806306fdde0314610127578063081812fc14610145575b5f80fd5b610111600480360381019061010c9190611830565b610340565b60405161011e9190611875565b60405180910390f35b61012f610421565b60405161013c91906118fe565b60405180910390f35b61015f600480360381019061015a9190611951565b6104b0565b60405161016c91906119bb565b60405180910390f35b61018f600480360381019061018a91906119fe565b6104cb565b005b6101ab60048036038101906101a69190611b68565b6104e1565b6040516101b89190611be3565b60405180910390f35b6101db60048036038101906101d69190611bfc565b6105aa565b005b6101f760048036038101906101f29190611bfc565b6106a9565b005b610213600480360381019061020e9190611951565b6106c8565b604051610221929190611c4c565b60405180910390f35b610244600480360381019061023f9190611951565b6107de565b60405161025191906119bb565b60405180910390f35b610274600480360381019061026f9190611c7a565b6107ef565b6040516102819190611be3565b60405180910390f35b6102926108a5565b60405161029f91906118fe565b60405180910390f35b6102c260048036038101906102bd9190611ccf565b610935565b005b6102de60048036038101906102d99190611dab565b61094b565b005b6102fa60048036038101906102f59190611951565b610968565b60405161030791906118fe565b60405180910390f35b61032a60048036038101906103259190611e2b565b6109ce565b6040516103379190611875565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061040a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061041a575061041982610a5c565b5b9050919050565b60605f805461042f90611e96565b80601f016020809104026020016040519081016040528092919081815260200182805461045b90611e96565b80156104a65780601f1061047d576101008083540402835291602001916104a6565b820191905f5260205f20905b81548152906001019060200180831161048957829003601f168201915b5050505050905090565b5f6104ba82610ac5565b506104c482610b4b565b9050919050565b6104dd82826104d8610b84565b610b8b565b5050565b5f60065f8154809291906104f490611ef3565b91905055505f60065490506105098582610b9d565b8460085f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180604001604052808581526020018481525060075f8381526020019081526020015f205f820151815f0155602082015181600101908161059b91906120d7565b50905050809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361061a575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161061191906119bb565b60405180910390fd5b5f61062d8383610628610b84565b610c90565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106a3578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161069a939291906121a6565b60405180910390fd5b50505050565b6106c383838360405180602001604052805f81525061094b565b505050565b5f60606106d483610e9b565b610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070a90612225565b60405180910390fd5b5f60075f8581526020019081526020015f206040518060400160405290815f820154815260200160018201805461074990611e96565b80601f016020809104026020016040519081016040528092919081815260200182805461077590611e96565b80156107c05780601f10610797576101008083540402835291602001916107c0565b820191905f5260205f20905b8154815290600101906020018083116107a357829003601f168201915b5050505050815250509050805f015181602001519250925050915091565b5f6107e882610ac5565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610860575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161085791906119bb565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600180546108b490611e96565b80601f01602080910402602001604051908101604052809291908181526020018280546108e090611e96565b801561092b5780601f106109025761010080835404028352916020019161092b565b820191905f5260205f20905b81548152906001019060200180831161090e57829003601f168201915b5050505050905090565b610947610940610b84565b8383610f03565b5050565b6109568484846105aa565b6109628484848461106c565b50505050565b606061097382610ac5565b505f61097d61121e565b90505f81511161099b5760405180602001604052805f8152506109c6565b806109a584611234565b6040516020016109b692919061227d565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610ad0836112fe565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b4257826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b399190611be3565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610b988383836001611337565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c0d575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610c0491906119bb565b60405180910390fd5b5f610c1983835f610c90565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c8b575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610c8291906119bb565b60405180910390fd5b505050565b5f80610c9b846112fe565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610cdc57610cdb8184866114f6565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d6757610d1b5f855f80611337565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610de657600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f8073ffffffffffffffffffffffffffffffffffffffff1660085f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f7357816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610f6a91906119bb565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161105f9190611875565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611218578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026110af610b84565b8685856040518563ffffffff1660e01b81526004016110d194939291906122f2565b6020604051808303815f875af192505050801561110c57506040513d601f19601f820116820180604052508101906111099190612350565b60015b61118d573d805f811461113a576040519150601f19603f3d011682016040523d82523d5f602084013e61113f565b606091505b505f81510361118557836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161117c91906119bb565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461121657836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161120d91906119bb565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f6001611242846115b9565b0190505f8167ffffffffffffffff8111156112605761125f611a44565b5b6040519080825280601f01601f1916602001820160405280156112925781602001600182028036833780820191505090505b5090505f82602001820190505b6001156112f3578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816112e8576112e761237b565b5b0494505f850361129f575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061136f57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156114a1575f61137e84610ac5565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156113e857508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156113fb57506113f981846109ce565b155b1561143d57826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161143491906119bb565b60405180910390fd5b811561149f57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61150183838361170a565b6115b4575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361157557806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161156c9190611be3565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016115ab9291906123a8565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611615577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161160b5761160a61237b565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611652576d04ee2d6d415b85acef810000000083816116485761164761237b565b5b0492506020810190505b662386f26fc10000831061168157662386f26fc1000083816116775761167661237b565b5b0492506010810190505b6305f5e10083106116aa576305f5e10083816116a05761169f61237b565b5b0492506008810190505b61271083106116cf5761271083816116c5576116c461237b565b5b0492506004810190505b606483106116f257606483816116e8576116e761237b565b5b0492506002810190505b600a8310611701576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156117c157508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611782575061178184846109ce565b5b806117c057508273ffffffffffffffffffffffffffffffffffffffff166117a883610b4b565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61180f816117db565b8114611819575f80fd5b50565b5f8135905061182a81611806565b92915050565b5f60208284031215611845576118446117d3565b5b5f6118528482850161181c565b91505092915050565b5f8115159050919050565b61186f8161185b565b82525050565b5f6020820190506118885f830184611866565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6118d08261188e565b6118da8185611898565b93506118ea8185602086016118a8565b6118f3816118b6565b840191505092915050565b5f6020820190508181035f83015261191681846118c6565b905092915050565b5f819050919050565b6119308161191e565b811461193a575f80fd5b50565b5f8135905061194b81611927565b92915050565b5f60208284031215611966576119656117d3565b5b5f6119738482850161193d565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119a58261197c565b9050919050565b6119b58161199b565b82525050565b5f6020820190506119ce5f8301846119ac565b92915050565b6119dd8161199b565b81146119e7575f80fd5b50565b5f813590506119f8816119d4565b92915050565b5f8060408385031215611a1457611a136117d3565b5b5f611a21858286016119ea565b9250506020611a328582860161193d565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611a7a826118b6565b810181811067ffffffffffffffff82111715611a9957611a98611a44565b5b80604052505050565b5f611aab6117ca565b9050611ab78282611a71565b919050565b5f67ffffffffffffffff821115611ad657611ad5611a44565b5b611adf826118b6565b9050602081019050919050565b828183375f83830152505050565b5f611b0c611b0784611abc565b611aa2565b905082815260208101848484011115611b2857611b27611a40565b5b611b33848285611aec565b509392505050565b5f82601f830112611b4f57611b4e611a3c565b5b8135611b5f848260208601611afa565b91505092915050565b5f805f60608486031215611b7f57611b7e6117d3565b5b5f611b8c868287016119ea565b9350506020611b9d8682870161193d565b925050604084013567ffffffffffffffff811115611bbe57611bbd6117d7565b5b611bca86828701611b3b565b9150509250925092565b611bdd8161191e565b82525050565b5f602082019050611bf65f830184611bd4565b92915050565b5f805f60608486031215611c1357611c126117d3565b5b5f611c20868287016119ea565b9350506020611c31868287016119ea565b9250506040611c428682870161193d565b9150509250925092565b5f604082019050611c5f5f830185611bd4565b8181036020830152611c7181846118c6565b90509392505050565b5f60208284031215611c8f57611c8e6117d3565b5b5f611c9c848285016119ea565b91505092915050565b611cae8161185b565b8114611cb8575f80fd5b50565b5f81359050611cc981611ca5565b92915050565b5f8060408385031215611ce557611ce46117d3565b5b5f611cf2858286016119ea565b9250506020611d0385828601611cbb565b9150509250929050565b5f67ffffffffffffffff821115611d2757611d26611a44565b5b611d30826118b6565b9050602081019050919050565b5f611d4f611d4a84611d0d565b611aa2565b905082815260208101848484011115611d6b57611d6a611a40565b5b611d76848285611aec565b509392505050565b5f82601f830112611d9257611d91611a3c565b5b8135611da2848260208601611d3d565b91505092915050565b5f805f8060808587031215611dc357611dc26117d3565b5b5f611dd0878288016119ea565b9450506020611de1878288016119ea565b9350506040611df28782880161193d565b925050606085013567ffffffffffffffff811115611e1357611e126117d7565b5b611e1f87828801611d7e565b91505092959194509250565b5f8060408385031215611e4157611e406117d3565b5b5f611e4e858286016119ea565b9250506020611e5f858286016119ea565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ead57607f821691505b602082108103611ec057611ebf611e69565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611efd8261191e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f2f57611f2e611ec6565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611f967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611f5b565b611fa08683611f5b565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611fdb611fd6611fd18461191e565b611fb8565b61191e565b9050919050565b5f819050919050565b611ff483611fc1565b61200861200082611fe2565b848454611f67565b825550505050565b5f90565b61201c612010565b612027818484611feb565b505050565b5b8181101561204a5761203f5f82612014565b60018101905061202d565b5050565b601f82111561208f5761206081611f3a565b61206984611f4c565b81016020851015612078578190505b61208c61208485611f4c565b83018261202c565b50505b505050565b5f82821c905092915050565b5f6120af5f1984600802612094565b1980831691505092915050565b5f6120c783836120a0565b9150826002028217905092915050565b6120e08261188e565b67ffffffffffffffff8111156120f9576120f8611a44565b5b6121038254611e96565b61210e82828561204e565b5f60209050601f83116001811461213f575f841561212d578287015190505b61213785826120bc565b86555061219e565b601f19841661214d86611f3a565b5f5b828110156121745784890151825560018201915060208501945060208101905061214f565b86831015612191578489015161218d601f8916826120a0565b8355505b6001600288020188555050505b505050505050565b5f6060820190506121b95f8301866119ac565b6121c66020830185611bd4565b6121d360408301846119ac565b949350505050565b7f546f6b656e20646f6573206e6f742065786973740000000000000000000000005f82015250565b5f61220f601483611898565b915061221a826121db565b602082019050919050565b5f6020820190508181035f83015261223c81612203565b9050919050565b5f81905092915050565b5f6122578261188e565b6122618185612243565b93506122718185602086016118a8565b80840191505092915050565b5f612288828561224d565b9150612294828461224d565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6122c4826122a0565b6122ce81856122aa565b93506122de8185602086016118a8565b6122e7816118b6565b840191505092915050565b5f6080820190506123055f8301876119ac565b61231260208301866119ac565b61231f6040830185611bd4565b818103606083015261233181846122ba565b905095945050505050565b5f8151905061234a81611806565b92915050565b5f60208284031215612365576123646117d3565b5b5f6123728482850161233c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506123bb5f8301856119ac565b6123c86020830184611bd4565b939250505056fea264697066735822122086e16049ea753957bf3a4cb9998ac06101bd3d21adb103184ad6b1b05c1188ea64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60316801 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x310 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x60316801 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28A JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x1E576912 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1DD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x1BFC JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1BFC JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP3 SWAP2 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1C7A JUMP JUMPDEST PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x968 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x40A JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x41A JUMPI POP PUSH2 0x419 DUP3 PUSH2 0xA5C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x42F SWAP1 PUSH2 0x1E96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45B SWAP1 PUSH2 0x1E96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x489 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4BA DUP3 PUSH2 0xAC5 JUMP JUMPDEST POP PUSH2 0x4C4 DUP3 PUSH2 0xB4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DD DUP3 DUP3 PUSH2 0x4D8 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0xB8B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x4F4 SWAP1 PUSH2 0x1EF3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0x509 DUP6 DUP3 PUSH2 0xB9D JUMP JUMPDEST DUP5 PUSH1 0x8 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST POP SWAP1 POP POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x61A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x62D DUP4 DUP4 PUSH2 0x628 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A3 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6C3 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x94B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH2 0x6D4 DUP4 PUSH2 0xE9B JUMP JUMPDEST PUSH2 0x713 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70A SWAP1 PUSH2 0x2225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x749 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x775 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x797 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0x7E8 DUP3 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x860 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x857 SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8B4 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E0 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x92B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x902 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x92B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x947 PUSH2 0x940 PUSH2 0xB84 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF03 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x956 DUP5 DUP5 DUP5 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x962 DUP5 DUP5 DUP5 DUP5 PUSH2 0x106C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x973 DUP3 PUSH2 0xAC5 JUMP JUMPDEST POP PUSH0 PUSH2 0x97D PUSH2 0x121E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9C6 JUMP JUMPDEST DUP1 PUSH2 0x9A5 DUP5 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9B6 SWAP3 SWAP2 SWAP1 PUSH2 0x227D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAD0 DUP4 PUSH2 0x12FE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB42 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB39 SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB98 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1337 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC0D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC04 SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xC19 DUP4 DUP4 PUSH0 PUSH2 0xC90 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC82 SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC9B DUP5 PUSH2 0x12FE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCDC JUMPI PUSH2 0xCDB DUP2 DUP5 DUP7 PUSH2 0x14F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD67 JUMPI PUSH2 0xD1B PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDE6 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF73 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6A SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x105F SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1218 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x10AF PUSH2 0xB84 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x110C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1109 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x118D JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x113F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1185 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117C SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1216 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120D SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1242 DUP5 PUSH2 0x15B9 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1260 JUMPI PUSH2 0x125F PUSH2 0x1A44 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1292 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x12F3 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x12E8 JUMPI PUSH2 0x12E7 PUSH2 0x237B JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x129F JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x136F JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x14A1 JUMPI PUSH0 PUSH2 0x137E DUP5 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x13E8 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13FB JUMPI POP PUSH2 0x13F9 DUP2 DUP5 PUSH2 0x9CE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x143D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1434 SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x149F JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1501 DUP4 DUP4 DUP4 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x15B4 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1575 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x156C SWAP2 SWAP1 PUSH2 0x1BE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15AB SWAP3 SWAP2 SWAP1 PUSH2 0x23A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1615 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x160B JUMPI PUSH2 0x160A PUSH2 0x237B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1652 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1648 JUMPI PUSH2 0x1647 PUSH2 0x237B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1681 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1677 JUMPI PUSH2 0x1676 PUSH2 0x237B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x16AA JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x16A0 JUMPI PUSH2 0x169F PUSH2 0x237B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x16CF JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x16C5 JUMPI PUSH2 0x16C4 PUSH2 0x237B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x16F2 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x16E8 JUMPI PUSH2 0x16E7 PUSH2 0x237B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1701 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x17C1 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1782 JUMPI POP PUSH2 0x1781 DUP5 DUP5 PUSH2 0x9CE JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x17C0 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17A8 DUP4 PUSH2 0xB4B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180F DUP2 PUSH2 0x17DB JUMP JUMPDEST DUP2 EQ PUSH2 0x1819 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x182A DUP2 PUSH2 0x1806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1845 JUMPI PUSH2 0x1844 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1852 DUP5 DUP3 DUP6 ADD PUSH2 0x181C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186F DUP2 PUSH2 0x185B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1888 PUSH0 DUP4 ADD DUP5 PUSH2 0x1866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18D0 DUP3 PUSH2 0x188E JUMP JUMPDEST PUSH2 0x18DA DUP2 DUP6 PUSH2 0x1898 JUMP JUMPDEST SWAP4 POP PUSH2 0x18EA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0x18F3 DUP2 PUSH2 0x18B6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1916 DUP2 DUP5 PUSH2 0x18C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1930 DUP2 PUSH2 0x191E JUMP JUMPDEST DUP2 EQ PUSH2 0x193A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x194B DUP2 PUSH2 0x1927 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1973 DUP5 DUP3 DUP6 ADD PUSH2 0x193D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19A5 DUP3 PUSH2 0x197C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B5 DUP2 PUSH2 0x199B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19CE PUSH0 DUP4 ADD DUP5 PUSH2 0x19AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19DD DUP2 PUSH2 0x199B JUMP JUMPDEST DUP2 EQ PUSH2 0x19E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F8 DUP2 PUSH2 0x19D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A14 JUMPI PUSH2 0x1A13 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A21 DUP6 DUP3 DUP7 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A32 DUP6 DUP3 DUP7 ADD PUSH2 0x193D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1A7A DUP3 PUSH2 0x18B6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A99 JUMPI PUSH2 0x1A98 PUSH2 0x1A44 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AAB PUSH2 0x17CA JUMP JUMPDEST SWAP1 POP PUSH2 0x1AB7 DUP3 DUP3 PUSH2 0x1A71 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AD6 JUMPI PUSH2 0x1AD5 PUSH2 0x1A44 JUMP JUMPDEST JUMPDEST PUSH2 0x1ADF DUP3 PUSH2 0x18B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B0C PUSH2 0x1B07 DUP5 PUSH2 0x1ABC JUMP JUMPDEST PUSH2 0x1AA2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B28 JUMPI PUSH2 0x1B27 PUSH2 0x1A40 JUMP JUMPDEST JUMPDEST PUSH2 0x1B33 DUP5 DUP3 DUP6 PUSH2 0x1AEC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B4F JUMPI PUSH2 0x1B4E PUSH2 0x1A3C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B5F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1AFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B7F JUMPI PUSH2 0x1B7E PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B8C DUP7 DUP3 DUP8 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B9D DUP7 DUP3 DUP8 ADD PUSH2 0x193D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BBE JUMPI PUSH2 0x1BBD PUSH2 0x17D7 JUMP JUMPDEST JUMPDEST PUSH2 0x1BCA DUP7 DUP3 DUP8 ADD PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1BDD DUP2 PUSH2 0x191E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BF6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C13 JUMPI PUSH2 0x1C12 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C20 DUP7 DUP3 DUP8 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C31 DUP7 DUP3 DUP8 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C42 DUP7 DUP3 DUP8 ADD PUSH2 0x193D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C5F PUSH0 DUP4 ADD DUP6 PUSH2 0x1BD4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C71 DUP2 DUP5 PUSH2 0x18C6 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8F JUMPI PUSH2 0x1C8E PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C9C DUP5 DUP3 DUP6 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CAE DUP2 PUSH2 0x185B JUMP JUMPDEST DUP2 EQ PUSH2 0x1CB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CC9 DUP2 PUSH2 0x1CA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CE5 JUMPI PUSH2 0x1CE4 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CF2 DUP6 DUP3 DUP7 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D03 DUP6 DUP3 DUP7 ADD PUSH2 0x1CBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D27 JUMPI PUSH2 0x1D26 PUSH2 0x1A44 JUMP JUMPDEST JUMPDEST PUSH2 0x1D30 DUP3 PUSH2 0x18B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D4F PUSH2 0x1D4A DUP5 PUSH2 0x1D0D JUMP JUMPDEST PUSH2 0x1AA2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1D6B JUMPI PUSH2 0x1D6A PUSH2 0x1A40 JUMP JUMPDEST JUMPDEST PUSH2 0x1D76 DUP5 DUP3 DUP6 PUSH2 0x1AEC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D92 JUMPI PUSH2 0x1D91 PUSH2 0x1A3C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DA2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1DC3 JUMPI PUSH2 0x1DC2 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DD0 DUP8 DUP3 DUP9 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1DE1 DUP8 DUP3 DUP9 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1DF2 DUP8 DUP3 DUP9 ADD PUSH2 0x193D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E13 JUMPI PUSH2 0x1E12 PUSH2 0x17D7 JUMP JUMPDEST JUMPDEST PUSH2 0x1E1F DUP8 DUP3 DUP9 ADD PUSH2 0x1D7E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E41 JUMPI PUSH2 0x1E40 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E4E DUP6 DUP3 DUP7 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E5F DUP6 DUP3 DUP7 ADD PUSH2 0x19EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EAD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1EC0 JUMPI PUSH2 0x1EBF PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EFD DUP3 PUSH2 0x191E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1F2F JUMPI PUSH2 0x1F2E PUSH2 0x1EC6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1F96 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1F5B JUMP JUMPDEST PUSH2 0x1FA0 DUP7 DUP4 PUSH2 0x1F5B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDB PUSH2 0x1FD6 PUSH2 0x1FD1 DUP5 PUSH2 0x191E JUMP JUMPDEST PUSH2 0x1FB8 JUMP JUMPDEST PUSH2 0x191E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF4 DUP4 PUSH2 0x1FC1 JUMP JUMPDEST PUSH2 0x2008 PUSH2 0x2000 DUP3 PUSH2 0x1FE2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1F67 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x201C PUSH2 0x2010 JUMP JUMPDEST PUSH2 0x2027 DUP2 DUP5 DUP5 PUSH2 0x1FEB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x204A JUMPI PUSH2 0x203F PUSH0 DUP3 PUSH2 0x2014 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x202D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x208F JUMPI PUSH2 0x2060 DUP2 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x2069 DUP5 PUSH2 0x1F4C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2078 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x208C PUSH2 0x2084 DUP6 PUSH2 0x1F4C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x202C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20AF PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2094 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20C7 DUP4 DUP4 PUSH2 0x20A0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20E0 DUP3 PUSH2 0x188E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20F9 JUMPI PUSH2 0x20F8 PUSH2 0x1A44 JUMP JUMPDEST JUMPDEST PUSH2 0x2103 DUP3 SLOAD PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x210E DUP3 DUP3 DUP6 PUSH2 0x204E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x213F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x212D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2137 DUP6 DUP3 PUSH2 0x20BC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x219E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x214D DUP7 PUSH2 0x1F3A JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2174 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x214F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2191 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x218D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x20A0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x21B9 PUSH0 DUP4 ADD DUP7 PUSH2 0x19AC JUMP JUMPDEST PUSH2 0x21C6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x21D3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19AC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20646F6573206E6F74206578697374000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x220F PUSH1 0x14 DUP4 PUSH2 0x1898 JUMP JUMPDEST SWAP2 POP PUSH2 0x221A DUP3 PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x223C DUP2 PUSH2 0x2203 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2257 DUP3 PUSH2 0x188E JUMP JUMPDEST PUSH2 0x2261 DUP2 DUP6 PUSH2 0x2243 JUMP JUMPDEST SWAP4 POP PUSH2 0x2271 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18A8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2288 DUP3 DUP6 PUSH2 0x224D JUMP JUMPDEST SWAP2 POP PUSH2 0x2294 DUP3 DUP5 PUSH2 0x224D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22C4 DUP3 PUSH2 0x22A0 JUMP JUMPDEST PUSH2 0x22CE DUP2 DUP6 PUSH2 0x22AA JUMP JUMPDEST SWAP4 POP PUSH2 0x22DE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0x22E7 DUP2 PUSH2 0x18B6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2305 PUSH0 DUP4 ADD DUP8 PUSH2 0x19AC JUMP JUMPDEST PUSH2 0x2312 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x19AC JUMP JUMPDEST PUSH2 0x231F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1BD4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2331 DUP2 DUP5 PUSH2 0x22BA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x234A DUP2 PUSH2 0x1806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2365 JUMPI PUSH2 0x2364 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2372 DUP5 DUP3 DUP6 ADD PUSH2 0x233C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23BB PUSH0 DUP4 ADD DUP6 PUSH2 0x19AC JUMP JUMPDEST PUSH2 0x23C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BD4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xE1 PUSH1 0x49 0xEA PUSH22 0x3957BF3A4CB9998AC06101BD3D21ADB103184AD6B1B0 TLOAD GT DUP9 0xEA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "117:1219:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;532:404:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4143:578:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1065:269:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2185:118:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2677:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1561:300;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;532:404:11:-;623:7;642:15;;:17;;;;;;;;;:::i;:::-;;;;;;669;689:15;;669:35;;714:27;720:9;731;714:5;:27::i;:::-;773:9;752:7;:18;760:9;752:18;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;821:81;;;;;;;;859:10;821:81;;;;888:3;821:81;;;793:14;:25;808:9;793:25;;;;;;;;;;;:109;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;920:9;913:16;;;532:404;;;;;:::o;4143:578:1:-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;4787:132::-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1065:269:11:-;1129:7;1138:13;1171:16;1179:7;1171;:16::i;:::-;1163:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1222:27;1252:14;:23;1267:7;1252:23;;;;;;;;;;;1222:53;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1293:8;:19;;;1314:8;:12;;;1285:42;;;;;1065:269;;;:::o;2185:118:1:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2518:93::-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;3928:153::-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;762:146:7:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:1:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;14418:120:1:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;942:117:11:-;999:4;1050:1;1022:30;;:7;:16;1030:7;1022:16;;;;;;;;;;;;;;;;;;;;;:30;;;;1015:37;;942:117;;;:::o;15591:312:1:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;637:698:6:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;5707:115:1:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;12214:916:9:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;6376:272:1:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:117::-;4892:1;4889;4882:12;4906:117;5015:1;5012;5005:12;5029:180;5077:77;5074:1;5067:88;5174:4;5171:1;5164:15;5198:4;5195:1;5188:15;5215:281;5298:27;5320:4;5298:27;:::i;:::-;5290:6;5286:40;5428:6;5416:10;5413:22;5392:18;5380:10;5377:34;5374:62;5371:88;;;5439:18;;:::i;:::-;5371:88;5479:10;5475:2;5468:22;5258:238;5215:281;;:::o;5502:129::-;5536:6;5563:20;;:::i;:::-;5553:30;;5592:33;5620:4;5612:6;5592:33;:::i;:::-;5502:129;;;:::o;5637:308::-;5699:4;5789:18;5781:6;5778:30;5775:56;;;5811:18;;:::i;:::-;5775:56;5849:29;5871:6;5849:29;:::i;:::-;5841:37;;5933:4;5927;5923:15;5915:23;;5637:308;;;:::o;5951:148::-;6049:6;6044:3;6039;6026:30;6090:1;6081:6;6076:3;6072:16;6065:27;5951:148;;;:::o;6105:425::-;6183:5;6208:66;6224:49;6266:6;6224:49;:::i;:::-;6208:66;:::i;:::-;6199:75;;6297:6;6290:5;6283:21;6335:4;6328:5;6324:16;6373:3;6364:6;6359:3;6355:16;6352:25;6349:112;;;6380:79;;:::i;:::-;6349:112;6470:54;6517:6;6512:3;6507;6470:54;:::i;:::-;6189:341;6105:425;;;;;:::o;6550:340::-;6606:5;6655:3;6648:4;6640:6;6636:17;6632:27;6622:122;;6663:79;;:::i;:::-;6622:122;6780:6;6767:20;6805:79;6880:3;6872:6;6865:4;6857:6;6853:17;6805:79;:::i;:::-;6796:88;;6612:278;6550:340;;;;:::o;6896:799::-;6983:6;6991;6999;7048:2;7036:9;7027:7;7023:23;7019:32;7016:119;;;7054:79;;:::i;:::-;7016:119;7174:1;7199:53;7244:7;7235:6;7224:9;7220:22;7199:53;:::i;:::-;7189:63;;7145:117;7301:2;7327:53;7372:7;7363:6;7352:9;7348:22;7327:53;:::i;:::-;7317:63;;7272:118;7457:2;7446:9;7442:18;7429:32;7488:18;7480:6;7477:30;7474:117;;;7510:79;;:::i;:::-;7474:117;7615:63;7670:7;7661:6;7650:9;7646:22;7615:63;:::i;:::-;7605:73;;7400:288;6896:799;;;;;:::o;7701:118::-;7788:24;7806:5;7788:24;:::i;:::-;7783:3;7776:37;7701:118;;:::o;7825:222::-;7918:4;7956:2;7945:9;7941:18;7933:26;;7969:71;8037:1;8026:9;8022:17;8013:6;7969:71;:::i;:::-;7825:222;;;;:::o;8053:619::-;8130:6;8138;8146;8195:2;8183:9;8174:7;8170:23;8166:32;8163:119;;;8201:79;;:::i;:::-;8163:119;8321:1;8346:53;8391:7;8382:6;8371:9;8367:22;8346:53;:::i;:::-;8336:63;;8292:117;8448:2;8474:53;8519:7;8510:6;8499:9;8495:22;8474:53;:::i;:::-;8464:63;;8419:118;8576:2;8602:53;8647:7;8638:6;8627:9;8623:22;8602:53;:::i;:::-;8592:63;;8547:118;8053:619;;;;;:::o;8678:423::-;8819:4;8857:2;8846:9;8842:18;8834:26;;8870:71;8938:1;8927:9;8923:17;8914:6;8870:71;:::i;:::-;8988:9;8982:4;8978:20;8973:2;8962:9;8958:18;8951:48;9016:78;9089:4;9080:6;9016:78;:::i;:::-;9008:86;;8678:423;;;;;:::o;9107:329::-;9166:6;9215:2;9203:9;9194:7;9190:23;9186:32;9183:119;;;9221:79;;:::i;:::-;9183:119;9341:1;9366:53;9411:7;9402:6;9391:9;9387:22;9366:53;:::i;:::-;9356:63;;9312:117;9107:329;;;;:::o;9442:116::-;9512:21;9527:5;9512:21;:::i;:::-;9505:5;9502:32;9492:60;;9548:1;9545;9538:12;9492:60;9442:116;:::o;9564:133::-;9607:5;9645:6;9632:20;9623:29;;9661:30;9685:5;9661:30;:::i;:::-;9564:133;;;;:::o;9703:468::-;9768:6;9776;9825:2;9813:9;9804:7;9800:23;9796:32;9793:119;;;9831:79;;:::i;:::-;9793:119;9951:1;9976:53;10021:7;10012:6;10001:9;9997:22;9976:53;:::i;:::-;9966:63;;9922:117;10078:2;10104:50;10146:7;10137:6;10126:9;10122:22;10104:50;:::i;:::-;10094:60;;10049:115;9703:468;;;;;:::o;10177:307::-;10238:4;10328:18;10320:6;10317:30;10314:56;;;10350:18;;:::i;:::-;10314:56;10388:29;10410:6;10388:29;:::i;:::-;10380:37;;10472:4;10466;10462:15;10454:23;;10177:307;;;:::o;10490:423::-;10567:5;10592:65;10608:48;10649:6;10608:48;:::i;:::-;10592:65;:::i;:::-;10583:74;;10680:6;10673:5;10666:21;10718:4;10711:5;10707:16;10756:3;10747:6;10742:3;10738:16;10735:25;10732:112;;;10763:79;;:::i;:::-;10732:112;10853:54;10900:6;10895:3;10890;10853:54;:::i;:::-;10573:340;10490:423;;;;;:::o;10932:338::-;10987:5;11036:3;11029:4;11021:6;11017:17;11013:27;11003:122;;11044:79;;:::i;:::-;11003:122;11161:6;11148:20;11186:78;11260:3;11252:6;11245:4;11237:6;11233:17;11186:78;:::i;:::-;11177:87;;10993:277;10932:338;;;;:::o;11276:943::-;11371:6;11379;11387;11395;11444:3;11432:9;11423:7;11419:23;11415:33;11412:120;;;11451:79;;:::i;:::-;11412:120;11571:1;11596:53;11641:7;11632:6;11621:9;11617:22;11596:53;:::i;:::-;11586:63;;11542:117;11698:2;11724:53;11769:7;11760:6;11749:9;11745:22;11724:53;:::i;:::-;11714:63;;11669:118;11826:2;11852:53;11897:7;11888:6;11877:9;11873:22;11852:53;:::i;:::-;11842:63;;11797:118;11982:2;11971:9;11967:18;11954:32;12013:18;12005:6;12002:30;11999:117;;;12035:79;;:::i;:::-;11999:117;12140:62;12194:7;12185:6;12174:9;12170:22;12140:62;:::i;:::-;12130:72;;11925:287;11276:943;;;;;;;:::o;12225:474::-;12293:6;12301;12350:2;12338:9;12329:7;12325:23;12321:32;12318:119;;;12356:79;;:::i;:::-;12318:119;12476:1;12501:53;12546:7;12537:6;12526:9;12522:22;12501:53;:::i;:::-;12491:63;;12447:117;12603:2;12629:53;12674:7;12665:6;12654:9;12650:22;12629:53;:::i;:::-;12619:63;;12574:118;12225:474;;;;;:::o;12705:180::-;12753:77;12750:1;12743:88;12850:4;12847:1;12840:15;12874:4;12871:1;12864:15;12891:320;12935:6;12972:1;12966:4;12962:12;12952:22;;13019:1;13013:4;13009:12;13040:18;13030:81;;13096:4;13088:6;13084:17;13074:27;;13030:81;13158:2;13150:6;13147:14;13127:18;13124:38;13121:84;;13177:18;;:::i;:::-;13121:84;12942:269;12891:320;;;:::o;13217:180::-;13265:77;13262:1;13255:88;13362:4;13359:1;13352:15;13386:4;13383:1;13376:15;13403:233;13442:3;13465:24;13483:5;13465:24;:::i;:::-;13456:33;;13511:66;13504:5;13501:77;13498:103;;13581:18;;:::i;:::-;13498:103;13628:1;13621:5;13617:13;13610:20;;13403:233;;;:::o;13642:141::-;13691:4;13714:3;13706:11;;13737:3;13734:1;13727:14;13771:4;13768:1;13758:18;13750:26;;13642:141;;;:::o;13789:93::-;13826:6;13873:2;13868;13861:5;13857:14;13853:23;13843:33;;13789:93;;;:::o;13888:107::-;13932:8;13982:5;13976:4;13972:16;13951:37;;13888:107;;;;:::o;14001:393::-;14070:6;14120:1;14108:10;14104:18;14143:97;14173:66;14162:9;14143:97;:::i;:::-;14261:39;14291:8;14280:9;14261:39;:::i;:::-;14249:51;;14333:4;14329:9;14322:5;14318:21;14309:30;;14382:4;14372:8;14368:19;14361:5;14358:30;14348:40;;14077:317;;14001:393;;;;;:::o;14400:60::-;14428:3;14449:5;14442:12;;14400:60;;;:::o;14466:142::-;14516:9;14549:53;14567:34;14576:24;14594:5;14576:24;:::i;:::-;14567:34;:::i;:::-;14549:53;:::i;:::-;14536:66;;14466:142;;;:::o;14614:75::-;14657:3;14678:5;14671:12;;14614:75;;;:::o;14695:269::-;14805:39;14836:7;14805:39;:::i;:::-;14866:91;14915:41;14939:16;14915:41;:::i;:::-;14907:6;14900:4;14894:11;14866:91;:::i;:::-;14860:4;14853:105;14771:193;14695:269;;;:::o;14970:73::-;15015:3;14970:73;:::o;15049:189::-;15126:32;;:::i;:::-;15167:65;15225:6;15217;15211:4;15167:65;:::i;:::-;15102:136;15049:189;;:::o;15244:186::-;15304:120;15321:3;15314:5;15311:14;15304:120;;;15375:39;15412:1;15405:5;15375:39;:::i;:::-;15348:1;15341:5;15337:13;15328:22;;15304:120;;;15244:186;;:::o;15436:543::-;15537:2;15532:3;15529:11;15526:446;;;15571:38;15603:5;15571:38;:::i;:::-;15655:29;15673:10;15655:29;:::i;:::-;15645:8;15641:44;15838:2;15826:10;15823:18;15820:49;;;15859:8;15844:23;;15820:49;15882:80;15938:22;15956:3;15938:22;:::i;:::-;15928:8;15924:37;15911:11;15882:80;:::i;:::-;15541:431;;15526:446;15436:543;;;:::o;15985:117::-;16039:8;16089:5;16083:4;16079:16;16058:37;;15985:117;;;;:::o;16108:169::-;16152:6;16185:51;16233:1;16229:6;16221:5;16218:1;16214:13;16185:51;:::i;:::-;16181:56;16266:4;16260;16256:15;16246:25;;16159:118;16108:169;;;;:::o;16282:295::-;16358:4;16504:29;16529:3;16523:4;16504:29;:::i;:::-;16496:37;;16566:3;16563:1;16559:11;16553:4;16550:21;16542:29;;16282:295;;;;:::o;16582:1395::-;16699:37;16732:3;16699:37;:::i;:::-;16801:18;16793:6;16790:30;16787:56;;;16823:18;;:::i;:::-;16787:56;16867:38;16899:4;16893:11;16867:38;:::i;:::-;16952:67;17012:6;17004;16998:4;16952:67;:::i;:::-;17046:1;17070:4;17057:17;;17102:2;17094:6;17091:14;17119:1;17114:618;;;;17776:1;17793:6;17790:77;;;17842:9;17837:3;17833:19;17827:26;17818:35;;17790:77;17893:67;17953:6;17946:5;17893:67;:::i;:::-;17887:4;17880:81;17749:222;17084:887;;17114:618;17166:4;17162:9;17154:6;17150:22;17200:37;17232:4;17200:37;:::i;:::-;17259:1;17273:208;17287:7;17284:1;17281:14;17273:208;;;17366:9;17361:3;17357:19;17351:26;17343:6;17336:42;17417:1;17409:6;17405:14;17395:24;;17464:2;17453:9;17449:18;17436:31;;17310:4;17307:1;17303:12;17298:17;;17273:208;;;17509:6;17500:7;17497:19;17494:179;;;17567:9;17562:3;17558:19;17552:26;17610:48;17652:4;17644:6;17640:17;17629:9;17610:48;:::i;:::-;17602:6;17595:64;17517:156;17494:179;17719:1;17715;17707:6;17703:14;17699:22;17693:4;17686:36;17121:611;;;17084:887;;16674:1303;;;16582:1395;;:::o;17983:442::-;18132:4;18170:2;18159:9;18155:18;18147:26;;18183:71;18251:1;18240:9;18236:17;18227:6;18183:71;:::i;:::-;18264:72;18332:2;18321:9;18317:18;18308:6;18264:72;:::i;:::-;18346;18414:2;18403:9;18399:18;18390:6;18346:72;:::i;:::-;17983:442;;;;;;:::o;18431:170::-;18571:22;18567:1;18559:6;18555:14;18548:46;18431:170;:::o;18607:366::-;18749:3;18770:67;18834:2;18829:3;18770:67;:::i;:::-;18763:74;;18846:93;18935:3;18846:93;:::i;:::-;18964:2;18959:3;18955:12;18948:19;;18607:366;;;:::o;18979:419::-;19145:4;19183:2;19172:9;19168:18;19160:26;;19232:9;19226:4;19222:20;19218:1;19207:9;19203:17;19196:47;19260:131;19386:4;19260:131;:::i;:::-;19252:139;;18979:419;;;:::o;19404:148::-;19506:11;19543:3;19528:18;;19404:148;;;;:::o;19558:390::-;19664:3;19692:39;19725:5;19692:39;:::i;:::-;19747:89;19829:6;19824:3;19747:89;:::i;:::-;19740:96;;19845:65;19903:6;19898:3;19891:4;19884:5;19880:16;19845:65;:::i;:::-;19935:6;19930:3;19926:16;19919:23;;19668:280;19558:390;;;;:::o;19954:435::-;20134:3;20156:95;20247:3;20238:6;20156:95;:::i;:::-;20149:102;;20268:95;20359:3;20350:6;20268:95;:::i;:::-;20261:102;;20380:3;20373:10;;19954:435;;;;;:::o;20395:98::-;20446:6;20480:5;20474:12;20464:22;;20395:98;;;:::o;20499:168::-;20582:11;20616:6;20611:3;20604:19;20656:4;20651:3;20647:14;20632:29;;20499:168;;;;:::o;20673:373::-;20759:3;20787:38;20819:5;20787:38;:::i;:::-;20841:70;20904:6;20899:3;20841:70;:::i;:::-;20834:77;;20920:65;20978:6;20973:3;20966:4;20959:5;20955:16;20920:65;:::i;:::-;21010:29;21032:6;21010:29;:::i;:::-;21005:3;21001:39;20994:46;;20763:283;20673:373;;;;:::o;21052:640::-;21247:4;21285:3;21274:9;21270:19;21262:27;;21299:71;21367:1;21356:9;21352:17;21343:6;21299:71;:::i;:::-;21380:72;21448:2;21437:9;21433:18;21424:6;21380:72;:::i;:::-;21462;21530:2;21519:9;21515:18;21506:6;21462:72;:::i;:::-;21581:9;21575:4;21571:20;21566:2;21555:9;21551:18;21544:48;21609:76;21680:4;21671:6;21609:76;:::i;:::-;21601:84;;21052:640;;;;;;;:::o;21698:141::-;21754:5;21785:6;21779:13;21770:22;;21801:32;21827:5;21801:32;:::i;:::-;21698:141;;;;:::o;21845:349::-;21914:6;21963:2;21951:9;21942:7;21938:23;21934:32;21931:119;;;21969:79;;:::i;:::-;21931:119;22089:1;22114:63;22169:7;22160:6;22149:9;22145:22;22114:63;:::i;:::-;22104:73;;22060:127;21845:349;;;;:::o;22200:180::-;22248:77;22245:1;22238:88;22345:4;22342:1;22335:15;22369:4;22366:1;22359:15;22386:332;22507:4;22545:2;22534:9;22530:18;22522:26;;22558:71;22626:1;22615:9;22611:17;22602:6;22558:71;:::i;:::-;22639:72;22707:2;22696:9;22692:18;22683:6;22639:72;:::i;:::-;22386:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1844200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"getTokenMetadata(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintNFT(address,uint256,string)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_exists(uint256)": "2265"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 1336,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 117,
									"end": 1336,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 117,
									"end": 1336,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 379,
									"end": 526,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 379,
									"end": 526,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 379,
									"end": 526,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 379,
									"end": 526,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 379,
									"end": 526,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 379,
									"end": 526,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 379,
									"end": 526,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 379,
									"end": 526,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 440,
									"end": 444,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 446,
									"end": 452,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 482,
									"end": 483,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 479,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 464,
									"end": 483,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 464,
									"end": 483,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 464,
									"end": 483,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 464,
									"end": 483,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 379,
									"end": 526,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 117,
									"end": 1336,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 117,
									"end": 1336,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 12
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2669,
									"end": 2675,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2677,
									"end": 2683,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2726,
									"end": 2728,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2714,
									"end": 2723,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2705,
									"end": 2712,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2701,
									"end": 2724,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2697,
									"end": 2729,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 2732,
									"end": 2811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2873,
									"end": 2874,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2862,
									"end": 2871,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2852,
									"end": 2876,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2903,
									"end": 2921,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2895,
									"end": 2901,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2892,
									"end": 2922,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2925,
									"end": 3004,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 3096,
									"end": 3103,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3087,
									"end": 3093,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3076,
									"end": 3085,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3072,
									"end": 3094,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3030,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 3114,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3174,
									"end": 3176,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3163,
									"end": 3172,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3159,
									"end": 3177,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3153,
									"end": 3178,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3205,
									"end": 3223,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3194,
									"end": 3224,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 3227,
									"end": 3306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3398,
									"end": 3405,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3389,
									"end": 3395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3378,
									"end": 3387,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3374,
									"end": 3396,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3332,
									"end": 3406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3124,
									"end": 3416,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 3423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3481,
									"end": 3487,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3515,
									"end": 3520,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3509,
									"end": 3521,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3582,
									"end": 3659,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3660,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3679,
									"end": 3683,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 3676,
									"end": 3677,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3669,
									"end": 3684,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3700,
									"end": 3701,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3693,
									"end": 3708,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3764,
									"end": 3770,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3801,
									"end": 3802,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3795,
									"end": 3799,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3842,
									"end": 3846,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3838,
									"end": 3850,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3869,
									"end": 3887,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 3929,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3913,
									"end": 3930,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3987,
									"end": 3989,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3979,
									"end": 3985,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3976,
									"end": 3990,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3956,
									"end": 3974,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3953,
									"end": 3991,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 4006,
									"end": 4024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3771,
									"end": 4040,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3720,
									"end": 4040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4095,
									"end": 4099,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4118,
									"end": 4121,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4141,
									"end": 4144,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4138,
									"end": 4139,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4131,
									"end": 4145,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4175,
									"end": 4179,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4172,
									"end": 4173,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4162,
									"end": 4180,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4046,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4230,
									"end": 4236,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4277,
									"end": 4279,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4274,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4265,
									"end": 4270,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4261,
									"end": 4275,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4257,
									"end": 4280,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4193,
									"end": 4286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4336,
									"end": 4344,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4386,
									"end": 4391,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4376,
									"end": 4392,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4292,
									"end": 4399,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4474,
									"end": 4480,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 4512,
									"end": 4522,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4508,
									"end": 4526,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 4577,
									"end": 4643,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4566,
									"end": 4575,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4547,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "tag",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 4695,
									"end": 4703,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4684,
									"end": 4693,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4665,
									"end": 4704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4737,
									"end": 4741,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4733,
									"end": 4742,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4726,
									"end": 4731,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4722,
									"end": 4743,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4786,
									"end": 4790,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4776,
									"end": 4784,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4772,
									"end": 4791,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4765,
									"end": 4770,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4762,
									"end": 4792,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4841,
									"end": 4848,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4870,
									"end": 4875,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4915,
									"end": 4918,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4936,
									"end": 4941,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4947,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 5081,
									"end": 5086,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 5063,
									"end": 5087,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 5054,
									"end": 5088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "tag",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 5036,
									"end": 5089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4953,
									"end": 5095,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5147,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5165,
									"end": 5170,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5101,
									"end": 5176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 5323,
									"end": 5330,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5292,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 5426,
									"end": 5442,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5402,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "tag",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5394,
									"end": 5400,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5387,
									"end": 5391,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5381,
									"end": 5392,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 5353,
									"end": 5444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "tag",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5347,
									"end": 5351,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5340,
									"end": 5445,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5258,
									"end": 5451,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5182,
									"end": 5451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5502,
									"end": 5505,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5457,
									"end": 5530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 5613,
									"end": 5645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 5712,
									"end": 5718,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5704,
									"end": 5710,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5698,
									"end": 5702,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5654,
									"end": 5719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5589,
									"end": 5725,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5536,
									"end": 5725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5808,
									"end": 5811,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5801,
									"end": 5806,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5798,
									"end": 5812,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 5899,
									"end": 5900,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5892,
									"end": 5897,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 5862,
									"end": 5901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5835,
									"end": 5836,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5828,
									"end": 5833,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5824,
									"end": 5837,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5731,
									"end": 5917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6024,
									"end": 6026,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6019,
									"end": 6022,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6016,
									"end": 6027,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 6090,
									"end": 6095,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 6058,
									"end": 6096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 6160,
									"end": 6170,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 6142,
									"end": 6171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6132,
									"end": 6140,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6128,
									"end": 6172,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6325,
									"end": 6327,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6313,
									"end": 6323,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6310,
									"end": 6328,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6346,
									"end": 6354,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 6443,
									"end": 6446,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 6425,
									"end": 6447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6415,
									"end": 6423,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6411,
									"end": 6448,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 6369,
									"end": 6449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5923,
									"end": 6466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6526,
									"end": 6534,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6570,
									"end": 6574,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6566,
									"end": 6582,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6472,
									"end": 6589,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6639,
									"end": 6645,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6720,
									"end": 6721,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6722,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6708,
									"end": 6713,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6705,
									"end": 6706,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 6701,
									"end": 6714,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 6672,
									"end": 6723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6668,
									"end": 6724,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6753,
									"end": 6757,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6747,
									"end": 6751,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6743,
									"end": 6758,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6646,
									"end": 6764,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6595,
									"end": 6764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6845,
									"end": 6849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 7016,
									"end": 7019,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7010,
									"end": 7014,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 6991,
									"end": 7020,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "tag",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7053,
									"end": 7056,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7050,
									"end": 7051,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 7046,
									"end": 7057,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7040,
									"end": 7044,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7037,
									"end": 7058,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6769,
									"end": 7064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 7219,
									"end": 7222,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 7186,
									"end": 7223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "tag",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7288,
									"end": 7306,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7280,
									"end": 7286,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7277,
									"end": 7307,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 7310,
									"end": 7328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "tag",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "tag",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7380,
									"end": 7391,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 7354,
									"end": 7392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "tag",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 7499,
									"end": 7505,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7491,
									"end": 7497,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7485,
									"end": 7489,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 7439,
									"end": 7506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "tag",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7533,
									"end": 7534,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7557,
									"end": 7561,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7589,
									"end": 7591,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7581,
									"end": 7587,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7578,
									"end": 7592,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7606,
									"end": 7607,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8263,
									"end": 8264,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8280,
									"end": 8286,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8329,
									"end": 8338,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8324,
									"end": 8327,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 8320,
									"end": 8339,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8314,
									"end": 8340,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "tag",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 8440,
									"end": 8446,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8433,
									"end": 8438,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 8380,
									"end": 8447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8374,
									"end": 8378,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8367,
									"end": 8448,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8236,
									"end": 8458,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7649,
									"end": 7658,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7641,
									"end": 7647,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7637,
									"end": 7659,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 7719,
									"end": 7723,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 7687,
									"end": 7724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "tag",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7746,
									"end": 7747,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7774,
									"end": 7781,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7771,
									"end": 7772,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7768,
									"end": 7782,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7853,
									"end": 7862,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7848,
									"end": 7851,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 7844,
									"end": 7863,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7838,
									"end": 7864,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 7830,
									"end": 7836,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7823,
									"end": 7865,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 7896,
									"end": 7902,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7892,
									"end": 7906,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7951,
									"end": 7953,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7940,
									"end": 7949,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7936,
									"end": 7954,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7797,
									"end": 7801,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7794,
									"end": 7795,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7996,
									"end": 8002,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 7987,
									"end": 7994,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7984,
									"end": 8003,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8054,
									"end": 8063,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8049,
									"end": 8052,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8045,
									"end": 8064,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8039,
									"end": 8065,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 8139,
									"end": 8143,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8131,
									"end": 8137,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8127,
									"end": 8144,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8116,
									"end": 8125,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 8097,
									"end": 8145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "tag",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8089,
									"end": 8095,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8082,
									"end": 8146,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8004,
									"end": 8160,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "tag",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8206,
									"end": 8207,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8202,
									"end": 8203,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 8194,
									"end": 8200,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8190,
									"end": 8204,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8186,
									"end": 8208,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8180,
									"end": 8184,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8173,
									"end": 8209,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7069,
									"end": 8464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 117,
									"end": 1336,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 117,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 117,
									"end": 1336,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1336,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 117,
									"end": 1336,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1336,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1336,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 117,
									"end": 1336,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1336,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122086e16049ea753957bf3a4cb9998ac06101bd3d21adb103184ad6b1b05c1188ea64736f6c634300081a0033",
									".code": [
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "60316801"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "A22CB465"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "A22CB465"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "B88D4FDE"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "C87B56DD"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "E985E9C5"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "60316801"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "6352211E"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "1E576912"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "42842E0E"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "81812FC"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 1336,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 936,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 532,
											"end": 936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 532,
											"end": 936,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 532,
											"end": 936,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 532,
											"end": 936,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 532,
											"end": 936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 532,
											"end": 936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 532,
											"end": 936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 532,
											"end": 936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 532,
											"end": 936,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 532,
											"end": 936,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 532,
											"end": 936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 532,
											"end": 936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 532,
											"end": 936,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1065,
											"end": 1334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1065,
											"end": 1334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 1065,
											"end": 1334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 936,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 532,
											"end": 936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 623,
											"end": 630,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 657,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 642,
											"end": 657,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 659,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 642,
											"end": 659,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 642,
											"end": 659,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 642,
											"end": 659,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 642,
											"end": 659,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 642,
											"end": 659,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 642,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 642,
											"end": 659,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 642,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 642,
											"end": 659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 642,
											"end": 659,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 642,
											"end": 659,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 642,
											"end": 659,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 642,
											"end": 659,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 642,
											"end": 659,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 642,
											"end": 659,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 642,
											"end": 659,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 669,
											"end": 686,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 704,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 689,
											"end": 704,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 669,
											"end": 704,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 669,
											"end": 704,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 720,
											"end": 729,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 731,
											"end": 740,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 714,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 714,
											"end": 741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 741,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 714,
											"end": 741,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 773,
											"end": 782,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 752,
											"end": 759,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 752,
											"end": 770,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 769,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 752,
											"end": 770,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 752,
											"end": 770,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 752,
											"end": 770,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 770,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 752,
											"end": 770,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 752,
											"end": 770,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 752,
											"end": 770,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 752,
											"end": 770,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 770,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 752,
											"end": 770,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 770,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 752,
											"end": 770,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 782,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 752,
											"end": 782,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 752,
											"end": 782,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 752,
											"end": 782,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 752,
											"end": 782,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 752,
											"end": 782,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 782,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 752,
											"end": 782,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 752,
											"end": 782,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 752,
											"end": 782,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 752,
											"end": 782,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 752,
											"end": 782,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 782,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 752,
											"end": 782,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 752,
											"end": 782,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 752,
											"end": 782,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 752,
											"end": 782,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 752,
											"end": 782,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 821,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 821,
											"end": 902,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 821,
											"end": 902,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 821,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 821,
											"end": 902,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 821,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 821,
											"end": 902,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 821,
											"end": 902,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 859,
											"end": 869,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 821,
											"end": 902,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 821,
											"end": 902,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 821,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 821,
											"end": 902,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 888,
											"end": 891,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 821,
											"end": 902,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 821,
											"end": 902,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 821,
											"end": 902,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 793,
											"end": 807,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 793,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 817,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 793,
											"end": 818,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 793,
											"end": 818,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 793,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 818,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 793,
											"end": 818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 793,
											"end": 818,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 793,
											"end": 818,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 793,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 818,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 793,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 818,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 902,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 902,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 902,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 793,
											"end": 902,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 793,
											"end": 902,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 793,
											"end": 902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 793,
											"end": 902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 793,
											"end": 902,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 913,
											"end": 929,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 913,
											"end": 929,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 913,
											"end": 929,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 532,
											"end": 936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1151,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1171,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1171,
											"end": 1187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1171,
											"end": 1187,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1171,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1163,
											"end": 1212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1163,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1249,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1266,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1252,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1267,
											"end": 1274,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1275,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1275,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1252,
											"end": 1275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1275,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1275,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1252,
											"end": 1275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1275,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1222,
											"end": 1275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1222,
											"end": 1275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1301,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1312,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1312,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1312,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1322,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1326,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1326,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1326,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1285,
											"end": 1327,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1285,
											"end": 1327,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1285,
											"end": 1327,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1285,
											"end": 1327,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1285,
											"end": 1327,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1065,
											"end": 1334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 942,
											"end": 1059,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 942,
											"end": 1059,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1003,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1052,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1022,
											"end": 1052,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1029,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1037,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1052,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1022,
											"end": 1052,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1052,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1052,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1052,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 942,
											"end": 1059,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 942,
											"end": 1059,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 942,
											"end": 1059,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 942,
											"end": 1059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 6,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 9,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 9,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 4900,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 4783,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4892,
											"end": 4893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4889,
											"end": 4890,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4882,
											"end": 4894,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4906,
											"end": 5023,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 4906,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5015,
											"end": 5016,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5012,
											"end": 5013,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5017,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5029,
											"end": 5209,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 5029,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5077,
											"end": 5154,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5074,
											"end": 5075,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5067,
											"end": 5155,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5174,
											"end": 5178,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 5171,
											"end": 5172,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5164,
											"end": 5179,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5195,
											"end": 5196,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5188,
											"end": 5203,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5215,
											"end": 5496,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 5215,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5298,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 5320,
											"end": 5324,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5298,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 5298,
											"end": 5325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5298,
											"end": 5325,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 5298,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5290,
											"end": 5296,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5428,
											"end": 5434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5416,
											"end": 5426,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5413,
											"end": 5435,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5392,
											"end": 5410,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5390,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5377,
											"end": 5411,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5374,
											"end": 5436,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5371,
											"end": 5459,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5371,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 5371,
											"end": 5459,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 5439,
											"end": 5457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5371,
											"end": 5459,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 5371,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5479,
											"end": 5489,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5258,
											"end": 5496,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5215,
											"end": 5496,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5215,
											"end": 5496,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5215,
											"end": 5496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5502,
											"end": 5631,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 5502,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5536,
											"end": 5542,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5563,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 5563,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 5563,
											"end": 5583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5583,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 5563,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5553,
											"end": 5583,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5553,
											"end": 5583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5592,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 5620,
											"end": 5624,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5612,
											"end": 5618,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5592,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 5592,
											"end": 5625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5592,
											"end": 5625,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 5592,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5502,
											"end": 5631,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5502,
											"end": 5631,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5502,
											"end": 5631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5502,
											"end": 5631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5637,
											"end": 5945,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 5637,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5703,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5807,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5781,
											"end": 5787,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5778,
											"end": 5808,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5775,
											"end": 5831,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5775,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 5775,
											"end": 5831,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5811,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 5811,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 5811,
											"end": 5829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5811,
											"end": 5829,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 5811,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5775,
											"end": 5831,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 5775,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5849,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 5871,
											"end": 5877,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5849,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 5849,
											"end": 5878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5849,
											"end": 5878,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 5849,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5841,
											"end": 5878,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5841,
											"end": 5878,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 5931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5923,
											"end": 5938,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5915,
											"end": 5938,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5915,
											"end": 5938,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5637,
											"end": 5945,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5637,
											"end": 5945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5637,
											"end": 5945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5637,
											"end": 5945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5951,
											"end": 6099,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 5951,
											"end": 6099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6049,
											"end": 6055,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6044,
											"end": 6047,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6039,
											"end": 6042,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6026,
											"end": 6056,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6087,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6076,
											"end": 6079,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6072,
											"end": 6088,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6065,
											"end": 6092,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5951,
											"end": 6099,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5951,
											"end": 6099,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5951,
											"end": 6099,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5951,
											"end": 6099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6105,
											"end": 6530,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 6105,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6188,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 6224,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 6266,
											"end": 6272,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6224,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 6224,
											"end": 6273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6224,
											"end": 6273,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 6224,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6208,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 6208,
											"end": 6274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6208,
											"end": 6274,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 6208,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6274,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6297,
											"end": 6303,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6290,
											"end": 6295,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6283,
											"end": 6304,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6335,
											"end": 6339,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6328,
											"end": 6333,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6340,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6376,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6370,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6359,
											"end": 6362,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6355,
											"end": 6371,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6352,
											"end": 6377,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6349,
											"end": 6461,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6349,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 6349,
											"end": 6461,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6380,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 6380,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 6380,
											"end": 6459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6380,
											"end": 6459,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 6380,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6349,
											"end": 6461,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 6349,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6470,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 6517,
											"end": 6523,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6512,
											"end": 6515,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6507,
											"end": 6510,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6470,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 6470,
											"end": 6524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6470,
											"end": 6524,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 6470,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6189,
											"end": 6530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6105,
											"end": 6530,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6105,
											"end": 6530,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6105,
											"end": 6530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6105,
											"end": 6530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6105,
											"end": 6530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6105,
											"end": 6530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6890,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 6550,
											"end": 6890,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6606,
											"end": 6611,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6655,
											"end": 6658,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6648,
											"end": 6652,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6640,
											"end": 6646,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6636,
											"end": 6653,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6632,
											"end": 6659,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6663,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 6663,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 6663,
											"end": 6742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6663,
											"end": 6742,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 6663,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 6787,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 6880,
											"end": 6883,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6872,
											"end": 6878,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6865,
											"end": 6869,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6857,
											"end": 6863,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6853,
											"end": 6870,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 6805,
											"end": 6884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 6884,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 6805,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6796,
											"end": 6884,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6796,
											"end": 6884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6612,
											"end": 6890,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6890,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6890,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6890,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6890,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6896,
											"end": 7695,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 6896,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6983,
											"end": 6989,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6991,
											"end": 6997,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6999,
											"end": 7005,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7048,
											"end": 7050,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7036,
											"end": 7045,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7027,
											"end": 7034,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7023,
											"end": 7046,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7019,
											"end": 7051,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7016,
											"end": 7135,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7016,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 7016,
											"end": 7135,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7054,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 7054,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 7054,
											"end": 7133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7054,
											"end": 7133,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 7054,
											"end": 7133,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7016,
											"end": 7135,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 7016,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7174,
											"end": 7175,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7199,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 7244,
											"end": 7251,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7235,
											"end": 7241,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7224,
											"end": 7233,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7220,
											"end": 7242,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7199,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 7199,
											"end": 7252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7199,
											"end": 7252,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 7199,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7189,
											"end": 7252,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7189,
											"end": 7252,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7145,
											"end": 7262,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7301,
											"end": 7303,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7327,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 7372,
											"end": 7379,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7369,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7361,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7348,
											"end": 7370,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7327,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 7327,
											"end": 7380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7327,
											"end": 7380,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 7327,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7317,
											"end": 7380,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7317,
											"end": 7380,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7272,
											"end": 7390,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7457,
											"end": 7459,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7446,
											"end": 7455,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7429,
											"end": 7461,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7488,
											"end": 7506,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7480,
											"end": 7486,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7477,
											"end": 7507,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7474,
											"end": 7591,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7474,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 7474,
											"end": 7591,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7510,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 7510,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 7510,
											"end": 7589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7510,
											"end": 7589,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 7510,
											"end": 7589,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7474,
											"end": 7591,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 7474,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7615,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 7670,
											"end": 7677,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7661,
											"end": 7667,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7650,
											"end": 7659,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7646,
											"end": 7668,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7615,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 7615,
											"end": 7678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7615,
											"end": 7678,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 7615,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7605,
											"end": 7678,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7605,
											"end": 7678,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7400,
											"end": 7688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6896,
											"end": 7695,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6896,
											"end": 7695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6896,
											"end": 7695,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6896,
											"end": 7695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6896,
											"end": 7695,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6896,
											"end": 7695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7701,
											"end": 7819,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 7701,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7788,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 7806,
											"end": 7811,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7788,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 7788,
											"end": 7812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7788,
											"end": 7812,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 7788,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7783,
											"end": 7786,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7776,
											"end": 7813,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7701,
											"end": 7819,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7701,
											"end": 7819,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7701,
											"end": 7819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7825,
											"end": 8047,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 7825,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7918,
											"end": 7922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7956,
											"end": 7958,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7945,
											"end": 7954,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7933,
											"end": 7959,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7933,
											"end": 7959,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7969,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 8037,
											"end": 8038,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8026,
											"end": 8035,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8022,
											"end": 8039,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8013,
											"end": 8019,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7969,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 7969,
											"end": 8040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7969,
											"end": 8040,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 7969,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7825,
											"end": 8047,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7825,
											"end": 8047,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7825,
											"end": 8047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7825,
											"end": 8047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7825,
											"end": 8047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8053,
											"end": 8672,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 8053,
											"end": 8672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8130,
											"end": 8136,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8144,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8146,
											"end": 8152,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8195,
											"end": 8197,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8183,
											"end": 8192,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8174,
											"end": 8181,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8170,
											"end": 8193,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8166,
											"end": 8198,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8163,
											"end": 8282,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8163,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 8163,
											"end": 8282,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8201,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 8201,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 8201,
											"end": 8280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8201,
											"end": 8280,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 8201,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8163,
											"end": 8282,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 8163,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8321,
											"end": 8322,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8346,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 8391,
											"end": 8398,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8382,
											"end": 8388,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8371,
											"end": 8380,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8367,
											"end": 8389,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8346,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 8346,
											"end": 8399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8346,
											"end": 8399,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 8346,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8336,
											"end": 8399,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8336,
											"end": 8399,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8292,
											"end": 8409,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8448,
											"end": 8450,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8474,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 8519,
											"end": 8526,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8510,
											"end": 8516,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8508,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8495,
											"end": 8517,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8474,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 8474,
											"end": 8527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8474,
											"end": 8527,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 8474,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8464,
											"end": 8527,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8464,
											"end": 8527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8419,
											"end": 8537,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8576,
											"end": 8578,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8602,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 8647,
											"end": 8654,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8638,
											"end": 8644,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8636,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8623,
											"end": 8645,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8602,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 8602,
											"end": 8655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8602,
											"end": 8655,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 8602,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8592,
											"end": 8655,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8592,
											"end": 8655,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8547,
											"end": 8665,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8053,
											"end": 8672,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8053,
											"end": 8672,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8053,
											"end": 8672,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8053,
											"end": 8672,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8053,
											"end": 8672,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8053,
											"end": 8672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8678,
											"end": 9101,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 8678,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8819,
											"end": 8823,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8857,
											"end": 8859,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8846,
											"end": 8855,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8842,
											"end": 8860,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8834,
											"end": 8860,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8834,
											"end": 8860,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8870,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 8938,
											"end": 8939,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8927,
											"end": 8936,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8940,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 8920,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8870,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 8870,
											"end": 8941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8870,
											"end": 8941,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 8870,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8988,
											"end": 8997,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8982,
											"end": 8986,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8978,
											"end": 8998,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8973,
											"end": 8975,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8962,
											"end": 8971,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8958,
											"end": 8976,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8951,
											"end": 8999,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 9089,
											"end": 9093,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9080,
											"end": 9086,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 9016,
											"end": 9094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9094,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 9016,
											"end": 9094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9008,
											"end": 9094,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9008,
											"end": 9094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8678,
											"end": 9101,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8678,
											"end": 9101,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8678,
											"end": 9101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8678,
											"end": 9101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8678,
											"end": 9101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8678,
											"end": 9101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9107,
											"end": 9436,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 9107,
											"end": 9436,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9215,
											"end": 9217,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9203,
											"end": 9212,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9194,
											"end": 9201,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9190,
											"end": 9213,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9186,
											"end": 9218,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9302,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 9183,
											"end": 9302,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9221,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 9221,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 9221,
											"end": 9300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9221,
											"end": 9300,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 9221,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9302,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 9183,
											"end": 9302,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9341,
											"end": 9342,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9366,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 9411,
											"end": 9418,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9391,
											"end": 9400,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9387,
											"end": 9409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9366,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 9366,
											"end": 9419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9366,
											"end": 9419,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 9366,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9356,
											"end": 9419,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9356,
											"end": 9419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 9429,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9107,
											"end": 9436,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9107,
											"end": 9436,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9107,
											"end": 9436,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9107,
											"end": 9436,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9107,
											"end": 9436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9442,
											"end": 9558,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 9442,
											"end": 9558,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9512,
											"end": 9533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 9527,
											"end": 9532,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9512,
											"end": 9533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 9512,
											"end": 9533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9512,
											"end": 9533,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 9512,
											"end": 9533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9505,
											"end": 9510,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9502,
											"end": 9534,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 9492,
											"end": 9552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 9492,
											"end": 9552,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9548,
											"end": 9549,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9545,
											"end": 9546,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9538,
											"end": 9550,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9492,
											"end": 9552,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 9492,
											"end": 9552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9442,
											"end": 9558,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9442,
											"end": 9558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9564,
											"end": 9697,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 9564,
											"end": 9697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9607,
											"end": 9612,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9645,
											"end": 9651,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9632,
											"end": 9652,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9623,
											"end": 9652,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9623,
											"end": 9652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9661,
											"end": 9691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 9685,
											"end": 9690,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9661,
											"end": 9691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 9661,
											"end": 9691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9661,
											"end": 9691,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 9661,
											"end": 9691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9564,
											"end": 9697,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9564,
											"end": 9697,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9564,
											"end": 9697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9564,
											"end": 9697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9564,
											"end": 9697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9703,
											"end": 10171,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 9703,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9768,
											"end": 9774,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9776,
											"end": 9782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9825,
											"end": 9827,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9813,
											"end": 9822,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9804,
											"end": 9811,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9800,
											"end": 9823,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9796,
											"end": 9828,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9793,
											"end": 9912,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9793,
											"end": 9912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 9793,
											"end": 9912,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9831,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 9831,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 9831,
											"end": 9910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9831,
											"end": 9910,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 9831,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9793,
											"end": 9912,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 9793,
											"end": 9912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9951,
											"end": 9952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9976,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 10021,
											"end": 10028,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10012,
											"end": 10018,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10001,
											"end": 10010,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9997,
											"end": 10019,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 9976,
											"end": 10029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 10029,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 9976,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9966,
											"end": 10029,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9966,
											"end": 10029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9922,
											"end": 10039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10078,
											"end": 10080,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10104,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 10146,
											"end": 10153,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10137,
											"end": 10143,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10126,
											"end": 10135,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10122,
											"end": 10144,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10104,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 10104,
											"end": 10154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10104,
											"end": 10154,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 10104,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10094,
											"end": 10154,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10094,
											"end": 10154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10049,
											"end": 10164,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9703,
											"end": 10171,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9703,
											"end": 10171,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9703,
											"end": 10171,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9703,
											"end": 10171,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9703,
											"end": 10171,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9703,
											"end": 10171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10177,
											"end": 10484,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 10177,
											"end": 10484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10238,
											"end": 10242,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10328,
											"end": 10346,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10320,
											"end": 10326,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10317,
											"end": 10347,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10314,
											"end": 10370,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10314,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 10314,
											"end": 10370,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 10350,
											"end": 10368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10314,
											"end": 10370,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 10314,
											"end": 10370,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10388,
											"end": 10417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 10410,
											"end": 10416,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10388,
											"end": 10417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 10388,
											"end": 10417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10388,
											"end": 10417,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 10388,
											"end": 10417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10380,
											"end": 10417,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10380,
											"end": 10417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10472,
											"end": 10476,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10466,
											"end": 10470,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10462,
											"end": 10477,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10454,
											"end": 10477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10454,
											"end": 10477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10177,
											"end": 10484,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10177,
											"end": 10484,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10177,
											"end": 10484,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10177,
											"end": 10484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10490,
											"end": 10913,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 10490,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10567,
											"end": 10572,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10592,
											"end": 10657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 10608,
											"end": 10656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 10649,
											"end": 10655,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10608,
											"end": 10656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 10608,
											"end": 10656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10608,
											"end": 10656,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 10608,
											"end": 10656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10592,
											"end": 10657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 10592,
											"end": 10657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10592,
											"end": 10657,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 10592,
											"end": 10657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10583,
											"end": 10657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10583,
											"end": 10657,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10680,
											"end": 10686,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10673,
											"end": 10678,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10666,
											"end": 10687,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10722,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10711,
											"end": 10716,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10707,
											"end": 10723,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10756,
											"end": 10759,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10747,
											"end": 10753,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10742,
											"end": 10745,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10738,
											"end": 10754,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10735,
											"end": 10760,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10732,
											"end": 10844,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10732,
											"end": 10844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 10732,
											"end": 10844,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10763,
											"end": 10842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 10763,
											"end": 10842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 10763,
											"end": 10842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10763,
											"end": 10842,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 10763,
											"end": 10842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10732,
											"end": 10844,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 10732,
											"end": 10844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10853,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 10900,
											"end": 10906,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10895,
											"end": 10898,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10890,
											"end": 10893,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10853,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 10853,
											"end": 10907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10853,
											"end": 10907,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 10853,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10573,
											"end": 10913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10490,
											"end": 10913,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10490,
											"end": 10913,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10490,
											"end": 10913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10490,
											"end": 10913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10490,
											"end": 10913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10490,
											"end": 10913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10932,
											"end": 11270,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 10932,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10987,
											"end": 10992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11036,
											"end": 11039,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11029,
											"end": 11033,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 11021,
											"end": 11027,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11017,
											"end": 11034,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11003,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 11003,
											"end": 11125,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11044,
											"end": 11123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 11044,
											"end": 11123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 11044,
											"end": 11123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11044,
											"end": 11123,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 11044,
											"end": 11123,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11003,
											"end": 11125,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 11003,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11161,
											"end": 11167,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11148,
											"end": 11168,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 11186,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 11260,
											"end": 11263,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11252,
											"end": 11258,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11245,
											"end": 11249,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11237,
											"end": 11243,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11233,
											"end": 11250,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11186,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 11186,
											"end": 11264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11186,
											"end": 11264,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 11186,
											"end": 11264,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11177,
											"end": 11264,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11177,
											"end": 11264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10993,
											"end": 11270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10932,
											"end": 11270,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10932,
											"end": 11270,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10932,
											"end": 11270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10932,
											"end": 11270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10932,
											"end": 11270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11276,
											"end": 12219,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 11276,
											"end": 12219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11371,
											"end": 11377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11379,
											"end": 11385,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11387,
											"end": 11393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11395,
											"end": 11401,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11444,
											"end": 11447,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 11432,
											"end": 11441,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 11419,
											"end": 11442,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11415,
											"end": 11448,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11412,
											"end": 11532,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11412,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 11412,
											"end": 11532,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11451,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 11451,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 11451,
											"end": 11530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11451,
											"end": 11530,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 11451,
											"end": 11530,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11412,
											"end": 11532,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 11412,
											"end": 11532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11571,
											"end": 11572,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11596,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 11641,
											"end": 11648,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 11632,
											"end": 11638,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11621,
											"end": 11630,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 11617,
											"end": 11639,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11596,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 11596,
											"end": 11649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11596,
											"end": 11649,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 11596,
											"end": 11649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11586,
											"end": 11649,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 11586,
											"end": 11649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11542,
											"end": 11659,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11698,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11724,
											"end": 11777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 11769,
											"end": 11776,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 11760,
											"end": 11766,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11749,
											"end": 11758,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 11745,
											"end": 11767,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11724,
											"end": 11777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 11724,
											"end": 11777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11724,
											"end": 11777,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 11724,
											"end": 11777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11714,
											"end": 11777,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11714,
											"end": 11777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11669,
											"end": 11787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11828,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11852,
											"end": 11905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 11897,
											"end": 11904,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 11888,
											"end": 11894,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11877,
											"end": 11886,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 11873,
											"end": 11895,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11852,
											"end": 11905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 11852,
											"end": 11905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11852,
											"end": 11905,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 11852,
											"end": 11905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11842,
											"end": 11905,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11842,
											"end": 11905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11797,
											"end": 11915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11982,
											"end": 11984,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 11971,
											"end": 11980,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11967,
											"end": 11985,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11954,
											"end": 11986,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 12013,
											"end": 12031,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12005,
											"end": 12011,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12002,
											"end": 12032,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12116,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 11999,
											"end": 12116,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12035,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 12035,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 12035,
											"end": 12114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12035,
											"end": 12114,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 12035,
											"end": 12114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11999,
											"end": 12116,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 11999,
											"end": 12116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12140,
											"end": 12202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 12194,
											"end": 12201,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 12185,
											"end": 12191,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12174,
											"end": 12183,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 12170,
											"end": 12192,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12140,
											"end": 12202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 12140,
											"end": 12202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12140,
											"end": 12202,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 12140,
											"end": 12202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12130,
											"end": 12202,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12130,
											"end": 12202,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11925,
											"end": 12212,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11276,
											"end": 12219,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11276,
											"end": 12219,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 11276,
											"end": 12219,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11276,
											"end": 12219,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 11276,
											"end": 12219,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11276,
											"end": 12219,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11276,
											"end": 12219,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11276,
											"end": 12219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12225,
											"end": 12699,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 12225,
											"end": 12699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12293,
											"end": 12299,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12301,
											"end": 12307,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12350,
											"end": 12352,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12338,
											"end": 12347,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12329,
											"end": 12336,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12325,
											"end": 12348,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12321,
											"end": 12353,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12437,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 12318,
											"end": 12437,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12356,
											"end": 12435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 12356,
											"end": 12435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 12356,
											"end": 12435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12356,
											"end": 12435,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 12356,
											"end": 12435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12437,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 12318,
											"end": 12437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12476,
											"end": 12477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12501,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 12546,
											"end": 12553,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12537,
											"end": 12543,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12526,
											"end": 12535,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12522,
											"end": 12544,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12501,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 12501,
											"end": 12554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12501,
											"end": 12554,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 12501,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12491,
											"end": 12554,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12491,
											"end": 12554,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12447,
											"end": 12564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 12605,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12629,
											"end": 12682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 12674,
											"end": 12681,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12665,
											"end": 12671,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12654,
											"end": 12663,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12650,
											"end": 12672,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12629,
											"end": 12682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 12629,
											"end": 12682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12629,
											"end": 12682,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 12629,
											"end": 12682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12619,
											"end": 12682,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12619,
											"end": 12682,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12574,
											"end": 12692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12225,
											"end": 12699,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12225,
											"end": 12699,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12225,
											"end": 12699,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12225,
											"end": 12699,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12225,
											"end": 12699,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12225,
											"end": 12699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12705,
											"end": 12885,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 12705,
											"end": 12885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12753,
											"end": 12830,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12750,
											"end": 12751,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12743,
											"end": 12831,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12850,
											"end": 12854,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 12847,
											"end": 12848,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12840,
											"end": 12855,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12874,
											"end": 12878,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12871,
											"end": 12872,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12864,
											"end": 12879,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12891,
											"end": 13211,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 12891,
											"end": 13211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12935,
											"end": 12941,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12972,
											"end": 12973,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12966,
											"end": 12970,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12962,
											"end": 12974,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12974,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12974,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13019,
											"end": 13020,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13013,
											"end": 13017,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13009,
											"end": 13021,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13040,
											"end": 13058,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13030,
											"end": 13111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 13030,
											"end": 13111,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13096,
											"end": 13100,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 13088,
											"end": 13094,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13084,
											"end": 13101,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13074,
											"end": 13101,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13074,
											"end": 13101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13030,
											"end": 13111,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 13030,
											"end": 13111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13158,
											"end": 13160,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13150,
											"end": 13156,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13147,
											"end": 13161,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13127,
											"end": 13145,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13124,
											"end": 13162,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13121,
											"end": 13205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 13121,
											"end": 13205,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 13177,
											"end": 13195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13121,
											"end": 13205,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 13121,
											"end": 13205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12942,
											"end": 13211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12891,
											"end": 13211,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12891,
											"end": 13211,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12891,
											"end": 13211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12891,
											"end": 13211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13217,
											"end": 13397,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 13217,
											"end": 13397,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13265,
											"end": 13342,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13262,
											"end": 13263,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13255,
											"end": 13343,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13362,
											"end": 13366,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 13359,
											"end": 13360,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13352,
											"end": 13367,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13386,
											"end": 13390,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13383,
											"end": 13384,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13376,
											"end": 13391,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13403,
											"end": 13636,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 13403,
											"end": 13636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13442,
											"end": 13445,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13465,
											"end": 13489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 13483,
											"end": 13488,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13465,
											"end": 13489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 13465,
											"end": 13489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13465,
											"end": 13489,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 13465,
											"end": 13489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13456,
											"end": 13489,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13456,
											"end": 13489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13511,
											"end": 13577,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13504,
											"end": 13509,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13501,
											"end": 13578,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13498,
											"end": 13601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 13498,
											"end": 13601,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13581,
											"end": 13599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 13581,
											"end": 13599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 13581,
											"end": 13599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13581,
											"end": 13599,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 13581,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13498,
											"end": 13601,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 13498,
											"end": 13601,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13628,
											"end": 13629,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13621,
											"end": 13626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13617,
											"end": 13630,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13610,
											"end": 13630,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13610,
											"end": 13630,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13403,
											"end": 13636,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13403,
											"end": 13636,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13403,
											"end": 13636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13403,
											"end": 13636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13642,
											"end": 13783,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 13642,
											"end": 13783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13691,
											"end": 13695,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13714,
											"end": 13717,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13706,
											"end": 13717,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13706,
											"end": 13717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13737,
											"end": 13740,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13734,
											"end": 13735,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13727,
											"end": 13741,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13771,
											"end": 13775,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13768,
											"end": 13769,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13758,
											"end": 13776,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 13750,
											"end": 13776,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13750,
											"end": 13776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13642,
											"end": 13783,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13642,
											"end": 13783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13642,
											"end": 13783,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13642,
											"end": 13783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13789,
											"end": 13882,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 13789,
											"end": 13882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13826,
											"end": 13832,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13873,
											"end": 13875,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13868,
											"end": 13870,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 13861,
											"end": 13866,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13857,
											"end": 13871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13853,
											"end": 13876,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 13843,
											"end": 13876,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13843,
											"end": 13876,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13789,
											"end": 13882,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13789,
											"end": 13882,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13789,
											"end": 13882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13789,
											"end": 13882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13888,
											"end": 13995,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 13888,
											"end": 13995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13932,
											"end": 13940,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13982,
											"end": 13987,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13976,
											"end": 13980,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13972,
											"end": 13988,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 13951,
											"end": 13988,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13951,
											"end": 13988,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13888,
											"end": 13995,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13888,
											"end": 13995,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13888,
											"end": 13995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13888,
											"end": 13995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13888,
											"end": 13995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14001,
											"end": 14394,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 14001,
											"end": 14394,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14070,
											"end": 14076,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14120,
											"end": 14121,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 14108,
											"end": 14118,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14104,
											"end": 14122,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 14143,
											"end": 14240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 14173,
											"end": 14239,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14162,
											"end": 14171,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14143,
											"end": 14240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 14143,
											"end": 14240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14143,
											"end": 14240,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 14143,
											"end": 14240,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14261,
											"end": 14300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 14291,
											"end": 14299,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14280,
											"end": 14289,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14261,
											"end": 14300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 14261,
											"end": 14300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14261,
											"end": 14300,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 14261,
											"end": 14300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14249,
											"end": 14300,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 14249,
											"end": 14300,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14333,
											"end": 14337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14329,
											"end": 14338,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 14322,
											"end": 14327,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14318,
											"end": 14339,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14309,
											"end": 14339,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14309,
											"end": 14339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14382,
											"end": 14386,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14372,
											"end": 14380,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14368,
											"end": 14387,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14361,
											"end": 14366,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14358,
											"end": 14388,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 14348,
											"end": 14388,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14348,
											"end": 14388,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14077,
											"end": 14394,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14077,
											"end": 14394,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14001,
											"end": 14394,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14001,
											"end": 14394,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14001,
											"end": 14394,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14001,
											"end": 14394,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14001,
											"end": 14394,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14001,
											"end": 14394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14400,
											"end": 14460,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 14400,
											"end": 14460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14428,
											"end": 14431,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14449,
											"end": 14454,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14442,
											"end": 14454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14442,
											"end": 14454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14400,
											"end": 14460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14400,
											"end": 14460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14400,
											"end": 14460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14400,
											"end": 14460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14466,
											"end": 14608,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 14466,
											"end": 14608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14516,
											"end": 14525,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 14567,
											"end": 14601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 14576,
											"end": 14600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 14594,
											"end": 14599,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14576,
											"end": 14600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 14576,
											"end": 14600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14576,
											"end": 14600,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 14576,
											"end": 14600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14567,
											"end": 14601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 14567,
											"end": 14601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14567,
											"end": 14601,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 14567,
											"end": 14601,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14549,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 14549,
											"end": 14602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14549,
											"end": 14602,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 14549,
											"end": 14602,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14536,
											"end": 14602,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14536,
											"end": 14602,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14466,
											"end": 14608,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14466,
											"end": 14608,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14466,
											"end": 14608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14466,
											"end": 14608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14614,
											"end": 14689,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 14614,
											"end": 14689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14657,
											"end": 14660,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14678,
											"end": 14683,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14671,
											"end": 14683,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14671,
											"end": 14683,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14614,
											"end": 14689,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14614,
											"end": 14689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14614,
											"end": 14689,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14614,
											"end": 14689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14695,
											"end": 14964,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 14695,
											"end": 14964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14805,
											"end": 14844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 14836,
											"end": 14843,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14805,
											"end": 14844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 14805,
											"end": 14844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14805,
											"end": 14844,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 14805,
											"end": 14844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14866,
											"end": 14957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 14915,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 14939,
											"end": 14955,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14915,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 14915,
											"end": 14956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14915,
											"end": 14956,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 14915,
											"end": 14956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14907,
											"end": 14913,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14900,
											"end": 14904,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14894,
											"end": 14905,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 14866,
											"end": 14957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 14866,
											"end": 14957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14866,
											"end": 14957,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 14866,
											"end": 14957,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14860,
											"end": 14864,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14853,
											"end": 14958,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 14771,
											"end": 14964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14695,
											"end": 14964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14695,
											"end": 14964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14695,
											"end": 14964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14695,
											"end": 14964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14970,
											"end": 15043,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 14970,
											"end": 15043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15015,
											"end": 15018,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14970,
											"end": 15043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14970,
											"end": 15043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15049,
											"end": 15238,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 15049,
											"end": 15238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15126,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 15126,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 15126,
											"end": 15158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15126,
											"end": 15158,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 15126,
											"end": 15158,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15167,
											"end": 15232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 15225,
											"end": 15231,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15217,
											"end": 15223,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15167,
											"end": 15232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 15167,
											"end": 15232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15167,
											"end": 15232,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 15167,
											"end": 15232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15102,
											"end": 15238,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15049,
											"end": 15238,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15049,
											"end": 15238,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15049,
											"end": 15238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15244,
											"end": 15430,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 15244,
											"end": 15430,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15304,
											"end": 15424,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 15304,
											"end": 15424,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15321,
											"end": 15324,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15314,
											"end": 15319,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15311,
											"end": 15325,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15304,
											"end": 15424,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15304,
											"end": 15424,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 15304,
											"end": 15424,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15375,
											"end": 15414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 15412,
											"end": 15413,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15405,
											"end": 15410,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15375,
											"end": 15414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 15375,
											"end": 15414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15375,
											"end": 15414,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 15375,
											"end": 15414,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15348,
											"end": 15349,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15341,
											"end": 15346,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15337,
											"end": 15350,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15328,
											"end": 15350,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15328,
											"end": 15350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15304,
											"end": 15424,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 15304,
											"end": 15424,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15304,
											"end": 15424,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 15304,
											"end": 15424,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15244,
											"end": 15430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15244,
											"end": 15430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15244,
											"end": 15430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15436,
											"end": 15979,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 15436,
											"end": 15979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15537,
											"end": 15539,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 15532,
											"end": 15535,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15529,
											"end": 15540,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15526,
											"end": 15972,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15526,
											"end": 15972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 15526,
											"end": 15972,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15571,
											"end": 15609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 15603,
											"end": 15608,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15571,
											"end": 15609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 15571,
											"end": 15609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15571,
											"end": 15609,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 15571,
											"end": 15609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15655,
											"end": 15684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 15673,
											"end": 15683,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15655,
											"end": 15684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 15655,
											"end": 15684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15655,
											"end": 15684,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 15655,
											"end": 15684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15645,
											"end": 15653,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15641,
											"end": 15685,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15838,
											"end": 15840,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15826,
											"end": 15836,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15823,
											"end": 15841,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15820,
											"end": 15869,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15820,
											"end": 15869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 15820,
											"end": 15869,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15859,
											"end": 15867,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15844,
											"end": 15867,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15844,
											"end": 15867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15820,
											"end": 15869,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 15820,
											"end": 15869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15882,
											"end": 15962,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 15938,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 15956,
											"end": 15959,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15938,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 15938,
											"end": 15960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15938,
											"end": 15960,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 15938,
											"end": 15960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15928,
											"end": 15936,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15924,
											"end": 15961,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15911,
											"end": 15922,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15882,
											"end": 15962,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 15882,
											"end": 15962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15882,
											"end": 15962,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 15882,
											"end": 15962,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15541,
											"end": 15972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15541,
											"end": 15972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15526,
											"end": 15972,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 15526,
											"end": 15972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15436,
											"end": 15979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15436,
											"end": 15979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15436,
											"end": 15979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15436,
											"end": 15979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15985,
											"end": 16102,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 15985,
											"end": 16102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16039,
											"end": 16047,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16089,
											"end": 16094,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16083,
											"end": 16087,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16079,
											"end": 16095,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 16058,
											"end": 16095,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16058,
											"end": 16095,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15985,
											"end": 16102,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15985,
											"end": 16102,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15985,
											"end": 16102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15985,
											"end": 16102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15985,
											"end": 16102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16108,
											"end": 16277,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 16108,
											"end": 16277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16158,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16185,
											"end": 16236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 16233,
											"end": 16234,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16229,
											"end": 16235,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 16221,
											"end": 16226,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16218,
											"end": 16219,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 16214,
											"end": 16227,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 16185,
											"end": 16236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 16185,
											"end": 16236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16185,
											"end": 16236,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 16185,
											"end": 16236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16181,
											"end": 16237,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 16266,
											"end": 16270,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16260,
											"end": 16264,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16256,
											"end": 16271,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16246,
											"end": 16271,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16246,
											"end": 16271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16159,
											"end": 16277,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16108,
											"end": 16277,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16108,
											"end": 16277,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16108,
											"end": 16277,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16108,
											"end": 16277,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16108,
											"end": 16277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16282,
											"end": 16577,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 16282,
											"end": 16577,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16358,
											"end": 16362,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16504,
											"end": 16533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 16529,
											"end": 16532,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16523,
											"end": 16527,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16504,
											"end": 16533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 16504,
											"end": 16533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16504,
											"end": 16533,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 16504,
											"end": 16533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16496,
											"end": 16533,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16496,
											"end": 16533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16566,
											"end": 16569,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16563,
											"end": 16564,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 16559,
											"end": 16570,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 16553,
											"end": 16557,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16550,
											"end": 16571,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 16542,
											"end": 16571,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16542,
											"end": 16571,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16282,
											"end": 16577,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16282,
											"end": 16577,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16282,
											"end": 16577,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16282,
											"end": 16577,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16282,
											"end": 16577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16582,
											"end": 17977,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 16582,
											"end": 17977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16699,
											"end": 16736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 16732,
											"end": 16735,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16699,
											"end": 16736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 16699,
											"end": 16736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16699,
											"end": 16736,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 16699,
											"end": 16736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16793,
											"end": 16799,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16790,
											"end": 16820,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16787,
											"end": 16843,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16787,
											"end": 16843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 16787,
											"end": 16843,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16823,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 16823,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 16823,
											"end": 16841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16823,
											"end": 16841,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 16823,
											"end": 16841,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16787,
											"end": 16843,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 16787,
											"end": 16843,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16867,
											"end": 16905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 16899,
											"end": 16903,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16893,
											"end": 16904,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 16867,
											"end": 16905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 16867,
											"end": 16905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16867,
											"end": 16905,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 16867,
											"end": 16905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16952,
											"end": 17019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 17012,
											"end": 17018,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17004,
											"end": 17010,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16998,
											"end": 17002,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16952,
											"end": 17019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 16952,
											"end": 17019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16952,
											"end": 17019,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 16952,
											"end": 17019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17046,
											"end": 17047,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17070,
											"end": 17074,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17057,
											"end": 17074,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17057,
											"end": 17074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17102,
											"end": 17104,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 17094,
											"end": 17100,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17091,
											"end": 17105,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17119,
											"end": 17120,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 17114,
											"end": 17732,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17114,
											"end": 17732,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 17114,
											"end": 17732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 17114,
											"end": 17732,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17776,
											"end": 17777,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17793,
											"end": 17799,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17790,
											"end": 17867,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17790,
											"end": 17867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 17790,
											"end": 17867,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17842,
											"end": 17851,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17837,
											"end": 17840,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 17833,
											"end": 17852,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17827,
											"end": 17853,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17818,
											"end": 17853,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17818,
											"end": 17853,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17790,
											"end": 17867,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 17790,
											"end": 17867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17893,
											"end": 17960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 17953,
											"end": 17959,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17946,
											"end": 17951,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17893,
											"end": 17960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 17893,
											"end": 17960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17893,
											"end": 17960,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 17893,
											"end": 17960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17887,
											"end": 17891,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17880,
											"end": 17961,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 17749,
											"end": 17971,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17084,
											"end": 17971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 17084,
											"end": 17971,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17114,
											"end": 17732,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 17114,
											"end": 17732,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17166,
											"end": 17170,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 17162,
											"end": 17171,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 17154,
											"end": 17160,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17150,
											"end": 17172,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17200,
											"end": 17237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 17232,
											"end": 17236,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17200,
											"end": 17237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 17200,
											"end": 17237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17200,
											"end": 17237,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 17200,
											"end": 17237,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17259,
											"end": 17260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17273,
											"end": 17481,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 17273,
											"end": 17481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17287,
											"end": 17294,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17284,
											"end": 17285,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17281,
											"end": 17295,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 17273,
											"end": 17481,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17273,
											"end": 17481,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 17273,
											"end": 17481,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17366,
											"end": 17375,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17361,
											"end": 17364,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 17357,
											"end": 17376,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17351,
											"end": 17377,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17343,
											"end": 17349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17336,
											"end": 17378,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 17417,
											"end": 17418,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 17409,
											"end": 17415,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17405,
											"end": 17419,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17395,
											"end": 17419,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17395,
											"end": 17419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17464,
											"end": 17466,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17453,
											"end": 17462,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17449,
											"end": 17467,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17436,
											"end": 17467,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 17436,
											"end": 17467,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17310,
											"end": 17314,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17307,
											"end": 17308,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17303,
											"end": 17315,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17298,
											"end": 17315,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17298,
											"end": 17315,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17273,
											"end": 17481,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 17273,
											"end": 17481,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17273,
											"end": 17481,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 17273,
											"end": 17481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17509,
											"end": 17515,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17500,
											"end": 17507,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17497,
											"end": 17516,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 17494,
											"end": 17673,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17494,
											"end": 17673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 17494,
											"end": 17673,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17567,
											"end": 17576,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17562,
											"end": 17565,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 17558,
											"end": 17577,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17552,
											"end": 17578,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17610,
											"end": 17658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 17652,
											"end": 17656,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 17644,
											"end": 17650,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 17640,
											"end": 17657,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17629,
											"end": 17638,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17610,
											"end": 17658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 17610,
											"end": 17658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17610,
											"end": 17658,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 17610,
											"end": 17658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17602,
											"end": 17608,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17595,
											"end": 17659,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 17517,
											"end": 17673,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17494,
											"end": 17673,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 17494,
											"end": 17673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17719,
											"end": 17720,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 17715,
											"end": 17716,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 17707,
											"end": 17713,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 17703,
											"end": 17717,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 17699,
											"end": 17721,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17693,
											"end": 17697,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 17686,
											"end": 17722,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 17121,
											"end": 17732,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17121,
											"end": 17732,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17121,
											"end": 17732,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17084,
											"end": 17971,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 17084,
											"end": 17971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17084,
											"end": 17971,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16674,
											"end": 17977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16674,
											"end": 17977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16674,
											"end": 17977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16582,
											"end": 17977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16582,
											"end": 17977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16582,
											"end": 17977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17983,
											"end": 18425,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 17983,
											"end": 18425,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18132,
											"end": 18136,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18170,
											"end": 18172,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 18159,
											"end": 18168,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18155,
											"end": 18173,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18147,
											"end": 18173,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18147,
											"end": 18173,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18183,
											"end": 18254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 18251,
											"end": 18252,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18240,
											"end": 18249,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18236,
											"end": 18253,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18227,
											"end": 18233,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18183,
											"end": 18254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 18183,
											"end": 18254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18183,
											"end": 18254,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 18183,
											"end": 18254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18264,
											"end": 18336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 18332,
											"end": 18334,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18321,
											"end": 18330,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18317,
											"end": 18335,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18308,
											"end": 18314,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18264,
											"end": 18336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 18264,
											"end": 18336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18264,
											"end": 18336,
											"name": "tag",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 18264,
											"end": 18336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18346,
											"end": 18418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 18414,
											"end": 18416,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18403,
											"end": 18412,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18399,
											"end": 18417,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18390,
											"end": 18396,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18346,
											"end": 18418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 18346,
											"end": 18418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18346,
											"end": 18418,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 18346,
											"end": 18418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17983,
											"end": 18425,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 17983,
											"end": 18425,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17983,
											"end": 18425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17983,
											"end": 18425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17983,
											"end": 18425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17983,
											"end": 18425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17983,
											"end": 18425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18431,
											"end": 18601,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 18431,
											"end": 18601,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18571,
											"end": 18593,
											"name": "PUSH",
											"source": 12,
											"value": "546F6B656E20646F6573206E6F74206578697374000000000000000000000000"
										},
										{
											"begin": 18567,
											"end": 18568,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18559,
											"end": 18565,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18555,
											"end": 18569,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18548,
											"end": 18594,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18431,
											"end": 18601,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18431,
											"end": 18601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18607,
											"end": 18973,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 18607,
											"end": 18973,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18749,
											"end": 18752,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18770,
											"end": 18837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 18834,
											"end": 18836,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 18829,
											"end": 18832,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18770,
											"end": 18837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 18770,
											"end": 18837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18770,
											"end": 18837,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 18770,
											"end": 18837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18763,
											"end": 18837,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18763,
											"end": 18837,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18846,
											"end": 18939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 18935,
											"end": 18938,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18846,
											"end": 18939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 18846,
											"end": 18939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18846,
											"end": 18939,
											"name": "tag",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 18846,
											"end": 18939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18964,
											"end": 18966,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18959,
											"end": 18962,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18955,
											"end": 18967,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18948,
											"end": 18967,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18948,
											"end": 18967,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18607,
											"end": 18973,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18607,
											"end": 18973,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18607,
											"end": 18973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18607,
											"end": 18973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18979,
											"end": 19398,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 18979,
											"end": 19398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19145,
											"end": 19149,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19183,
											"end": 19185,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19172,
											"end": 19181,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19168,
											"end": 19186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19160,
											"end": 19186,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19160,
											"end": 19186,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19232,
											"end": 19241,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19226,
											"end": 19230,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19222,
											"end": 19242,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19218,
											"end": 19219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19207,
											"end": 19216,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19203,
											"end": 19220,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19196,
											"end": 19243,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19260,
											"end": 19391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 19386,
											"end": 19390,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19260,
											"end": 19391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 19260,
											"end": 19391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19260,
											"end": 19391,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 19260,
											"end": 19391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19252,
											"end": 19391,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19252,
											"end": 19391,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18979,
											"end": 19398,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18979,
											"end": 19398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18979,
											"end": 19398,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18979,
											"end": 19398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19404,
											"end": 19552,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 19404,
											"end": 19552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19506,
											"end": 19517,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19543,
											"end": 19546,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19528,
											"end": 19546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19528,
											"end": 19546,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19404,
											"end": 19552,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19404,
											"end": 19552,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19404,
											"end": 19552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19404,
											"end": 19552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19404,
											"end": 19552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19558,
											"end": 19948,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 19558,
											"end": 19948,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19664,
											"end": 19667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19692,
											"end": 19731,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 19725,
											"end": 19730,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19692,
											"end": 19731,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 19692,
											"end": 19731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19692,
											"end": 19731,
											"name": "tag",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 19692,
											"end": 19731,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19747,
											"end": 19836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 19829,
											"end": 19835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19824,
											"end": 19827,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19747,
											"end": 19836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 19747,
											"end": 19836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19747,
											"end": 19836,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 19747,
											"end": 19836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19740,
											"end": 19836,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 19740,
											"end": 19836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19845,
											"end": 19910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 19903,
											"end": 19909,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19898,
											"end": 19901,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19891,
											"end": 19895,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19884,
											"end": 19889,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19880,
											"end": 19896,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19845,
											"end": 19910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 19845,
											"end": 19910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19845,
											"end": 19910,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 19845,
											"end": 19910,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19935,
											"end": 19941,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19930,
											"end": 19933,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19926,
											"end": 19942,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19919,
											"end": 19942,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19919,
											"end": 19942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19668,
											"end": 19948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19558,
											"end": 19948,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19558,
											"end": 19948,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19558,
											"end": 19948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19558,
											"end": 19948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19558,
											"end": 19948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19954,
											"end": 20389,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 19954,
											"end": 20389,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20134,
											"end": 20137,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20156,
											"end": 20251,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 20247,
											"end": 20250,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20238,
											"end": 20244,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20156,
											"end": 20251,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 20156,
											"end": 20251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20156,
											"end": 20251,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 20156,
											"end": 20251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20149,
											"end": 20251,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20149,
											"end": 20251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20268,
											"end": 20363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 20359,
											"end": 20362,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20350,
											"end": 20356,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20268,
											"end": 20363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 20268,
											"end": 20363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20268,
											"end": 20363,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 20268,
											"end": 20363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20261,
											"end": 20363,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20261,
											"end": 20363,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20380,
											"end": 20383,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20373,
											"end": 20383,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20373,
											"end": 20383,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19954,
											"end": 20389,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 19954,
											"end": 20389,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19954,
											"end": 20389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19954,
											"end": 20389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19954,
											"end": 20389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19954,
											"end": 20389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20395,
											"end": 20493,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 20395,
											"end": 20493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20446,
											"end": 20452,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20480,
											"end": 20485,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20474,
											"end": 20486,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20464,
											"end": 20486,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20464,
											"end": 20486,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20395,
											"end": 20493,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20395,
											"end": 20493,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20395,
											"end": 20493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20395,
											"end": 20493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20499,
											"end": 20667,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 20499,
											"end": 20667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20582,
											"end": 20593,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20616,
											"end": 20622,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20611,
											"end": 20614,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20604,
											"end": 20623,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20656,
											"end": 20660,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20651,
											"end": 20654,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20647,
											"end": 20661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20632,
											"end": 20661,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20632,
											"end": 20661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20499,
											"end": 20667,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20499,
											"end": 20667,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20499,
											"end": 20667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20499,
											"end": 20667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20499,
											"end": 20667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20673,
											"end": 21046,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 20673,
											"end": 21046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20759,
											"end": 20762,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20787,
											"end": 20825,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 20819,
											"end": 20824,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20787,
											"end": 20825,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 20787,
											"end": 20825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20787,
											"end": 20825,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 20787,
											"end": 20825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20841,
											"end": 20911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 20904,
											"end": 20910,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20899,
											"end": 20902,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20841,
											"end": 20911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 20841,
											"end": 20911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20841,
											"end": 20911,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 20841,
											"end": 20911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20834,
											"end": 20911,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 20834,
											"end": 20911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20920,
											"end": 20985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 20978,
											"end": 20984,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20973,
											"end": 20976,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20966,
											"end": 20970,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20959,
											"end": 20964,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20955,
											"end": 20971,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20920,
											"end": 20985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 20920,
											"end": 20985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20920,
											"end": 20985,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 20920,
											"end": 20985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21010,
											"end": 21039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 21032,
											"end": 21038,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21010,
											"end": 21039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 21010,
											"end": 21039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21010,
											"end": 21039,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 21010,
											"end": 21039,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21005,
											"end": 21008,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21001,
											"end": 21040,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20994,
											"end": 21040,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20994,
											"end": 21040,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20763,
											"end": 21046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20673,
											"end": 21046,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20673,
											"end": 21046,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20673,
											"end": 21046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20673,
											"end": 21046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20673,
											"end": 21046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21052,
											"end": 21692,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 21052,
											"end": 21692,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21247,
											"end": 21251,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21285,
											"end": 21288,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 21274,
											"end": 21283,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21270,
											"end": 21289,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21262,
											"end": 21289,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21262,
											"end": 21289,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21299,
											"end": 21370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 21367,
											"end": 21368,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21356,
											"end": 21365,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21352,
											"end": 21369,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21343,
											"end": 21349,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 21299,
											"end": 21370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 21299,
											"end": 21370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21299,
											"end": 21370,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 21299,
											"end": 21370,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21380,
											"end": 21452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 21448,
											"end": 21450,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21437,
											"end": 21446,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21433,
											"end": 21451,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21424,
											"end": 21430,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21380,
											"end": 21452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 21380,
											"end": 21452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21380,
											"end": 21452,
											"name": "tag",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 21380,
											"end": 21452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21462,
											"end": 21534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 21530,
											"end": 21532,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 21519,
											"end": 21528,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21515,
											"end": 21533,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21506,
											"end": 21512,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21462,
											"end": 21534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 21462,
											"end": 21534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21462,
											"end": 21534,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 21462,
											"end": 21534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21581,
											"end": 21590,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21575,
											"end": 21579,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21571,
											"end": 21591,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21566,
											"end": 21568,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 21555,
											"end": 21564,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21551,
											"end": 21569,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21544,
											"end": 21592,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21609,
											"end": 21685,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 21680,
											"end": 21684,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21671,
											"end": 21677,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21609,
											"end": 21685,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 21609,
											"end": 21685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21609,
											"end": 21685,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 21609,
											"end": 21685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21601,
											"end": 21685,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21601,
											"end": 21685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21052,
											"end": 21692,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 21052,
											"end": 21692,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 21052,
											"end": 21692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21052,
											"end": 21692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21052,
											"end": 21692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21052,
											"end": 21692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21052,
											"end": 21692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21052,
											"end": 21692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21698,
											"end": 21839,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 21698,
											"end": 21839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21754,
											"end": 21759,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21785,
											"end": 21791,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21779,
											"end": 21792,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 21770,
											"end": 21792,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21770,
											"end": 21792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21801,
											"end": 21833,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 21827,
											"end": 21832,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21801,
											"end": 21833,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 21801,
											"end": 21833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21801,
											"end": 21833,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 21801,
											"end": 21833,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21698,
											"end": 21839,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21698,
											"end": 21839,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21698,
											"end": 21839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21698,
											"end": 21839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21698,
											"end": 21839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21845,
											"end": 22194,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 21845,
											"end": 22194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21914,
											"end": 21920,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21963,
											"end": 21965,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21951,
											"end": 21960,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21942,
											"end": 21949,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21938,
											"end": 21961,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21934,
											"end": 21966,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 21931,
											"end": 22050,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 21931,
											"end": 22050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 21931,
											"end": 22050,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21969,
											"end": 22048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 21969,
											"end": 22048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 21969,
											"end": 22048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21969,
											"end": 22048,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 21969,
											"end": 22048,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21931,
											"end": 22050,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 21931,
											"end": 22050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22089,
											"end": 22090,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22114,
											"end": 22177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 22169,
											"end": 22176,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22160,
											"end": 22166,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22149,
											"end": 22158,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22145,
											"end": 22167,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22114,
											"end": 22177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 22114,
											"end": 22177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22114,
											"end": 22177,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 22114,
											"end": 22177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22104,
											"end": 22177,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22104,
											"end": 22177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22060,
											"end": 22187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21845,
											"end": 22194,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21845,
											"end": 22194,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21845,
											"end": 22194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21845,
											"end": 22194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21845,
											"end": 22194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22200,
											"end": 22380,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 22200,
											"end": 22380,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22248,
											"end": 22325,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22245,
											"end": 22246,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22238,
											"end": 22326,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22345,
											"end": 22349,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 22342,
											"end": 22343,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 22335,
											"end": 22350,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22369,
											"end": 22373,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 22366,
											"end": 22367,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22359,
											"end": 22374,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 22386,
											"end": 22718,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 22386,
											"end": 22718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22507,
											"end": 22511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22545,
											"end": 22547,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 22534,
											"end": 22543,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22530,
											"end": 22548,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22522,
											"end": 22548,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22522,
											"end": 22548,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22558,
											"end": 22629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 22626,
											"end": 22627,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22615,
											"end": 22624,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22611,
											"end": 22628,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22602,
											"end": 22608,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22558,
											"end": 22629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 22558,
											"end": 22629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22558,
											"end": 22629,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 22558,
											"end": 22629,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22639,
											"end": 22711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 22707,
											"end": 22709,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22696,
											"end": 22705,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22692,
											"end": 22710,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22683,
											"end": 22689,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22639,
											"end": 22711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 22639,
											"end": 22711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22639,
											"end": 22711,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 22639,
											"end": 22711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22386,
											"end": 22718,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 22386,
											"end": 22718,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22386,
											"end": 22718,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22386,
											"end": 22718,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22386,
											"end": 22718,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22386,
											"end": 22718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Monke.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getTokenMetadata(uint256)": "60316801",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintNFT(address,uint256,string)": "1e576912",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenMetadata\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"valid_till\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"name\":\"mintNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Monke.sol\":\"Monke\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/Monke.sol\":{\"keccak256\":\"0x2bdc05b9be756d42525929fe72301a0167686568e3afb8055603a7953d160454\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6a053b671107a2dd9f1e1c4b2baaad2c4f6b7e0d16f6f7239af7925fb0d67a\",\"dweb:/ipfs/QmQ3BtVSiFRWjykbzJpJsBGBWJCUTGEXNEensbowsD8e92\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "contracts/Monke.sol:Monke",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/Monke.sol:Monke",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "contracts/Monke.sol:Monke",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "contracts/Monke.sol:Monke",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "contracts/Monke.sol:Monke",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "contracts/Monke.sol:Monke",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2795,
								"contract": "contracts/Monke.sol:Monke",
								"label": "_currentTokenId",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 2805,
								"contract": "contracts/Monke.sol:Monke",
								"label": "_tokenMetadata",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(NFTMetadata)2800_storage)"
							},
							{
								"astId": 2809,
								"contract": "contracts/Monke.sol:Monke",
								"label": "_owners",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(NFTMetadata)2800_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Monke.NFTMetadata)",
								"numberOfBytes": "32",
								"value": "t_struct(NFTMetadata)2800_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(NFTMetadata)2800_storage": {
								"encoding": "inplace",
								"label": "struct Monke.NFTMetadata",
								"members": [
									{
										"astId": 2797,
										"contract": "contracts/Monke.sol:Monke",
										"label": "valid_till",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2799,
										"contract": "contracts/Monke.sol:Monke",
										"label": "url",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1338
						],
						"ERC165": [
							1617
						],
						"ERC721": [
							1145
						],
						"IERC165": [
							1629
						],
						"IERC721": [
							1262
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1308
						],
						"IERC721Receiver": [
							1280
						],
						"Strings": [
							1593
						]
					},
					"id": 1146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1263,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1281,
							"src": "172:54:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1280,
										"src": "180:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1309,
							"src": "227:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1308,
										"src": "235:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1339,
							"src": "293:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1338,
										"src": "301:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1594,
							"src": "342:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1593,
										"src": "350:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1618,
							"src": "391:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 149,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1629,
										"src": "399:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 150,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1617,
										"src": "408:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 137,
							"src": "461:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 89,
										"src": "469:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"804:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1338,
										"src": "804:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"813:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1617,
										"src": "813:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC721",
										"nameLocations": [
											"821:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "821:7:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1308,
										"src": "830:15:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "847:13:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:1"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1145,
							"linearizedBaseContracts": [
								1145,
								89,
								1308,
								1262,
								1617,
								1629,
								1338
							],
							"name": "ERC721",
							"nameLocation": "794:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 167,
									"libraryName": {
										"id": 165,
										"name": "Strings",
										"nameLocations": [
											"873:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1593,
										"src": "873:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:1",
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "917:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "964:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 175,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "993:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 174,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:1",
										"keyType": {
											"id": 172,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 173,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 179,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1051:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 178,
										"keyName": "owner",
										"keyNameLocation": "1067:5:1",
										"keyType": {
											"id": 176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 183,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1109:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 182,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:1",
										"keyType": {
											"id": 180,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 189,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1175:86:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 188,
										"keyName": "owner",
										"keyNameLocation": "1191:5:1",
										"keyType": {
											"id": 184,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 187,
											"keyName": "operator",
											"keyNameLocation": "1216:8:1",
											"keyType": {
												"id": 185,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 186,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "1437:57:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1447:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 198,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1455:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:1"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 201,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1470:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 202,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1480:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:1",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 206,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1393:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1414:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:1"
									},
									"scope": 1145,
									"src": "1381:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1616,
										1628
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "1669:192:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 217,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1698:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 219,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1262,
																			"src": "1718:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 218,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1262",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1754:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 225,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1308,
																			"src": "1774:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1308_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1308_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 224,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1308",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 232,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1842:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 230,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1145_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1616,
															"src": "1818:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 216,
												"id": 235,
												"nodeType": "Return",
												"src": "1679:175:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 213,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 211,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1617,
												"src": "1637:6:1"
											},
											{
												"id": 212,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1629,
												"src": "1645:7:1"
											}
										],
										"src": "1628:25:1"
									},
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1588:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 208,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1663:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:1"
									},
									"scope": 1145,
									"src": "1561:300:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "1992:136:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 259,
												"nodeType": "IfStatement",
												"src": "2002:87:1",
												"trueBody": {
													"id": 258,
													"nodeType": "Block",
													"src": "2027:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 252,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 251,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "2048:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 257,
															"nodeType": "RevertStatement",
															"src": "2041:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 260,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2105:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 262,
													"indexExpression": {
														"id": 261,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2115:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 244,
												"id": 263,
												"nodeType": "Return",
												"src": "2098:23:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1939:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1983:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:1"
									},
									"scope": 1145,
									"src": "1920:208:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1195
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "2257:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "2288:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 273,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2274:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 272,
												"id": 276,
												"nodeType": "Return",
												"src": "2267:29:1"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2202:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2248:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:1"
									},
									"scope": 1145,
									"src": "2185:118:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2425:29:1",
										"statements": [
											{
												"expression": {
													"id": 284,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2442:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 283,
												"id": 285,
												"nodeType": "Return",
												"src": "2435:12:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2410:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:1"
									},
									"scope": 1145,
									"src": "2365:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1299
									],
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "2580:31:1",
										"statements": [
											{
												"expression": {
													"id": 293,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2597:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 292,
												"id": 294,
												"nodeType": "Return",
												"src": "2590:14:1"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2565:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:1"
									},
									"scope": 1145,
									"src": "2518:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1307
									],
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "2756:176:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "2780:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 304,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2766:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:1"
											},
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 331,
														"src": "2799:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 308,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2823:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 315,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "2856:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 313,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:1",
													"trueExpression": {
														"arguments": [
															{
																"id": 323,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "2892:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 324,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "2901:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:1",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1406,
																	"src": "2901:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 320,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:1",
																	"typeDescriptions": {}
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:1",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 303,
												"id": 330,
												"nodeType": "Return",
												"src": "2843:82:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2695:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2741:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:1"
									},
									"scope": 1145,
									"src": "2677:255:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "3240:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 337,
												"id": 339,
												"nodeType": "Return",
												"src": "3250:9:1"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:1"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "3225:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:1"
									},
									"scope": 1145,
									"src": "3174:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1235
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "3384:52:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "3403:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "3407:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 352,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "3416:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 349,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1014
														],
														"referencedDeclaration": 948,
														"src": "3394:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3340:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3352:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:1"
									},
									"scope": 1145,
									"src": "3323:113:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1251
									],
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "3573:78:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3597:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 365,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "3583:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3636:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 369,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "3623:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 364,
												"id": 372,
												"nodeType": "Return",
												"src": "3616:28:1"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3518:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:1"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3564:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:1"
									},
									"scope": 1145,
									"src": "3497:154:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1243
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3793:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 383,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "3822:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3836:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "3846:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 382,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "3803:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3745:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3763:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:1"
									},
									"scope": 1145,
									"src": "3718:144:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "4022:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 400,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "4039:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 402,
														"indexExpression": {
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "4058:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 404,
													"indexExpression": {
														"id": 403,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "4065:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "4032:42:1"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3954:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3969:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "4016:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:1"
									},
									"scope": 1145,
									"src": "3928:153:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1227
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "4223:498:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "4237:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 418,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 431,
												"nodeType": "IfStatement",
												"src": "4233:87:1",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "4255:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 424,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 423,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4276:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 429,
															"nodeType": "RevertStatement",
															"src": "4269:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "4538:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 432,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "4570:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4574:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 437,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "4583:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 434,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4562:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 441,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "4610:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 442,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "4627:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "4606:109:1",
												"trueBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "4633:82:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 445,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "4675:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 446,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "4681:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 447,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "4690:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 444,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "4654:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 449,
															"nodeType": "RevertStatement",
															"src": "4647:57:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:1",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4165:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4179:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4191:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:1"
									},
									"scope": 1145,
									"src": "4143:578:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1217
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "4863:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "4890:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 465,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "4896:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "4900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 463,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															497
														],
														"referencedDeclaration": 497,
														"src": "4873:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:1"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4813:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4827:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4839:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:1"
									},
									"scope": 1145,
									"src": "4787:132:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1207
									],
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "5088:105:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 484,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5117:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5121:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 483,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "5098:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 490,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5162:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5168:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5172:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 493,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "5181:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 489,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "5139:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:1"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5011:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5025:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5037:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5054:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:1"
									},
									"scope": 1145,
									"src": "4985:208:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "5782:40:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 505,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5799:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 507,
													"indexExpression": {
														"id": 506,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "5807:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 504,
												"id": 508,
												"nodeType": "Return",
												"src": "5792:23:1"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:1",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5725:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:1"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5773:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:1"
									},
									"scope": 1145,
									"src": "5707:115:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "6017:48:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 518,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6034:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 520,
													"indexExpression": {
														"id": 519,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "6050:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 517,
												"id": 521,
												"nodeType": "Return",
												"src": "6027:31:1"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:1",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5960:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:1"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6008:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:1"
									},
									"scope": 1145,
									"src": "5938:127:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "6485:163:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 535,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "6514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 541,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "6552:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 542,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "6561:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 545,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 526,
																				"src": "6589:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 546,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 528,
																				"src": "6596:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 544,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "6572:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 550,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "6621:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 549,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "6608:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 552,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "6633:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 555,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 534,
												"id": 557,
												"nodeType": "Return",
												"src": "6495:146:1"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:1",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6399:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6414:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6431:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:1"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6479:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 532,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:1"
									},
									"scope": 1145,
									"src": "6376:272:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "7179:271:1",
										"statements": [
											{
												"condition": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:1",
													"subExpression": {
														"arguments": [
															{
																"id": 570,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "7208:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 571,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "7215:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 572,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "7224:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 569,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "7194:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "7189:255:1",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "7234:210:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 575,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "7252:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 576,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 591,
																"nodeType": "Block",
																"src": "7350:84:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 587,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 564,
																					"src": "7402:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 588,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "7411:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 586,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "7375:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 590,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:1"
																	}
																]
															},
															"id": 592,
															"nodeType": "IfStatement",
															"src": "7248:186:1",
															"trueBody": {
																"id": 585,
																"nodeType": "Block",
																"src": "7273:71:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 582,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "7321:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 581,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "7298:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 584,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:1",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7108:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7123:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7140:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:1"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:1"
									},
									"scope": 1145,
									"src": "7082:368:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "8167:78:1",
										"statements": [
											{
												"id": 610,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:1",
												"statements": [
													{
														"expression": {
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 604,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "8201:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 606,
																"indexExpression": {
																	"id": 605,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "8211:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 607,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "8223:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 609,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:1",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "8118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "8135:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 600,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:1"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:1"
									},
									"scope": 1145,
									"src": "8092:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "8933:700:1",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "8943:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 624,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [
														{
															"id": 627,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "8958:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 630,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "9035:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 631,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 643,
												"nodeType": "IfStatement",
												"src": "9031:86:1",
												"trueBody": {
													"id": 642,
													"nodeType": "Block",
													"src": "9055:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "9086:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 638,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 619,
																		"src": "9092:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "9098:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "9069:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 641,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "9161:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 645,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 671,
												"nodeType": "IfStatement",
												"src": "9157:256:1",
												"trueBody": {
													"id": 670,
													"nodeType": "Block",
													"src": "9181:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 651,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 655,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "9298:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 656,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 650,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		948,
																		1014
																	],
																	"referencedDeclaration": 1014,
																	"src": "9277:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 662,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:1"
														},
														{
															"id": 669,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:1",
															"statements": [
																{
																	"expression": {
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 663,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9368:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 665,
																			"indexExpression": {
																				"id": 664,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "9378:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 668,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:1"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 672,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9427:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 673,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "9423:107:1",
												"trueBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "9445:85:1",
													"statements": [
														{
															"id": 684,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:1",
															"statements": [
																{
																	"expression": {
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 678,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9487:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 680,
																			"indexExpression": {
																				"id": 679,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 615,
																				"src": "9497:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 683,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:1"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 687,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "9540:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 689,
														"indexExpression": {
															"id": 688,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9548:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 690,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9559:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 694,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "9586:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "9592:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9596:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 693,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "9577:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "EmitStatement",
												"src": "9572:32:1"
											},
											{
												"expression": {
													"id": 699,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 625,
													"src": "9622:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 623,
												"id": 700,
												"nodeType": "Return",
												"src": "9615:11:1"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:1",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8855:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8867:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8884:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:1"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8924:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:1"
									},
									"scope": 1145,
									"src": "8838:795:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "10008:274:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 710,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "10022:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 711,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "IfStatement",
												"src": "10018:87:1",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "10040:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 717,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 716,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "10061:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 722,
															"nodeType": "RevertStatement",
															"src": "10054:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "10114:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 725,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"arguments": [
														{
															"id": 728,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "10146:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10150:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 730,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "10138:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 736,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "10184:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 737,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "10180:96:1",
												"trueBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "10213:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 745,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 743,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 742,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "10234:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 748,
															"nodeType": "RevertStatement",
															"src": "10227:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:1",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "9970:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:1"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:1"
									},
									"scope": 1145,
									"src": "9955:327:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "10690:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 761,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10710:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 762,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "10714:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 760,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															767,
															793
														],
														"referencedDeclaration": 793,
														"src": "10700:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:1"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:1",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "10652:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "10664:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:1"
									},
									"scope": 1145,
									"src": "10633:100:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "11038:98:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 778,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11054:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11058:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "11048:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 783,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11111:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 788,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11115:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 789,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11124:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 782,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "11076:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:1"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:1",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10973:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10985:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "11002:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 773,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:1"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:1"
									},
									"scope": 1145,
									"src": "10954:182:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "11503:186:1",
										"statements": [
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "11513:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 799,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 802,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11557:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 807,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 801,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "11537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "11591:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 814,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "11587:96:1",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "11620:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 820,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "11664:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 819,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "11641:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 822,
															"nodeType": "RevertStatement",
															"src": "11634:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "11477:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:1"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:1"
									},
									"scope": 1145,
									"src": "11462:227:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "12084:389:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 836,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "12098:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 837,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"nodeType": "IfStatement",
												"src": "12094:87:1",
												"trueBody": {
													"id": 849,
													"nodeType": "Block",
													"src": "12116:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 843,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 842,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "12137:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 848,
															"nodeType": "RevertStatement",
															"src": "12130:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													852
												],
												"declarations": [
													{
														"constant": false,
														"id": 852,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "12190:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 851,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"arguments": [
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "12222:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "12226:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 856,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 853,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "12214:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "12260:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 873,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "12362:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "12379:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 883,
													"nodeType": "IfStatement",
													"src": "12358:109:1",
													"trueBody": {
														"id": 882,
														"nodeType": "Block",
														"src": "12385:82:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 877,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "12427:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 878,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "12433:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 879,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "12442:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 876,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "12406:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 881,
																"nodeType": "RevertStatement",
																"src": "12399:57:1"
															}
														]
													}
												},
												"id": 884,
												"nodeType": "IfStatement",
												"src": "12256:211:1",
												"trueBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "12289:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 869,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "12333:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 868,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "12310:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 871,
															"nodeType": "RevertStatement",
															"src": "12303:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12046:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12058:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:1"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:1"
									},
									"scope": 1145,
									"src": "12013:460:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "13481:53:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 897,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "13505:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "13511:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "13515:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 896,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															904,
															930
														],
														"referencedDeclaration": 930,
														"src": "13491:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:1"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13429:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13443:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:1"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:1"
									},
									"scope": 1145,
									"src": "13406:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "13873:102:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "13893:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "13899:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "13903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "13883:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "13944:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "13950:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "13954:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 926,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "13963:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 922,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "13921:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:1"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:1",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13794:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13808:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13820:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13837:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 912,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:1"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:1"
									},
									"scope": 1145,
									"src": "13771:204:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "14488:50:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "14507:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "14511:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 943,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "14520:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 940,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1014
														],
														"referencedDeclaration": 1014,
														"src": "14498:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:1"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:1",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14436:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14448:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14465:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:1"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:1"
									},
									"scope": 1145,
									"src": "14418:120:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "14814:568:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 960,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "14880:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 961,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "14893:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 962,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"nodeType": "IfStatement",
												"src": "14876:460:1",
												"trueBody": {
													"id": 1005,
													"nodeType": "Block",
													"src": "14913:423:1",
													"statements": [
														{
															"assignments": [
																969
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 969,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1005,
																	"src": "14927:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 968,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 973,
															"initialValue": {
																"arguments": [
																	{
																		"id": 971,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "14957:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 970,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "14943:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 974,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "15093:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 975,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 980,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 969,
																			"src": "15115:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 981,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "15124:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 985,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "15150:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 986,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 955,
																				"src": "15157:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 984,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "15133:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 995,
															"nodeType": "IfStatement",
															"src": "15089:142:1",
															"trueBody": {
																"id": 994,
																"nodeType": "Block",
																"src": "15164:67:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 991,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 955,
																					"src": "15211:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 990,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "15189:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 993,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:1"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 996,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "15249:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1004,
															"nodeType": "IfStatement",
															"src": "15245:81:1",
															"trueBody": {
																"id": 1003,
																"nodeType": "Block",
																"src": "15260:66:1",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 998,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 969,
																					"src": "15292:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 999,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "15299:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1000,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 953,
																					"src": "15303:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 997,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "15283:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1002,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1007,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "15346:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1009,
														"indexExpression": {
															"id": 1008,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "15362:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1010,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "15373:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:1"
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:1",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14738:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14750:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14767:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14781:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:1"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:1"
									},
									"scope": 1145,
									"src": "14720:662:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "15684:219:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "15698:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1035,
												"nodeType": "IfStatement",
												"src": "15694:91:1",
												"trueBody": {
													"id": 1034,
													"nodeType": "Block",
													"src": "15722:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1031,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "15765:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "15743:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1033,
															"nodeType": "RevertStatement",
															"src": "15736:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1036,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "15794:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1039,
															"indexExpression": {
																"id": 1037,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "15813:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1040,
														"indexExpression": {
															"id": 1038,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "15820:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1041,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "15832:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1045,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "15870:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "15877:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "15887:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1044,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "15855:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "EmitStatement",
												"src": "15850:46:1"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15619:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15634:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15652:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:1"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:1"
									},
									"scope": 1145,
									"src": "15591:312:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "16210:169:1",
										"statements": [
											{
												"assignments": [
													1060
												],
												"declarations": [
													{
														"constant": false,
														"id": 1060,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "16220:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1059,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"arguments": [
														{
															"id": 1062,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "16245:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1061,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "16236:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1065,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "16267:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1066,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "16263:88:1",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "16288:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1072,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "16332:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1071,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "16309:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1074,
															"nodeType": "RevertStatement",
															"src": "16302:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1077,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "16367:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1078,
												"nodeType": "Return",
												"src": "16360:12:1"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:1",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16161:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:1"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16201:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:1"
									},
									"scope": 1145,
									"src": "16138:241:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "17020:680:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1092,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "17034:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "17030:664:1",
												"trueBody": {
													"id": 1141,
													"nodeType": "Block",
													"src": "17054:640:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1121,
																		"nodeType": "Block",
																		"src": "17168:162:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1114,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1110,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1108,
																						"src": "17190:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1111,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1280,
																								"src": "17200:15:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1280_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:1",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1279,
																							"src": "17200:32:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1113,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1120,
																				"nodeType": "IfStatement",
																				"src": "17186:130:1",
																				"trueBody": {
																					"id": 1119,
																					"nodeType": "Block",
																					"src": "17243:73:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1116,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1085,
																										"src": "17294:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1115,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17272:21:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1118,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1122,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1109,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1108,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1122,
																				"src": "17153:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1107,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:1"
																	},
																	"src": "17144:186:1"
																},
																{
																	"block": {
																		"id": 1138,
																		"nodeType": "Block",
																		"src": "17359:325:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1129,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1126,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1124,
																							"src": "17381:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1128,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1136,
																					"nodeType": "Block",
																					"src": "17480:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:1",
																								"nodeType": "YulBlock",
																								"src": "17566:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:1",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:1"
																													},
																													"nativeSrc": "17599:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:1"
																													},
																													"nativeSrc": "17616:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:1"
																											},
																											"nativeSrc": "17592:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:1"
																										},
																										"nativeSrc": "17592:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1124,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1124,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1135,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:1"
																						}
																					]
																				},
																				"id": 1137,
																				"nodeType": "IfStatement",
																				"src": "17377:293:1",
																				"trueBody": {
																					"id": 1134,
																					"nodeType": "Block",
																					"src": "17401:73:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1131,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1085,
																										"src": "17452:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1130,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17430:21:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1132,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1133,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1139,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1125,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1124,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1139,
																				"src": "17338:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:1"
																	},
																	"src": "17331:353:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1101,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1320,
																			"src": "17109:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1103,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "17123:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1104,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "17129:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1105,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "17138:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1098,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "17088:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1097,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "17072:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1280_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1280",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:1",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1279,
																	"src": "17072:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1140,
															"nodeType": "TryStatement",
															"src": "17068:616:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:1",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16950:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16964:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16976:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16993:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1088,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:1"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:1"
									},
									"scope": 1145,
									"src": "16918:782:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1146,
							"src": "776:16926:1",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "107:17596:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1629
						],
						"IERC721": [
							1262
						]
					},
					"id": 1263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1147,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1263,
							"sourceUnit": 1630,
							"src": "134:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1148,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1629,
										"src": "142:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1151,
										"name": "IERC165",
										"nameLocations": [
											"287:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1629,
										"src": "287:7:2"
									},
									"id": 1152,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1150,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1262,
							"linearizedBaseContracts": [
								1262,
								1629
							],
							"name": "IERC721",
							"nameLocation": "276:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1161,
									"name": "Transfer",
									"nameLocation": "400:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "409:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "431:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "451:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:2"
									},
									"src": "394:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1170,
									"name": "Approval",
									"nameLocation": "587:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "596:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "619:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "645:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:2"
									},
									"src": "581:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1179,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "819:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "842:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "868:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:2"
									},
									"src": "798:85:2"
								},
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "989:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:2"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1027:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:2"
									},
									"scope": 1262,
									"src": "970:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1203:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:2"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1243:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:2"
									},
									"scope": 1262,
									"src": "1186:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1860:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1874:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1903:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:2"
									},
									"scope": 1262,
									"src": "1834:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2701:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:2"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:2"
									},
									"scope": 1262,
									"src": "2649:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3492:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3506:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3518:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:2"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:2"
									},
									"scope": 1262,
									"src": "3470:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "4024:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "4036:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:2"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:2"
									},
									"scope": 1262,
									"src": "4007:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "4415:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "4433:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:2"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:2"
									},
									"scope": 1262,
									"src": "4388:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4628:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:2"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4668:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:2"
									},
									"scope": 1262,
									"src": "4607:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4861:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4876:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4917:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:2"
									},
									"scope": 1262,
									"src": "4835:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1263,
							"src": "266:4659:2",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "108:4818:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1280
						]
					},
					"id": 1281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1265,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1280,
							"linearizedBaseContracts": [
								1280
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "867:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "893:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "915:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "940:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:3"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "984:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1276,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:3"
									},
									"scope": 1280,
									"src": "832:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1281,
							"src": "295:699:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1262
						],
						"IERC721Metadata": [
							1308
						]
					},
					"id": 1309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1309,
							"sourceUnit": 1263,
							"src": "153:39:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1283,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "161:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1286,
										"name": "IERC721",
										"nameLocations": [
											"357:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "357:7:4"
									},
									"id": 1287,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:4"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1285,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1308,
							"linearizedBaseContracts": [
								1308,
								1262,
								1629
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:4"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "473:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:4"
									},
									"scope": 1308,
									"src": "434:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:4"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "600:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:4"
									},
									"scope": 1308,
									"src": "559:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:4"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "774:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1304,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:4"
									},
									"scope": 1308,
									"src": "716:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1309,
							"src": "328:463:4",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "127:665:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1338
						]
					},
					"id": 1339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1311,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1338,
							"linearizedBaseContracts": [
								1338
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1316,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1318,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 1338,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1325,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1324,
												"id": 1327,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 1338,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1333,
												"id": 1335,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 1338,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1339,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2683
						],
						"SignedMath": [
							2788
						],
						"Strings": [
							1593
						]
					},
					"id": 1594,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1340,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1342,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 2684,
							"src": "127:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1341,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2683,
										"src": "135:4:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 2789,
							"src": "165:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1343,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2788,
										"src": "173:10:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1345,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1593,
							"linearizedBaseContracts": [
								1593
							],
							"name": "Strings",
							"nameLocation": "259:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1348,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "273:56:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1346,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1347,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1351,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "335:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1349,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1350,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:6",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1358,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "505:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "520:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:6"
									},
									"src": "470:66:6"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "708:627:6",
										"statements": [
											{
												"id": 1404,
												"nodeType": "UncheckedBlock",
												"src": "718:611:6",
												"statements": [
													{
														"assignments": [
															1367
														],
														"declarations": [
															{
																"constant": false,
																"id": 1367,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1404,
																"src": "742:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1366,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1374,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1370,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1361,
																		"src": "770:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1368,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2683,
																		"src": "759:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2683_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:6",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2503,
																	"src": "759:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:6"
													},
													{
														"assignments": [
															1376
														],
														"declarations": [
															{
																"constant": false,
																"id": 1376,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1404,
																"src": "794:20:6",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1375,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1381,
														"initialValue": {
															"arguments": [
																{
																	"id": 1379,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "828:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1377,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:6"
													},
													{
														"assignments": [
															1383
														],
														"declarations": [
															{
																"constant": false,
																"id": 1383,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 1404,
																"src": "849:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1382,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1384,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:6"
													},
													{
														"AST": {
															"nativeSrc": "930:67:6",
															"nodeType": "YulBlock",
															"src": "930:67:6",
															"statements": [
																{
																	"nativeSrc": "948:35:6",
																	"nodeType": "YulAssignment",
																	"src": "948:35:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:6",
																						"nodeType": "YulLiteral",
																						"src": "971:2:6",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:6"
																				},
																				"nativeSrc": "967:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:6"
																		},
																		"nativeSrc": "955:28:6",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:6"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:6"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1376,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1367,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1383,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:6",
																"valueSize": 1
															}
														],
														"id": 1385,
														"nodeType": "InlineAssembly",
														"src": "921:76:6"
													},
													{
														"body": {
															"id": 1400,
															"nodeType": "Block",
															"src": "1023:269:6",
															"statements": [
																{
																	"expression": {
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:6",
																		"subExpression": {
																			"id": 1387,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1383,
																			"src": "1041:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1389,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:6"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:6",
																		"nodeType": "YulBlock",
																		"src": "1124:86:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:6",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:6",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:6"
																									},
																									"nativeSrc": "1164:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:6"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:6"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:6"
																							},
																							"nativeSrc": "1159:32:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:6"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:6",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:6"
																					},
																					"nativeSrc": "1146:46:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:6"
																				},
																				"nativeSrc": "1146:46:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:6"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1348,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1383,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1361,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:6",
																			"valueSize": 1
																		}
																	],
																	"id": 1390,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:6"
																},
																{
																	"expression": {
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1391,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1361,
																			"src": "1227:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1394,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:6"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1395,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1361,
																			"src": "1260:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1399,
																	"nodeType": "IfStatement",
																	"src": "1256:21:6",
																	"trueBody": {
																		"id": 1398,
																		"nodeType": "Break",
																		"src": "1272:5:6"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1401,
														"nodeType": "WhileStatement",
														"src": "1010:282:6"
													},
													{
														"expression": {
															"id": 1402,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "1312:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1365,
														"id": 1403,
														"nodeType": "Return",
														"src": "1305:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "655:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:6"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "693:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:6"
									},
									"scope": 1593,
									"src": "637:698:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "1511:92:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1417,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "1542:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:6",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1426,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1409,
																			"src": "1588:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1424,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2788,
																			"src": "1573:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2788_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:6",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2787,
																		"src": "1573:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1423,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "1564:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1414,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:6",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1413,
												"id": 1430,
												"nodeType": "Return",
												"src": "1521:75:6"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:6",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "1459:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1408,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:6"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "1496:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1411,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:6"
									},
									"scope": 1593,
									"src": "1435:168:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "1782:100:6",
										"statements": [
											{
												"id": 1450,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1441,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1435,
																	"src": "1835:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1444,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1435,
																				"src": "1854:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1442,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2683,
																				"src": "1842:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2683_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:6",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2625,
																			"src": "1842:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1440,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1452,
																	1535,
																	1555
																],
																"referencedDeclaration": 1535,
																"src": "1823:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1439,
														"id": 1449,
														"nodeType": "Return",
														"src": "1816:49:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "1729:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:6"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "1767:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:6"
									},
									"scope": 1593,
									"src": "1708:174:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "2095:435:6",
										"statements": [
											{
												"assignments": [
													1463
												],
												"declarations": [
													{
														"constant": false,
														"id": 1463,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "2105:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1462,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1465,
												"initialValue": {
													"id": 1464,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1455,
													"src": "2126:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:6"
											},
											{
												"assignments": [
													1467
												],
												"declarations": [
													{
														"constant": false,
														"id": 1467,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "2141:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1466,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1476,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1471,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "2177:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1468,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:6"
											},
											{
												"expression": {
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1477,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2198:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1479,
														"indexExpression": {
															"hexValue": "30",
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:6"
											},
											{
												"expression": {
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1483,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2223:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1485,
														"indexExpression": {
															"hexValue": "31",
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:6"
											},
											{
												"body": {
													"id": 1517,
													"nodeType": "Block",
													"src": "2293:95:6",
													"statements": [
														{
															"expression": {
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1503,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1467,
																		"src": "2307:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1505,
																	"indexExpression": {
																		"id": 1504,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "2314:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1506,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1348,
																		"src": "2319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1510,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1507,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "2330:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1512,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:6"
														},
														{
															"expression": {
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1513,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1463,
																	"src": "2361:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1516,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1497,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "2281:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1518,
												"initializationExpression": {
													"assignments": [
														1490
													],
													"declarations": [
														{
															"constant": false,
															"id": 1490,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1518,
															"src": "2253:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1489,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1496,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1492,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "2269:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:6"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:6",
														"subExpression": {
															"id": 1500,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "2290:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1502,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1519,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "2401:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1528,
												"nodeType": "IfStatement",
												"src": "2397:96:6",
												"trueBody": {
													"id": 1527,
													"nodeType": "Block",
													"src": "2418:75:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1523,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "2468:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1524,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "2475:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1522,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "2439:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1526,
															"nodeType": "RevertStatement",
															"src": "2432:50:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1531,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2516:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1529,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1533,
												"nodeType": "Return",
												"src": "2502:21:6"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2026:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2041:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:6"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2080:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:6"
									},
									"scope": 1593,
									"src": "2005:525:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "2762:75:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1548,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "2807:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1546,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1544,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1551,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "2815:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1543,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1452,
															1535,
															1555
														],
														"referencedDeclaration": 1535,
														"src": "2779:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1542,
												"id": 1553,
												"nodeType": "Return",
												"src": "2772:58:6"
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:6",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2710:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:6"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2747:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1540,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:6"
									},
									"scope": 1593,
									"src": "2689:148:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "2992:104:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1567,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1558,
																		"src": "3015:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1565,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1572,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "3034:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1570,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1579,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "3063:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1577,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1576,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1585,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1560,
																			"src": "3086:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1583,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1582,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1564,
												"id": 1590,
												"nodeType": "Return",
												"src": "3002:87:6"
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:6",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2929:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2946:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:6"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2986:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:6"
									},
									"scope": 1593,
									"src": "2914:182:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1594,
							"src": "251:2847:6",
							"usedErrors": [
								1358
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1617
						],
						"IERC165": [
							1629
						]
					},
					"id": 1618,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1595,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1597,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1618,
							"sourceUnit": 1630,
							"src": "140:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1596,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1629,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1599,
										"name": "IERC165",
										"nameLocations": [
											"687:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1629,
										"src": "687:7:7"
									},
									"id": 1600,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1598,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1617,
							"linearizedBaseContracts": [
								1617,
								1629
							],
							"name": "ERC165",
							"nameLocation": "677:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1628
									],
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "844:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1608,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "861:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1610,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1629,
																	"src": "881:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1629_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1629_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1609,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1629",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1612,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1607,
												"id": 1614,
												"nodeType": "Return",
												"src": "854:47:7"
											}
										]
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "789:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1602,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:7"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "838:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1605,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:7"
									},
									"scope": 1617,
									"src": "762:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1618,
							"src": "659:251:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1629
						]
					},
					"id": 1630,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1619,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1620,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1629,
							"linearizedBaseContracts": [
								1629
							],
							"name": "IERC165",
							"nameLocation": "431:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "817:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1622,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:8"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "860:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1625,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:8"
									},
									"scope": 1629,
									"src": "790:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1630,
							"src": "421:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2683
						]
					},
					"id": 2684,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1631,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1632,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:9",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2683,
							"linearizedBaseContracts": [
								2683
							],
							"name": "Math",
							"nameLocation": "211:4:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:9",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1635,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:9"
									},
									"src": "277:29:9"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1640,
									"members": [
										{
											"id": 1636,
											"name": "Floor",
											"nameLocation": "336:5:9",
											"nodeType": "EnumValue",
											"src": "336:5:9"
										},
										{
											"id": 1637,
											"name": "Ceil",
											"nameLocation": "379:4:9",
											"nodeType": "EnumValue",
											"src": "379:4:9"
										},
										{
											"id": 1638,
											"name": "Trunc",
											"nameLocation": "421:5:9",
											"nodeType": "EnumValue",
											"src": "421:5:9"
										},
										{
											"id": 1639,
											"name": "Expand",
											"nameLocation": "451:6:9",
											"nodeType": "EnumValue",
											"src": "451:6:9"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:9",
									"nodeType": "EnumDefinition",
									"src": "312:169:9"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "661:140:9",
										"statements": [
											{
												"id": 1670,
												"nodeType": "UncheckedBlock",
												"src": "671:124:9",
												"statements": [
													{
														"assignments": [
															1653
														],
														"declarations": [
															{
																"constant": false,
																"id": 1653,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1670,
																"src": "695:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1652,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1657,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1654,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "707:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1655,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "711:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1658,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "730:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1659,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "734:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1665,
														"nodeType": "IfStatement",
														"src": "726:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1663,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1651,
															"id": 1664,
															"nodeType": "Return",
															"src": "737:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1667,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "782:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1668,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1651,
														"id": 1669,
														"nodeType": "Return",
														"src": "768:16:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:9",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "601:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "612:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:9"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "646:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "652:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:9"
									},
									"scope": 2683,
									"src": "585:216:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "984:113:9",
										"statements": [
											{
												"id": 1698,
												"nodeType": "UncheckedBlock",
												"src": "994:97:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1684,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "1022:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1685,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "1026:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1691,
														"nodeType": "IfStatement",
														"src": "1018:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1689,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1683,
															"id": 1690,
															"nodeType": "Return",
															"src": "1029:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1693,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1675,
																		"src": "1074:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1694,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1677,
																		"src": "1078:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1696,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1683,
														"id": 1697,
														"nodeType": "Return",
														"src": "1060:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:9",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "924:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "935:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:9"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "969:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "975:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:9"
									},
									"scope": 2683,
									"src": "908:189:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "1283:417:9",
										"statements": [
											{
												"id": 1740,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1712,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1703,
																"src": "1551:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1719,
														"nodeType": "IfStatement",
														"src": "1547:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1717,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1711,
															"id": 1718,
															"nodeType": "Return",
															"src": "1559:16:9"
														}
													},
													{
														"assignments": [
															1721
														],
														"declarations": [
															{
																"constant": false,
																"id": 1721,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1740,
																"src": "1589:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1725,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1722,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1703,
																"src": "1601:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1723,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "1605:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1726,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "1624:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1727,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1703,
																	"src": "1628:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1729,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "1633:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1735,
														"nodeType": "IfStatement",
														"src": "1620:33:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1733,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1711,
															"id": 1734,
															"nodeType": "Return",
															"src": "1636:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1737,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "1681:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1738,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1711,
														"id": 1739,
														"nodeType": "Return",
														"src": "1667:16:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:9",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1223:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1234:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:9"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1268:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1707,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1274:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:9"
									},
									"scope": 2683,
									"src": "1207:493:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "1887:114:9",
										"statements": [
											{
												"id": 1768,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1754,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1747,
																"src": "1925:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1761,
														"nodeType": "IfStatement",
														"src": "1921:29:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1759,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1753,
															"id": 1760,
															"nodeType": "Return",
															"src": "1933:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1763,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1745,
																		"src": "1978:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1764,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "1982:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1766,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1753,
														"id": 1767,
														"nodeType": "Return",
														"src": "1964:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:9",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1827:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1838:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:9"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1872:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1878:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:9"
									},
									"scope": 2683,
									"src": "1811:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1797,
										"nodeType": "Block",
										"src": "2198:114:9",
										"statements": [
											{
												"id": 1796,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1782,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "2236:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1789,
														"nodeType": "IfStatement",
														"src": "2232:29:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1787,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1781,
															"id": 1788,
															"nodeType": "Return",
															"src": "2244:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1791,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "2289:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1792,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "2293:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1794,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1781,
														"id": 1795,
														"nodeType": "Return",
														"src": "2275:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "2138:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "2149:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:9"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "2183:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "2189:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:9"
									},
									"scope": 2683,
									"src": "2122:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "2449:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1808,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "2466:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1809,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "2470:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1812,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "2478:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:9",
													"trueExpression": {
														"id": 1811,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "2474:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1807,
												"id": 1814,
												"nodeType": "Return",
												"src": "2459:20:9"
											}
										]
									},
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:9",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "2395:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "2406:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:9"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "2440:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:9"
									},
									"scope": 2683,
									"src": "2382:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1833,
										"nodeType": "Block",
										"src": "2624:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1826,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "2641:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1827,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "2645:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1830,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "2653:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:9",
													"trueExpression": {
														"id": 1829,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1819,
														"src": "2649:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1825,
												"id": 1832,
												"nodeType": "Return",
												"src": "2634:20:9"
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:9",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2570:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2581:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:9"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2615:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:9"
									},
									"scope": 2683,
									"src": "2557:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1856,
										"nodeType": "Block",
										"src": "2845:82:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1844,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1837,
																	"src": "2900:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1845,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "2904:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1847,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1848,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1837,
																		"src": "2910:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1849,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1839,
																		"src": "2914:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1851,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1843,
												"id": 1855,
												"nodeType": "Return",
												"src": "2892:28:9"
											}
										]
									},
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:9",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "2791:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "2802:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:9"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "2836:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:9"
									},
									"scope": 2683,
									"src": "2774:153:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "3219:260:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1867,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "3233:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1875,
												"nodeType": "IfStatement",
												"src": "3229:127:9",
												"trueBody": {
													"id": 1874,
													"nodeType": "Block",
													"src": "3241:115:9",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1870,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1860,
																	"src": "3340:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1871,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1862,
																	"src": "3344:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1866,
															"id": 1873,
															"nodeType": "Return",
															"src": "3333:12:9"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1876,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "3444:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1880,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1860,
																			"src": "3458:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1883,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1884,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "3467:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:9",
													"trueExpression": {
														"hexValue": "30",
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1866,
												"id": 1889,
												"nodeType": "Return",
												"src": "3437:35:9"
											}
										]
									},
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:9",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "3165:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "3176:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:9"
									},
									"returnParameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "3210:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:9"
									},
									"scope": 2683,
									"src": "3148:331:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2016,
										"nodeType": "Block",
										"src": "3901:4018:9",
										"statements": [
											{
												"id": 2015,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:9",
												"statements": [
													{
														"assignments": [
															1904
														],
														"declarations": [
															{
																"constant": false,
																"id": 1904,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 2015,
																"src": "4232:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1903,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1908,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1905,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "4248:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1906,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1896,
																"src": "4252:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:9"
													},
													{
														"assignments": [
															1910
														],
														"declarations": [
															{
																"constant": false,
																"id": 1910,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 2015,
																"src": "4312:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1909,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1911,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:9"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:9",
															"nodeType": "YulBlock",
															"src": "4392:122:9",
															"statements": [
																{
																	"nativeSrc": "4410:30:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:9"
																				},
																				"nativeSrc": "4433:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:9"
																		},
																		"nativeSrc": "4420:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:9"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:9",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:9",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:9"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:9"
																				},
																				"nativeSrc": "4470:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:9"
																				},
																				"nativeSrc": "4486:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:9"
																		},
																		"nativeSrc": "4466:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1910,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1894,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1896,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:9",
																"valueSize": 1
															}
														],
														"id": 1912,
														"nodeType": "InlineAssembly",
														"src": "4383:131:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1913,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1910,
																"src": "4595:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1921,
														"nodeType": "IfStatement",
														"src": "4591:368:9",
														"trueBody": {
															"id": 1920,
															"nodeType": "Block",
															"src": "4607:352:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1916,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "4925:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1917,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1898,
																			"src": "4933:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1902,
																	"id": 1919,
																	"nodeType": "Return",
																	"src": "4918:26:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1922,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "5065:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1923,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1910,
																"src": "5080:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1929,
														"nodeType": "IfStatement",
														"src": "5061:88:9",
														"trueBody": {
															"id": 1928,
															"nodeType": "Block",
															"src": "5087:62:9",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1925,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1635,
																			"src": "5112:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 1926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1927,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:9"
																}
															]
														}
													},
													{
														"assignments": [
															1931
														],
														"declarations": [
															{
																"constant": false,
																"id": 1931,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:9",
																"nodeType": "VariableDeclaration",
																"scope": 2015,
																"src": "5404:17:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1930,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1932,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:9"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:9",
															"nodeType": "YulBlock",
															"src": "5444:291:9",
															"statements": [
																{
																	"nativeSrc": "5513:38:9",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:9"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:9"
																		},
																		"nativeSrc": "5526:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:9"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:9",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:9"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:9",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:9"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:9"
																				},
																				"nativeSrc": "5653:20:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:9"
																		},
																		"nativeSrc": "5642:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:9",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:9"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:9"
																		},
																		"nativeSrc": "5700:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1910,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1910,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1931,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1931,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1931,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1894,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1896,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:9",
																"valueSize": 1
															}
														],
														"id": 1933,
														"nodeType": "InlineAssembly",
														"src": "5435:300:9"
													},
													{
														"assignments": [
															1935
														],
														"declarations": [
															{
																"constant": false,
																"id": 1935,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 2015,
																"src": "5939:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1934,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1942,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1936,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "5954:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1938,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1898,
																			"src": "5973:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1940,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:9"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:9",
															"nodeType": "YulBlock",
															"src": "6008:362:9",
															"statements": [
																{
																	"nativeSrc": "6073:37:9",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:9"
																		},
																		"nativeSrc": "6088:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:9"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:9"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:9",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:9"
																		},
																		"nativeSrc": "6186:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:9",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:9",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:9",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:9"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:9"
																						},
																						"nativeSrc": "6333:12:9",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:9"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:9"
																				},
																				"nativeSrc": "6329:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:9"
																		},
																		"nativeSrc": "6325:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:9"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:9",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:9",
																"valueSize": 1
															}
														],
														"id": 1943,
														"nodeType": "InlineAssembly",
														"src": "5999:371:9"
													},
													{
														"expression": {
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1944,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "6436:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1945,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1910,
																	"src": "6445:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1946,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "6453:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1949,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:9"
													},
													{
														"assignments": [
															1951
														],
														"declarations": [
															{
																"constant": false,
																"id": 1951,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 2015,
																"src": "6775:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1950,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1958,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1953,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1898,
																			"src": "6798:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1955,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:9"
													},
													{
														"expression": {
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1959,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7031:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1961,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7046:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1962,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7060:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1966,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:9"
													},
													{
														"expression": {
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1967,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7100:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1969,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7115:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1970,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7129:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1974,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:9"
													},
													{
														"expression": {
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1975,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7170:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1977,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7185:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1978,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7199:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1982,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:9"
													},
													{
														"expression": {
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1983,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7240:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1985,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7255:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1986,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7269:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1990,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:9"
													},
													{
														"expression": {
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1991,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7310:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1993,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7325:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1994,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7339:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1998,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:9"
													},
													{
														"expression": {
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1999,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7381:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2001,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7396:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2002,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7410:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2006,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:9"
													},
													{
														"expression": {
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2007,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1901,
																"src": "7851:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2008,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1904,
																	"src": "7860:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2009,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1951,
																	"src": "7868:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2012,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:9"
													},
													{
														"expression": {
															"id": 2013,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "7896:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1902,
														"id": 2014,
														"nodeType": "Return",
														"src": "7889:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:9",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "3819:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "3830:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "3841:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:9"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "3885:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:9"
									},
									"scope": 2683,
									"src": "3803:4116:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2059,
										"nodeType": "Block",
										"src": "8161:192:9",
										"statements": [
											{
												"assignments": [
													2033
												],
												"declarations": [
													{
														"constant": false,
														"id": 2033,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2059,
														"src": "8171:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2032,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2039,
												"initialValue": {
													"arguments": [
														{
															"id": 2035,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "8195:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2036,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2022,
															"src": "8198:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2037,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "8201:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2034,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2017,
															2060
														],
														"referencedDeclaration": 2017,
														"src": "8188:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2041,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2027,
																"src": "8244:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1640",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1640",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2040,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2682,
															"src": "8227:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1640_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2044,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2020,
																	"src": "8264:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2045,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2022,
																	"src": "8267:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2046,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2024,
																	"src": "8270:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2043,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2056,
												"nodeType": "IfStatement",
												"src": "8223:101:9",
												"trueBody": {
													"id": 2055,
													"nodeType": "Block",
													"src": "8288:36:9",
													"statements": [
														{
															"expression": {
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2051,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2033,
																	"src": "8302:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2054,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2057,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2033,
													"src": "8340:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2031,
												"id": 2058,
												"nodeType": "Return",
												"src": "8333:13:9"
											}
										]
									},
									"documentation": {
										"id": 2018,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:9",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "8067:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "8078:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "8089:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "8110:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2026,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2025,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "8110:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "8110:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:9"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "8152:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:9"
									},
									"scope": 2683,
									"src": "8051:302:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2171,
										"nodeType": "Block",
										"src": "8644:1585:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2068,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "8658:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2074,
												"nodeType": "IfStatement",
												"src": "8654:45:9",
												"trueBody": {
													"id": 2073,
													"nodeType": "Block",
													"src": "8666:33:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2067,
															"id": 2072,
															"nodeType": "Return",
															"src": "8680:8:9"
														}
													]
												}
											},
											{
												"assignments": [
													2076
												],
												"declarations": [
													{
														"constant": false,
														"id": 2076,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2171,
														"src": "9378:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2075,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2085,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2079,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2063,
																			"src": "9406:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2078,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2339,
																			2374
																		],
																		"referencedDeclaration": 2339,
																		"src": "9401:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2083,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:9"
											},
											{
												"id": 2170,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:9",
												"statements": [
													{
														"expression": {
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2086,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "9839:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2087,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "9849:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2088,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "9858:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2089,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "9862:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2092,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2096,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:9"
													},
													{
														"expression": {
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2097,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "9888:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2098,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "9898:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2099,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "9907:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2100,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "9911:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2103,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2107,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:9"
													},
													{
														"expression": {
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2108,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "9937:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2109,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "9947:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2112,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2110,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "9956:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2111,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "9960:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2114,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2118,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:9"
													},
													{
														"expression": {
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2119,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "9986:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2120,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "9996:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2123,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2121,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "10005:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2122,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "10009:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2125,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2129,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:9"
													},
													{
														"expression": {
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2130,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "10035:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2131,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "10045:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2132,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "10054:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2133,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "10058:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2136,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2140,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:9"
													},
													{
														"expression": {
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2141,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "10084:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2142,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "10094:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2143,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "10103:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2144,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "10107:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2147,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2151,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:9"
													},
													{
														"expression": {
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2152,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "10133:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2153,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "10143:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2154,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "10152:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2155,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "10156:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2162,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2164,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "10193:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2165,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2063,
																		"src": "10201:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2166,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2076,
																		"src": "10205:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2163,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "10189:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2067,
														"id": 2169,
														"nodeType": "Return",
														"src": "10182:30:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:9",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "8601:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:9"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "8635:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:9"
									},
									"scope": 2683,
									"src": "8587:1642:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2206,
										"nodeType": "Block",
										"src": "10405:164:9",
										"statements": [
											{
												"id": 2205,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:9",
												"statements": [
													{
														"assignments": [
															2184
														],
														"declarations": [
															{
																"constant": false,
																"id": 2184,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2205,
																"src": "10439:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2183,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2188,
														"initialValue": {
															"arguments": [
																{
																	"id": 2186,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2175,
																	"src": "10461:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2185,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2172,
																	2207
																],
																"referencedDeclaration": 2172,
																"src": "10456:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2189,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2184,
																"src": "10484:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2191,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2178,
																						"src": "10511:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2190,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "10494:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1640_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2195,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2193,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2184,
																						"src": "10524:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2194,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2184,
																						"src": "10533:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2196,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2175,
																					"src": "10542:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2202,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2182,
														"id": 2204,
														"nodeType": "Return",
														"src": "10477:75:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2173,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:9",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "10343:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "10354:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2177,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2176,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "10354:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "10354:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:9"
									},
									"returnParameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "10396:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:9"
									},
									"scope": 2683,
									"src": "10329:240:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2338,
										"nodeType": "Block",
										"src": "10760:922:9",
										"statements": [
											{
												"assignments": [
													2216
												],
												"declarations": [
													{
														"constant": false,
														"id": 2216,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2338,
														"src": "10770:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2215,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2218,
												"initialValue": {
													"hexValue": "30",
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:9"
											},
											{
												"id": 2335,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "10826:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2233,
														"nodeType": "IfStatement",
														"src": "10822:99:9",
														"trueBody": {
															"id": 2232,
															"nodeType": "Block",
															"src": "10844:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2224,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "10862:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2227,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:9"
																},
																{
																	"expression": {
																		"id": 2230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2228,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "10893:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2231,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2234,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "10938:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2248,
														"nodeType": "IfStatement",
														"src": "10934:96:9",
														"trueBody": {
															"id": 2247,
															"nodeType": "Block",
															"src": "10955:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2239,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "10973:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2242,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:9"
																},
																{
																	"expression": {
																		"id": 2245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2243,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11003:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2246,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2249,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11047:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2263,
														"nodeType": "IfStatement",
														"src": "11043:96:9",
														"trueBody": {
															"id": 2262,
															"nodeType": "Block",
															"src": "11064:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2254,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "11082:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2257,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:9"
																},
																{
																	"expression": {
																		"id": 2260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2258,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11112:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2261,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2264,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11156:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2278,
														"nodeType": "IfStatement",
														"src": "11152:96:9",
														"trueBody": {
															"id": 2277,
															"nodeType": "Block",
															"src": "11173:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2269,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "11191:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2272,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:9"
																},
																{
																	"expression": {
																		"id": 2275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2273,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11221:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2276,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2279,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11265:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2293,
														"nodeType": "IfStatement",
														"src": "11261:93:9",
														"trueBody": {
															"id": 2292,
															"nodeType": "Block",
															"src": "11281:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2284,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "11299:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2287,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:9"
																},
																{
																	"expression": {
																		"id": 2290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2288,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11328:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2291,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2294,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11371:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2308,
														"nodeType": "IfStatement",
														"src": "11367:93:9",
														"trueBody": {
															"id": 2307,
															"nodeType": "Block",
															"src": "11387:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2299,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "11405:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2302,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:9"
																},
																{
																	"expression": {
																		"id": 2305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2303,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11434:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2306,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2309,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11477:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2323,
														"nodeType": "IfStatement",
														"src": "11473:93:9",
														"trueBody": {
															"id": 2322,
															"nodeType": "Block",
															"src": "11493:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2314,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "11511:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2317,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:9"
																},
																{
																	"expression": {
																		"id": 2320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2318,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11540:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2321,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2324,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11583:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2334,
														"nodeType": "IfStatement",
														"src": "11579:64:9",
														"trueBody": {
															"id": 2333,
															"nodeType": "Block",
															"src": "11599:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2329,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11617:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2332,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2336,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2216,
													"src": "11669:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2214,
												"id": 2337,
												"nodeType": "Return",
												"src": "11662:13:9"
											}
										]
									},
									"documentation": {
										"id": 2208,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:9",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "10713:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:9"
									},
									"returnParameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "10751:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:9"
									},
									"scope": 2683,
									"src": "10699:983:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2373,
										"nodeType": "Block",
										"src": "11915:168:9",
										"statements": [
											{
												"id": 2372,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:9",
												"statements": [
													{
														"assignments": [
															2351
														],
														"declarations": [
															{
																"constant": false,
																"id": 2351,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2372,
																"src": "11949:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2350,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2355,
														"initialValue": {
															"arguments": [
																{
																	"id": 2353,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2342,
																	"src": "11971:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2352,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2339,
																	2374
																],
																"referencedDeclaration": 2339,
																"src": "11966:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2356,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2351,
																"src": "11998:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2358,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2345,
																						"src": "12025:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2357,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "12008:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1640_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2362,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2360,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2361,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2351,
																						"src": "12043:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2363,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2342,
																					"src": "12052:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2369,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2349,
														"id": 2371,
														"nodeType": "Return",
														"src": "11991:75:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2340,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:9",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "11849:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "11864:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2343,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "11864:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "11864:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:9"
									},
									"returnParameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "11906:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:9"
									},
									"scope": 2683,
									"src": "11835:248:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2502,
										"nodeType": "Block",
										"src": "12276:854:9",
										"statements": [
											{
												"assignments": [
													2383
												],
												"declarations": [
													{
														"constant": false,
														"id": 2383,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2502,
														"src": "12286:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2382,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2385,
												"initialValue": {
													"hexValue": "30",
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:9"
											},
											{
												"id": 2499,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2386,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12342:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2402,
														"nodeType": "IfStatement",
														"src": "12338:103:9",
														"trueBody": {
															"id": 2401,
															"nodeType": "Block",
															"src": "12361:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2391,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12379:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2396,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:9"
																},
																{
																	"expression": {
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2397,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12414:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2400,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2403,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12458:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2419,
														"nodeType": "IfStatement",
														"src": "12454:103:9",
														"trueBody": {
															"id": 2418,
															"nodeType": "Block",
															"src": "12477:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2408,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12495:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2410,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2413,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:9"
																},
																{
																	"expression": {
																		"id": 2416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2414,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12530:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2417,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2420,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12574:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2436,
														"nodeType": "IfStatement",
														"src": "12570:103:9",
														"trueBody": {
															"id": 2435,
															"nodeType": "Block",
															"src": "12593:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2425,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12611:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2430,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:9"
																},
																{
																	"expression": {
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2431,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12646:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2434,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2437,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12690:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2453,
														"nodeType": "IfStatement",
														"src": "12686:100:9",
														"trueBody": {
															"id": 2452,
															"nodeType": "Block",
															"src": "12708:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2442,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12726:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2447,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:9"
																},
																{
																	"expression": {
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2448,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12760:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2451,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2454,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12803:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2470,
														"nodeType": "IfStatement",
														"src": "12799:100:9",
														"trueBody": {
															"id": 2469,
															"nodeType": "Block",
															"src": "12821:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2459,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12839:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2464,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:9"
																},
																{
																	"expression": {
																		"id": 2467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2465,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12873:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2468,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2471,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12916:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2487,
														"nodeType": "IfStatement",
														"src": "12912:100:9",
														"trueBody": {
															"id": 2486,
															"nodeType": "Block",
															"src": "12934:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2476,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12952:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2481,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:9"
																},
																{
																	"expression": {
																		"id": 2484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2482,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12986:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2485,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2488,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "13029:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2498,
														"nodeType": "IfStatement",
														"src": "13025:66:9",
														"trueBody": {
															"id": 2497,
															"nodeType": "Block",
															"src": "13047:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2493,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "13065:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2496,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2500,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2383,
													"src": "13117:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2381,
												"id": 2501,
												"nodeType": "Return",
												"src": "13110:13:9"
											}
										]
									},
									"documentation": {
										"id": 2375,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:9",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "12229:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:9"
									},
									"returnParameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "12267:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:9"
									},
									"scope": 2683,
									"src": "12214:916:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2537,
										"nodeType": "Block",
										"src": "13365:170:9",
										"statements": [
											{
												"id": 2536,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:9",
												"statements": [
													{
														"assignments": [
															2515
														],
														"declarations": [
															{
																"constant": false,
																"id": 2515,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2536,
																"src": "13399:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2519,
														"initialValue": {
															"arguments": [
																{
																	"id": 2517,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2506,
																	"src": "13422:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2516,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2503,
																	2538
																],
																"referencedDeclaration": 2503,
																"src": "13416:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2520,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "13449:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2522,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2509,
																						"src": "13476:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2521,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "13459:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1640_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2526,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2524,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2525,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2515,
																						"src": "13495:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2527,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2506,
																					"src": "13504:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2533,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2513,
														"id": 2535,
														"nodeType": "Return",
														"src": "13442:76:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2504,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:9",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "13299:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "13314:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2507,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "13314:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "13314:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:9"
									},
									"returnParameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "13356:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:9"
									},
									"scope": 2683,
									"src": "13284:251:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2624,
										"nodeType": "Block",
										"src": "13855:600:9",
										"statements": [
											{
												"assignments": [
													2547
												],
												"declarations": [
													{
														"constant": false,
														"id": 2547,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2624,
														"src": "13865:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2546,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2549,
												"initialValue": {
													"hexValue": "30",
													"id": 2548,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:9"
											},
											{
												"id": 2621,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2550,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "13921:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2564,
														"nodeType": "IfStatement",
														"src": "13917:98:9",
														"trueBody": {
															"id": 2563,
															"nodeType": "Block",
															"src": "13939:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 2557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2555,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "13957:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2558,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:9"
																},
																{
																	"expression": {
																		"id": 2561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2559,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "13988:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2562,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2565,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "14032:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2579,
														"nodeType": "IfStatement",
														"src": "14028:95:9",
														"trueBody": {
															"id": 2578,
															"nodeType": "Block",
															"src": "14049:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2570,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "14067:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2573,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:9"
																},
																{
																	"expression": {
																		"id": 2576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2574,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "14097:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2577,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2580,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "14140:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2594,
														"nodeType": "IfStatement",
														"src": "14136:95:9",
														"trueBody": {
															"id": 2593,
															"nodeType": "Block",
															"src": "14157:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "14175:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2588,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:9"
																},
																{
																	"expression": {
																		"id": 2591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2589,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "14205:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2592,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2595,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "14248:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2609,
														"nodeType": "IfStatement",
														"src": "14244:95:9",
														"trueBody": {
															"id": 2608,
															"nodeType": "Block",
															"src": "14265:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2600,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "14283:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2603,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:9"
																},
																{
																	"expression": {
																		"id": 2606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2604,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "14313:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2607,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2610,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "14356:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2620,
														"nodeType": "IfStatement",
														"src": "14352:64:9",
														"trueBody": {
															"id": 2619,
															"nodeType": "Block",
															"src": "14372:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2615,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "14390:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2618,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2622,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2547,
													"src": "14442:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2545,
												"id": 2623,
												"nodeType": "Return",
												"src": "14435:13:9"
											}
										]
									},
									"documentation": {
										"id": 2539,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:9",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2625,
												"src": "13808:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:9"
									},
									"returnParameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2625,
												"src": "13846:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:9"
									},
									"scope": 2683,
									"src": "13792:663:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2662,
										"nodeType": "Block",
										"src": "14692:177:9",
										"statements": [
											{
												"id": 2661,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:9",
												"statements": [
													{
														"assignments": [
															2637
														],
														"declarations": [
															{
																"constant": false,
																"id": 2637,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2661,
																"src": "14726:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2636,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2641,
														"initialValue": {
															"arguments": [
																{
																	"id": 2639,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2628,
																	"src": "14750:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2638,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2625,
																	2663
																],
																"referencedDeclaration": 2625,
																"src": "14743:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2642,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2637,
																"src": "14777:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2644,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2631,
																						"src": "14804:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2643,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "14787:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1640_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2645,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2646,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2649,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2647,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2637,
																									"src": "14823:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2648,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2650,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2652,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2628,
																					"src": "14838:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2658,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2635,
														"id": 2660,
														"nodeType": "Return",
														"src": "14770:82:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2626,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:9",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "14626:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "14641:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2630,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2629,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "14641:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "14641:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:9"
									},
									"returnParameters": {
										"id": 2635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "14683:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:9"
									},
									"scope": 2683,
									"src": "14610:259:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2681,
										"nodeType": "Block",
										"src": "15067:48:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2674,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2667,
																	"src": "15090:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1640",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1640",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2672,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2671,
												"id": 2680,
												"nodeType": "Return",
												"src": "15077:31:9"
											}
										]
									},
									"documentation": {
										"id": 2664,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:9",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "15019:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2665,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "15019:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "15019:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:9"
									},
									"returnParameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "15061:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:9"
									},
									"scope": 2683,
									"src": "14993:122:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2684,
							"src": "203:14914:9",
							"usedErrors": [
								1635
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2788
						]
					},
					"id": 2789,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2685,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2686,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:10",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2788,
							"linearizedBaseContracts": [
								2788
							],
							"name": "SignedMath",
							"nameLocation": "224:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2703,
										"nodeType": "Block",
										"src": "376:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2696,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2689,
															"src": "393:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2697,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2691,
															"src": "397:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2700,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2691,
														"src": "405:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:10",
													"trueExpression": {
														"id": 2699,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2689,
														"src": "401:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2695,
												"id": 2702,
												"nodeType": "Return",
												"src": "386:20:10"
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:10",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "325:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2688,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "335:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2690,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:10"
									},
									"returnParameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "368:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2693,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:10"
									},
									"scope": 2788,
									"src": "312:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2721,
										"nodeType": "Block",
										"src": "555:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2714,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "572:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2715,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2709,
															"src": "576:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2718,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2709,
														"src": "584:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:10",
													"trueExpression": {
														"id": 2717,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2707,
														"src": "580:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2713,
												"id": 2720,
												"nodeType": "Return",
												"src": "565:20:10"
											}
										]
									},
									"documentation": {
										"id": 2705,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:10",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2707,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "504:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2706,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "514:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2708,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:10"
									},
									"returnParameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "547:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2711,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:10"
									},
									"scope": 2788,
									"src": "491:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2765,
										"nodeType": "Block",
										"src": "797:162:10",
										"statements": [
											{
												"assignments": [
													2733
												],
												"declarations": [
													{
														"constant": false,
														"id": 2733,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 2765,
														"src": "859:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2732,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2746,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2734,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2725,
																	"src": "871:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2735,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2727,
																	"src": "875:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2737,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2738,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2725,
																				"src": "882:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2739,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2727,
																				"src": "886:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2741,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2744,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2747,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2733,
														"src": "911:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2752,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2733,
																						"src": "931:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2751,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2750,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2754,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2748,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2757,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2725,
																				"src": "945:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2758,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2727,
																				"src": "949:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2760,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2762,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2731,
												"id": 2764,
												"nodeType": "Return",
												"src": "904:48:10"
											}
										]
									},
									"documentation": {
										"id": 2723,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:10",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2725,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "746:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2724,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "756:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2726,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:10"
									},
									"returnParameters": {
										"id": 2731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "789:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2729,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:10"
									},
									"scope": 2788,
									"src": "729:230:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2786,
										"nodeType": "Block",
										"src": "1103:158:10",
										"statements": [
											{
												"id": 2785,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2776,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2769,
																			"src": "1228:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:10",
																		"subExpression": {
																			"id": 2780,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2769,
																			"src": "1242:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:10",
																	"trueExpression": {
																		"id": 2779,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2769,
																		"src": "1237:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2774,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2773,
														"id": 2784,
														"nodeType": "Return",
														"src": "1213:31:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2767,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:10",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "1061:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2768,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:10"
									},
									"returnParameters": {
										"id": 2773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "1094:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:10"
									},
									"scope": 2788,
									"src": "1048:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2789,
							"src": "216:1047:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:10"
				},
				"id": 10
			},
			"contracts/Monke.sol": {
				"ast": {
					"absolutePath": "contracts/Monke.sol",
					"exportedSymbols": {
						"Context": [
							1338
						],
						"ERC165": [
							1617
						],
						"ERC721": [
							1145
						],
						"IERC165": [
							1629
						],
						"IERC721": [
							1262
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1308
						],
						"IERC721Receiver": [
							1280
						],
						"Monke": [
							2914
						],
						"Strings": [
							1593
						]
					},
					"id": 2915,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2790,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2791,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2915,
							"sourceUnit": 1146,
							"src": "58:57:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2792,
										"name": "ERC721",
										"nameLocations": [
											"135:6:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1145,
										"src": "135:6:11"
									},
									"id": 2793,
									"nodeType": "InheritanceSpecifier",
									"src": "135:6:11"
								}
							],
							"canonicalName": "Monke",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2914,
							"linearizedBaseContracts": [
								2914,
								1145,
								89,
								1308,
								1262,
								1617,
								1629,
								1338
							],
							"name": "Monke",
							"nameLocation": "126:5:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2795,
									"mutability": "mutable",
									"name": "_currentTokenId",
									"nameLocation": "165:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2914,
									"src": "149:31:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2794,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "149:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "Monke.NFTMetadata",
									"id": 2800,
									"members": [
										{
											"constant": false,
											"id": 2797,
											"mutability": "mutable",
											"name": "valid_till",
											"nameLocation": "224:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 2800,
											"src": "216:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2796,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "216:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2799,
											"mutability": "mutable",
											"name": "url",
											"nameLocation": "251:3:11",
											"nodeType": "VariableDeclaration",
											"scope": 2800,
											"src": "244:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2798,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "244:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFTMetadata",
									"nameLocation": "194:11:11",
									"nodeType": "StructDefinition",
									"scope": 2914,
									"src": "187:75:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2805,
									"mutability": "mutable",
									"name": "_tokenMetadata",
									"nameLocation": "308:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 2914,
									"src": "268:54:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTMetadata_$2800_storage_$",
										"typeString": "mapping(uint256 => struct Monke.NFTMetadata)"
									},
									"typeName": {
										"id": 2804,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2801,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "276:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "268:31:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTMetadata_$2800_storage_$",
											"typeString": "mapping(uint256 => struct Monke.NFTMetadata)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2803,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2802,
												"name": "NFTMetadata",
												"nameLocations": [
													"287:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2800,
												"src": "287:11:11"
											},
											"referencedDeclaration": 2800,
											"src": "287:11:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFTMetadata_$2800_storage_ptr",
												"typeString": "struct Monke.NFTMetadata"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2809,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "365:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 2914,
									"src": "329:43:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 2808,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2806,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "337:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "329:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2807,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "348:7:11",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2824,
										"nodeType": "Block",
										"src": "454:72:11",
										"statements": [
											{
												"expression": {
													"id": 2822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2820,
														"name": "_currentTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2795,
														"src": "464:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2821,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "482:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "464:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2823,
												"nodeType": "ExpressionStatement",
												"src": "464:19:11"
											}
										]
									},
									"id": 2825,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2816,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2811,
													"src": "440:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2817,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2813,
													"src": "446:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2818,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2815,
												"name": "ERC721",
												"nameLocations": [
													"433:6:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1145,
												"src": "433:6:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "433:20:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2811,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "405:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2825,
												"src": "391:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "391:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2813,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "425:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2825,
												"src": "411:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "411:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "390:42:11"
									},
									"returnParameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:0:11"
									},
									"scope": 2914,
									"src": "379:147:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2865,
										"nodeType": "Block",
										"src": "632:304:11",
										"statements": [
											{
												"expression": {
													"id": 2837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "642:17:11",
													"subExpression": {
														"id": 2836,
														"name": "_currentTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2795,
														"src": "642:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2838,
												"nodeType": "ExpressionStatement",
												"src": "642:17:11"
											},
											{
												"assignments": [
													2840
												],
												"declarations": [
													{
														"constant": false,
														"id": 2840,
														"mutability": "mutable",
														"name": "newItemId",
														"nameLocation": "677:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 2865,
														"src": "669:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2839,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "669:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2842,
												"initialValue": {
													"id": 2841,
													"name": "_currentTokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2795,
													"src": "689:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "669:35:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2844,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2827,
															"src": "720:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2845,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2840,
															"src": "731:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2843,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "714:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "714:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2847,
												"nodeType": "ExpressionStatement",
												"src": "714:27:11"
											},
											{
												"expression": {
													"id": 2852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2848,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2809,
															"src": "752:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2850,
														"indexExpression": {
															"id": 2849,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2840,
															"src": "760:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "752:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2851,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2827,
														"src": "773:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "752:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2853,
												"nodeType": "ExpressionStatement",
												"src": "752:30:11"
											},
											{
												"expression": {
													"id": 2861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2854,
															"name": "_tokenMetadata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2805,
															"src": "793:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTMetadata_$2800_storage_$",
																"typeString": "mapping(uint256 => struct Monke.NFTMetadata storage ref)"
															}
														},
														"id": 2856,
														"indexExpression": {
															"id": 2855,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2840,
															"src": "808:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "793:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTMetadata_$2800_storage",
															"typeString": "struct Monke.NFTMetadata storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2858,
																"name": "valid_till",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2829,
																"src": "859:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2859,
																"name": "url",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2831,
																"src": "888:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 2857,
															"name": "NFTMetadata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2800,
															"src": "821:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_NFTMetadata_$2800_storage_ptr_$",
																"typeString": "type(struct Monke.NFTMetadata storage pointer)"
															}
														},
														"id": 2860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"847:10:11",
															"883:3:11"
														],
														"names": [
															"valid_till",
															"url"
														],
														"nodeType": "FunctionCall",
														"src": "821:81:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTMetadata_$2800_memory_ptr",
															"typeString": "struct Monke.NFTMetadata memory"
														}
													},
													"src": "793:109:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTMetadata_$2800_storage",
														"typeString": "struct Monke.NFTMetadata storage ref"
													}
												},
												"id": 2862,
												"nodeType": "ExpressionStatement",
												"src": "793:109:11"
											},
											{
												"expression": {
													"id": 2863,
													"name": "newItemId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2840,
													"src": "920:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2835,
												"id": 2864,
												"nodeType": "Return",
												"src": "913:16:11"
											}
										]
									},
									"functionSelector": "1e576912",
									"id": 2866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintNFT",
									"nameLocation": "541:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "557:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "549:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2829,
												"mutability": "mutable",
												"name": "valid_till",
												"nameLocation": "576:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "568:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2831,
												"mutability": "mutable",
												"name": "url",
												"nameLocation": "602:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "588:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2830,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "588:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:58:11"
									},
									"returnParameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "623:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:9:11"
									},
									"scope": 2914,
									"src": "532:404:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2882,
										"nodeType": "Block",
										"src": "1005:54:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2873,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2809,
															"src": "1022:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2875,
														"indexExpression": {
															"id": 2874,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2868,
															"src": "1030:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1022:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1042:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1042:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1042:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1022:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2872,
												"id": 2881,
												"nodeType": "Return",
												"src": "1015:37:11"
											}
										]
									},
									"id": 2883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "951:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "967:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "959:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:17:11"
									},
									"returnParameters": {
										"id": 2872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "999:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2870,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "999:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:6:11"
									},
									"scope": 2914,
									"src": "942:117:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2912,
										"nodeType": "Block",
										"src": "1153:181:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2894,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2885,
																	"src": "1179:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2893,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2883,
																"src": "1171:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 2895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1171:16:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20646f6573206e6f74206578697374",
															"id": 2896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1189:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
																"typeString": "literal_string \"Token does not exist\""
															},
															"value": "Token does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
																"typeString": "literal_string \"Token does not exist\""
															}
														],
														"id": 2892,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1163:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1163:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2898,
												"nodeType": "ExpressionStatement",
												"src": "1163:49:11"
											},
											{
												"assignments": [
													2901
												],
												"declarations": [
													{
														"constant": false,
														"id": 2901,
														"mutability": "mutable",
														"name": "metadata",
														"nameLocation": "1241:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 2912,
														"src": "1222:27:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTMetadata_$2800_memory_ptr",
															"typeString": "struct Monke.NFTMetadata"
														},
														"typeName": {
															"id": 2900,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2899,
																"name": "NFTMetadata",
																"nameLocations": [
																	"1222:11:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2800,
																"src": "1222:11:11"
															},
															"referencedDeclaration": 2800,
															"src": "1222:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTMetadata_$2800_storage_ptr",
																"typeString": "struct Monke.NFTMetadata"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2905,
												"initialValue": {
													"baseExpression": {
														"id": 2902,
														"name": "_tokenMetadata",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2805,
														"src": "1252:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTMetadata_$2800_storage_$",
															"typeString": "mapping(uint256 => struct Monke.NFTMetadata storage ref)"
														}
													},
													"id": 2904,
													"indexExpression": {
														"id": 2903,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2885,
														"src": "1267:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1252:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTMetadata_$2800_storage",
														"typeString": "struct Monke.NFTMetadata storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1222:53:11"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 2906,
																"name": "metadata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2901,
																"src": "1293:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTMetadata_$2800_memory_ptr",
																	"typeString": "struct Monke.NFTMetadata memory"
																}
															},
															"id": 2907,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1302:10:11",
															"memberName": "valid_till",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2797,
															"src": "1293:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2908,
																"name": "metadata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2901,
																"src": "1314:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTMetadata_$2800_memory_ptr",
																	"typeString": "struct Monke.NFTMetadata memory"
																}
															},
															"id": 2909,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1323:3:11",
															"memberName": "url",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2799,
															"src": "1314:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"id": 2910,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1292:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_string_memory_ptr_$",
														"typeString": "tuple(uint256,string memory)"
													}
												},
												"functionReturnParameters": 2891,
												"id": 2911,
												"nodeType": "Return",
												"src": "1285:42:11"
											}
										]
									},
									"functionSelector": "60316801",
									"id": 2913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenMetadata",
									"nameLocation": "1074:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1099:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "1091:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:17:11"
									},
									"returnParameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "1129:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "1138:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2889,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1138:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:24:11"
									},
									"scope": 2914,
									"src": "1065:269:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2915,
							"src": "117:1219:11",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "32:1305:11"
				},
				"id": 11
			}
		}
	}
}